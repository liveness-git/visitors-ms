{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","login/Login.tsx","_components/utils/MyCalendar.tsx","_components/utils/MySnackbar.tsx","_components/utils/MySnackbarContext.tsx","front/BaseTemplate.tsx","_components/utils/MaterialTableIcons.tsx","_components/utils/Http.ts","_components/utils/useLoadData.ts","_components/utils/Spinner.tsx","front/visitList/RowDataDialog.tsx","front/visitList/DataTable.tsx","front/visitList/index.tsx","_styles/OutlookTheme.ts","outlook/BaseTemplate.tsx","outlook/form/InputForm.tsx","outlook/form/index.tsx","outlook/list/InfoList.tsx","outlook/list/index.tsx","Routes.tsx","_components/utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["theme","createTheme","palette","primary","purple","secondary","amber","props","MuiTextField","variant","mixins","toolbar","minHeight","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","form","width","submit","Login","t","useTranslation","classes","useForm","register","handleSubmit","errors","formState","Container","component","maxWidth","className","Avatar","LockOutlined","onSubmit","data","alert","console","log","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","value","message","error","email","helperText","type","password","Button","Box","mt","MyCalendar","Paper","style","overflow","Alert","elevation","root","mySnackberReducer","state","action","open","severity","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","reason","Provider","createStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","container","paddingTop","paddingBottom","link","textDecoration","text","BaseTemplate","currentDate","calendarOnChange","useState","setOpen","AppBar","clsx","Toolbar","noWrap","Drawer","IconButton","onClick","Divider","List","ListItem","button","ListItemIcon","date","onChange","pt","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","http","request","a","fetch","response","json","parsedBody","ok","Error","statusText","get","path","args","method","Request","useLoadData","url","initialData","setData","refresh","setRefresh","isLoading","setIsLoading","reroad","useCallback","fetchData","result","Promise","r","setTimeout","useEffect","tooltip","Spinner","Backdrop","CircularProgress","tableTheme","border","borderTop","borderLeft","borderRight","list","flexFlow","flexBasis","light","borderBottom","field","checkAction","textAlign","RowDataDialog","columns","setSubmited","muiPickContext","useContext","MuiPickersContext","snackberContext","setValue","reset","isSubmitting","checkIn","checkOut","visitorCardNumber","timestamp","format","locale","formData","success","setField","listItems","map","column","Dialog","DialogTitle","DialogContent","dividers","p","disabled","disablePadding","DialogActions","grey","MuiTableRow","DataTable","reload","dialogOpen","setDialogOpen","isSubmited","currentRow","setCurrentRow","hidden","ThemeProvider","onRowClick","selectedRow","handleDialogOpen","options","showTitle","search","headerStyle","icons","VisitList","selectedDate","setSelectedDate","setTabValue","square","TabContext","TabList","indicatorColor","textColor","newValue","Tab","TabPanel","outlookTheme","blue","minRows","MuiInputLabel","layout","marginRight","breakpoints","up","formAction","defaultValues","mode","key","visitCompany","visitorName","reservationName","teaSupply","numberOfVisitor","numberOfEmployee","comment","contactAddr","InputForm","undefined","control","name","rules","render","multiline","Grid","item","xs","md","FormControlLabel","Switch","e","target","checked","inputProps","min","sm","startIcon","VisitorInfoForm","maxHeight","listSubheader","contrastText","fontSize","ul","InfoList","subheader","items","sectionId","ListSubheader","itemId","ListItemText","apptTime","VisitorInfoList","Routes","exact","from","to","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","wait","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4af9235.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: purple,\r\n    secondary: amber,\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version. 1.0.0 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Avatar, Box, Button, Container, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Copyright } from '../_components/Copyright';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype LoginInputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport function Login() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginInputs>();\r\n\r\n  const login: SubmitHandler<LoginInputs> = (data) => {\r\n    alert('test');\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(login)}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label={t('login.form.email')}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            {...register('email', {\r\n              required: t('common.form.required') as string,\r\n              pattern: {\r\n                value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/,\r\n                message: t('login.form.invalid-pattern'),\r\n              },\r\n            })}\r\n            error={!!errors.email}\r\n            helperText={errors.email && errors.email.message}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label={t('login.form.password')}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            {...register('password', {\r\n              required: t('login.form.required') as string,\r\n            })}\r\n            error={!!errors.password}\r\n            helperText={errors.password && errors.password.message}\r\n          />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            {t('login.form.submit')}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { Paper } from '@material-ui/core';\r\nimport { Calendar } from '@material-ui/pickers';\r\n\r\ntype MyCalendarProps = {\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n};\r\n\r\nfunction MyCalendar(props: MyCalendarProps) {\r\n  return (\r\n    <Paper style={{ overflow: 'hidden' }}>\r\n      <Calendar {...props} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n        <Alert onClose={onClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContext = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport const MySnackberContext = createContext({} as MySnackberContext);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの状態管理\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: true,\r\n  };\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport MyCalendar from '../_components/utils/MyCalendar';\r\nimport { MySnackberProvider } from '../_components/utils/MySnackbarContext';\r\n\r\n// import { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 315;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  });\r\n});\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  title: string;\r\n  currentDate: Date | null;\r\n  calendarOnChange: (date: Date | null) => void;\r\n};\r\n\r\nconst BaseTemplate = ({ children, title, currentDate, calendarOnChange }: BaseTemplateProps) => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Visitors for Microsoft\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button onClick={handleDrawerOpen} className={clsx(open && classes.calendarHidden)}>\r\n              <ListItemIcon>\r\n                <CalendarTodayIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n            <ListItem className={clsx(!open && classes.calendarHidden)}>\r\n              <MyCalendar date={currentDate} onChange={calendarOnChange} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography>\r\n            {children}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n","export type PostDataResult<T> = {\r\n  success: boolean;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T;\r\n}\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(path: string, args: RequestInit = { method: 'get' }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_components/utils/Http';\r\n\r\nexport function useLoadData<T>(url: string, initialData: T | undefined) {\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // データ再取得の状態\r\n  const [refresh, setRefresh] = useState(false);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // // エラーの状態\r\n  // const [isError, setIsError] = useState(false);\r\n\r\n  // データ再取得関数\r\n  const reroad = useCallback(() => setRefresh(true), []);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    const result = await get<T>(url);\r\n    await new Promise((r) => setTimeout(r, 2000)); // TODO: debug\r\n    console.log(url); // TODO: debug\r\n    if (result.parsedBody) setData(result.parsedBody);\r\n    setRefresh(false);\r\n    setIsLoading(false);\r\n  }, [url]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // データ更新\r\n  useEffect(() => {\r\n    if (refresh) fetchData();\r\n  }, [fetchData, refresh]);\r\n\r\n  return [{ data, isLoading }, reroad] as const;\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box, List, TextField } from '@material-ui/core';\r\n\r\nimport { format } from 'date-fns';\r\nimport { MuiPickersContext } from '@material-ui/pickers/MuiPickersUtilsProvider';\r\n\r\nimport { VisitorInfoFront } from '_components/VisitorInfo';\r\nimport { post, get, HttpResponse, PostDataResult } from '_components/utils/Http';\r\nimport { MySnackberContext } from '_components/utils/MySnackbarContext';\r\n\r\nimport { RowData, Columns } from './DataTable';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  const border = '1px solid rgba(0, 0, 0, 0.12)';\r\n\r\n  return createStyles({\r\n    border: {\r\n      borderTop: border,\r\n      borderLeft: border,\r\n      borderRight: border,\r\n    },\r\n    list: {\r\n      display: 'flex',\r\n      flexFlow: 'row-wrap',\r\n      width: '100%',\r\n    },\r\n    title: {\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderBottom: border,\r\n    },\r\n    checkAction: {\r\n      textAlign: 'center',\r\n      marginBottom: '10px',\r\n      '& Button': {\r\n        margin: '0 5%',\r\n        width: '40%',\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\ntype Inputs = VisitorInfoFront;\r\n\r\ntype RowDataDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  currentDate: Date;\r\n  data: RowData;\r\n  columns: Columns[];\r\n  setSubmited: ($: boolean) => void;\r\n};\r\n\r\nexport function RowDataDialog(props: RowDataDialogProps) {\r\n  const { open, onClose, currentDate, data, columns, setSubmited } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  const snackberContext = useContext(MySnackberContext);\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<Inputs>();\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [open]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd hh:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('checkIn', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('checkOut', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    let response: HttpResponse<PostDataResult<Inputs>>;\r\n    try {\r\n      // TODO: get→postへの切り替え＋urlの変更\r\n      // response = await post<postDataResult<Inputs>>('http://localhost:3000/', formData);\r\n      response = await get<PostDataResult<Inputs>>('http://localhost:3000/test/testdata2.json');\r\n      console.log('formData', formData);\r\n      console.log('response', response);\r\n\r\n      const result = response.parsedBody;\r\n      if (result!.success) {\r\n        setSubmited(true);\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: t('common.msg.fetch-failed') });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  // 詳細情報のセット\r\n  const setField = (field: string, value: string | boolean | number) => {\r\n    switch (field) {\r\n      // 予約時間\r\n      case 'apptTime':\r\n        const date = format(currentDate, 'yyyy/MM/dd', { locale: muiPickContext?.locale });\r\n        return date + ' ' + value;\r\n      case 'teaSupply':\r\n        return value ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no');\r\n      // その他\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  const listItems = columns.map((column) => {\r\n    let field = column.field;\r\n    let title = column.title;\r\n    let value = data[field as keyof RowData];\r\n    return (\r\n      <li key={field} className={classes.list}>\r\n        <div className={classes.title}>{title}</div>\r\n        <div className={classes.field}>{setField(field, value)}</div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{t('visitdialog.title')}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box p={2}>\r\n          <form>\r\n            {isSubmitting && <span>submitting!</span>}\r\n            <div className={classes.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut || isSubmitting}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn || isSubmitting}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              {/* <input {...register('checkIn')} />\r\n              <input {...register('checkOut')} /> */}\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  required: t('common.form.required') as string,\r\n                })}\r\n                disabled={isSubmitting}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n        <Box p={2}>\r\n          <List className={classes.border} disablePadding={true}>\r\n            {listItems}\r\n          </List>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"secondary\">\r\n          {t('visitdialog.button.cancel')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport MaterialTable, { Column } from '@material-table/core';\r\nimport { tableIcons } from '_components/utils/MaterialTableIcons';\r\n\r\nimport { VisitorInfoMs, VisitorInfoPersonal, VisitorInfoFront } from '_components/VisitorInfo';\r\nimport { useLoadData } from '_components/utils/useLoadData';\r\nimport { Spinner } from '_components/utils/Spinner';\r\n\r\nimport { RowDataDialog } from './RowDataDialog';\r\n\r\nconst tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n});\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  hidden?: boolean;\r\n};\r\n\r\nexport type RowData = VisitorInfoMs & VisitorInfoPersonal & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  url: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, url } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading }, reload] = useLoadData<RowData[]>(url, []);\r\n\r\n  // ダイアログの状態\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  // submitの状態\r\n  const [isSubmited, setSubmited] = useState(false);\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = (selectedRow: RowData) => {\r\n    setDialogOpen(true);\r\n    setCurrentRow(selectedRow);\r\n  };\r\n  // ダイアログを閉じる\r\n  const handleDialogClose = () => {\r\n    if (isSubmited) {\r\n      reload();\r\n      setSubmited(false);\r\n    }\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.visitor-name'), field: 'visitorName', hidden: true },\r\n    { title: t('visittable.header.tea-supply'), field: 'teaSupply', hidden: true },\r\n    { title: t('visittable.header.number-of-visitor'), field: 'numberOfVisitor', hidden: true },\r\n    { title: t('visittable.header.number-of-employee'), field: 'numberOfEmployee', hidden: true },\r\n    { title: t('visittable.header.comment'), field: 'comment', hidden: true },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n    { title: t('visittable.header.contact-addr'), field: 'contactAddr' },\r\n    { title: t('visittable.header.check-in'), field: 'checkIn', type: 'boolean' },\r\n    { title: t('visittable.header.check-out'), field: 'checkOut', type: 'boolean' },\r\n    { title: t('visittable.header.visitor-card-number'), field: 'visitorCardNumber', hidden: true },\r\n  ];\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {currentRow && (\r\n        <RowDataDialog\r\n          open={dialogOpen}\r\n          onClose={handleDialogClose}\r\n          currentDate={currentDate}\r\n          data={currentRow}\r\n          columns={columns}\r\n          setSubmited={setSubmited}\r\n        />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { AppBar, Paper } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport { MuiPickersContext } from '@material-ui/pickers/MuiPickersUtilsProvider';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // タブ切り替え\r\n  const [value, setTabValue] = useState('1');\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const title = selectedDate ? format(selectedDate, 'yyyy/MM/dd', { locale: muiPickContext?.locale }) + ' ' + t('visitlist.title') : '';\r\n\r\n  return (\r\n    <BaseTemplate title={title} currentDate={selectedDate} calendarOnChange={handleDateChange}>\r\n      <Paper square>\r\n        <TabContext value={value}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n              <Tab label={t('visitlist.tab.conference-rooms')} value=\"1\" />\r\n              <Tab label={t('visitlist.tab.free-space')} value=\"2\" />\r\n            </TabList>\r\n          </AppBar>\r\n          <TabPanel value=\"1\">\r\n            <DataTable currentDate={selectedDate!} url=\"/test/testdata1.json\" />\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            <DataTable currentDate={selectedDate!} url=\"/test/testdata3.json\" />\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { createTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nexport const outlookTheme = createTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: blue,\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n    MuiInputLabel: {\r\n      // shrink: true,\r\n    },\r\n  },\r\n});\r\n","import { Box, Paper, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { outlookTheme } from '../_styles/OutlookTheme';\r\nimport { Copyright } from '_components/Copyright';\r\nimport { MySnackberProvider } from '_components/utils/MySnackbarContext';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: outlookTheme.spacing(2),\r\n      marginRight: outlookTheme.spacing(2),\r\n      [outlookTheme.breakpoints.up(600 + outlookTheme.spacing(2) * 2)]: {\r\n        width: 600,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: outlookTheme.spacing(3),\r\n      marginBottom: outlookTheme.spacing(3),\r\n      padding: outlookTheme.spacing(2),\r\n      [outlookTheme.breakpoints.up(600 + outlookTheme.spacing(3) * 2)]: {\r\n        marginTop: outlookTheme.spacing(6),\r\n        marginBottom: outlookTheme.spacing(6),\r\n        padding: outlookTheme.spacing(3),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  title: string;\r\n};\r\n\r\nconst BaseTemplate = ({ children, title }: BaseTemplateProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={outlookTheme}>\r\n      <MySnackberProvider>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n              {title}\r\n            </Typography>\r\n            {children}\r\n          </Paper>\r\n          <Box marginBottom={2}>\r\n            <Copyright />\r\n          </Box>\r\n        </main>\r\n      </MySnackberProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default BaseTemplate;\r\n","import { useEffect } from 'react';\r\n\r\nimport { TextField, Button, Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { post, get, HttpResponse, PostDataResult } from '_components/utils/Http';\r\nimport { useLoadData } from '_components/utils/useLoadData';\r\nimport { Spinner } from '_components/utils/Spinner';\r\n\r\nimport { VisitorInfoPersonal } from '_components/VisitorInfo';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    formAction: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ntype Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfoPersonal;\r\n\r\nconst defaultValues: Inputs = {\r\n  mode: 'ins',\r\n  key: '',\r\n  visitCompany: '',\r\n  visitorName: '',\r\n  reservationName: '',\r\n  teaSupply: false,\r\n  numberOfVisitor: 0,\r\n  numberOfEmployee: 0,\r\n  comment: '',\r\n  contactAddr: '',\r\n};\r\n\r\nexport function InputForm() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading }, reload] = useLoadData<VisitorInfoPersonal>('/test/testdata4.json', undefined);\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<Inputs>({ defaultValues });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (data) {\r\n      reset({\r\n        mode: 'upd',\r\n        key: data.key,\r\n        visitCompany: data.visitCompany,\r\n        visitorName: data.visitorName,\r\n        teaSupply: data.teaSupply,\r\n        numberOfVisitor: data.numberOfVisitor,\r\n        numberOfEmployee: data.numberOfEmployee,\r\n        comment: data.comment,\r\n        reservationName: data.reservationName,\r\n        contactAddr: data.contactAddr,\r\n      });\r\n    } else {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション\r\n  const handleDelete = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // キャンセルアクション\r\n  const handleCancel = () => {\r\n    reload();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    let response: HttpResponse<PostDataResult<Inputs>>;\r\n    try {\r\n      // TODO: get→postへの切り替え＋urlの変更\r\n      // response = await post<postDataResult<Inputs>>('http://localhost:3000/', formData);\r\n      response = await get<PostDataResult<Inputs>>('http://localhost:3000/test/testdata2.json');\r\n      console.log('formData', formData);\r\n      console.log('response', response);\r\n\r\n      const result = response.parsedBody;\r\n      if (result!.success) {\r\n        console.log('Success');\r\n        reload();\r\n      } else {\r\n        console.log('Failed'); //TODO: alert化\r\n      }\r\n    } catch (error) {\r\n      console.log('Error', error); //TODO: alert化\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          name=\"visitCompany\"\r\n          control={control}\r\n          rules={{ required: t('common.form.required') as string }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.visit-company')}\r\n              error={!!errors.visitCompany}\r\n              helperText={errors.visitCompany && errors.visitCompany.message}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"visitorName\"\r\n          control={control}\r\n          // rules={{ required: t('common.form.required') as string }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              multiline\r\n              {...field}\r\n              label={t('visittable.header.visitor-name')}\r\n              error={!!errors.visitorName}\r\n              helperText={errors.visitorName && errors.visitorName.message}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={4}>\r\n            <FormControlLabel\r\n              control={\r\n                <Controller\r\n                  name=\"teaSupply\"\r\n                  control={control}\r\n                  render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} />}\r\n                />\r\n              }\r\n              label={t('visittable.header.tea-supply')}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={4}>\r\n            <Controller\r\n              name=\"numberOfVisitor\"\r\n              control={control}\r\n              rules={{ required: t('common.form.required') as string }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  type=\"number\"\r\n                  inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                  {...field}\r\n                  label={t('visittable.header.number-of-visitor')}\r\n                  error={!!errors.numberOfVisitor}\r\n                  helperText={errors.numberOfVisitor && errors.numberOfVisitor.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={4}>\r\n            <Controller\r\n              name=\"numberOfEmployee\"\r\n              control={control}\r\n              rules={{ required: t('common.form.required') as string }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  type=\"number\"\r\n                  inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                  {...field}\r\n                  label={t('visittable.header.number-of-employee')}\r\n                  error={!!errors.numberOfEmployee}\r\n                  helperText={errors.numberOfEmployee && errors.numberOfEmployee.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Controller\r\n          name=\"comment\"\r\n          control={control}\r\n          // rules={{ required: t('common.form.required') as string }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              multiline\r\n              {...field}\r\n              label={t('visittable.header.comment')}\r\n              error={!!errors.comment}\r\n              helperText={errors.comment && errors.comment.message}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"reservationName\"\r\n          control={control}\r\n          rules={{ required: t('common.form.required') as string }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.reservation-name')}\r\n              error={!!errors.reservationName}\r\n              helperText={errors.reservationName && errors.reservationName.message}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"contactAddr\"\r\n          control={control}\r\n          // rules={{ required: t('common.form.required') as string }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.contact-addr')}\r\n              error={!!errors.contactAddr}\r\n              helperText={errors.contactAddr && errors.contactAddr.message}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n          <Grid item xs={6} sm={4}>\r\n            <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} fullWidth>\r\n              {t('visitorinfoform.form.save')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" startIcon={<DeleteIcon />} fullWidth>\r\n              {t('visitorinfoform.form.delete')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Button onClick={handleCancel} variant=\"contained\" fullWidth>\r\n              {t('visitorinfoform.form.cancel')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { InputForm } from './InputForm';\r\n\r\nexport function VisitorInfoForm() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseTemplate title={t('visitorinfoform.title')}>\r\n      <InputForm />\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText, ListSubheader } from '@material-ui/core';\r\n\r\nimport { VisitorInfoMs, VisitorInfoPersonal, VisitorInfoFront } from '_components/VisitorInfo';\r\nimport { useLoadData } from '_components/utils/useLoadData';\r\nimport { Spinner } from '_components/utils/Spinner';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      position: 'relative',\r\n      overflow: 'auto',\r\n      maxHeight: 500,\r\n      marginTop: 10,\r\n    },\r\n    listSubheader: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main,\r\n      fontSize: '1.2rem',\r\n    },\r\n    ul: {\r\n      padding: 0,\r\n    },\r\n  })\r\n);\r\n\r\ntype VisitorInfo = VisitorInfoMs & VisitorInfoPersonal & VisitorInfoFront;\r\n\r\ntype RowData = {\r\n  date: string;\r\n  list: VisitorInfo[];\r\n};\r\n\r\nexport function InfoList() {\r\n  const classes = useStyles();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading }] = useLoadData<RowData[]>('http://localhost:3000/test/testdata5.json', []);\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      <List className={classes.root} subheader={<li />}>\r\n        {data!.map((items, sectionId) => (\r\n          <li key={`section-${sectionId}`}>\r\n            <ul className={classes.ul}>\r\n              <ListSubheader className={classes.listSubheader}>{`${items.date}`}</ListSubheader>\r\n              {items.list.map((item, itemId) => (\r\n                <ListItem key={`item-${sectionId}-${itemId}`}>\r\n                  <ListItemText primary={`${item.apptTime}  ${item.visitCompany}`} />\r\n                </ListItem>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { InfoList } from './InfoList';\r\n\r\nexport function VisitorInfoList() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseTemplate title={t('visitorinfolist.title')}>\r\n      <InfoList />\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Login } from './login/Login';\r\n// import { Logout } from './logout/Logout';\r\nimport { VisitList } from './front/visitList';\r\nimport { VisitorInfoForm } from './outlook/form';\r\nimport { VisitorInfoList } from './outlook/list';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        {/* <Route exact path=\"/logout\" component={Logout} /> */}\r\n        <Route path=\"/front\" component={VisitList} />\r\n        <Route exact path=\"/outlook/form\" component={VisitorInfoForm} />\r\n        <Route path=\"/outlook\" component={VisitorInfoList} />\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_components/utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}