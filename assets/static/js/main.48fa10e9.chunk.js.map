{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_components/Spinner.tsx","_styles/MakeLoginStyles.ts","_utils/Http.ts","_utils/SessionStrage.ts","login/Main/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Main/Authorize.tsx","_utils/useLoadData.ts","_components/MyLocation.tsx","main/BaseTemplate.tsx","_utils/MaterialTableIcons.tsx","_utils/FetchPostData.ts","main/RowDataBaseDialog.tsx","main/DeleteConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/AddrBookAutoComplete.tsx","main/ControllerTextField.tsx","main/ControllerDateTimePicker.tsx","main/RowDataInputDialog.tsx","main/RowDataReadDialog.tsx","main/DataTableBase.tsx","_styles/DataTableStyle.ts","main/visitList/DataTable.tsx","_components/MyCalendar.tsx","main/visitList/index.tsx","main/byRoom/TimeBar.tsx","main/byRoom/DataTable.tsx","main/CategoryTabContext.tsx","main/byRoom/index.tsx","main/front/RowDataFrontDialog.tsx","main/front/DataTable.tsx","main/front/index.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["theme","createTheme","palette","primary","purple","secondary","amber","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","zIndex","Spinner","classes","Backdrop","className","open","CircularProgress","makeLoginStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","form","width","submit","http","request","a","fetch","response","json","parsedBody","ok","Error","statusText","get","path","args","method","Request","post","body","JSON","stringify","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","removeUserInfo","removeItem","SignIn","t","useTranslation","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","console","log","Container","component","maxWidth","Avatar","LockOutlined","Button","onClick","fullWidth","Box","mt","Alert","elevation","mySnackberReducer","state","action","type","severity","message","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","reason","Provider","value","AuthorizeWrapper","Authorize","snackberContext","useContext","useEffect","sendAuthCode","search","getItem","first","setTimeout","replace","useLoadData","initialData","data","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","MyLocation","locations","history","useHistory","selected","setselected","length","FormControl","size","Select","style","onChange","event","target","push","map","MenuItem","name","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","link","textDecoration","BaseTemplate","adminMode","frontMode","setOpen","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","initialState","signedIn","email","isAdmin","isFront","userStorage","checkAuth","parse","conditionalChildren","error","AppBar","clsx","Toolbar","IconButton","edge","noWrap","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","Drawer","Divider","List","to","ListItem","button","Tooltip","ListItemIcon","ListItemText","pt","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","fetchPostData","formData","Promise","resolve","reject","useRowDataDialogStyles","tableTheme","border","list","borderTop","boxSizing","flexBasis","light","borderLeft","borderBottom","field","borderRight","RowDataBaseDialog","Dialog","DialogTitle","DialogContent","dividers","DialogActions","DeleteConfirmDialog","DialogContentText","autoFocus","RoomInputFields","control","setValue","rooms","roomId","disabledRoom","errors","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","disabledTeaMember","setDisabledTeaMember","teaWatch","getNestedError","px","textAlign","rules","required","render","TextField","select","disabled","label","helperText","option","Grid","item","xs","FormControlLabel","Switch","e","checked","inputProps","min","strRoomStatus","status","RoomReadFields","hiddenTeaSupply","disablePadding","roomName","roomEmail","roomStatus","numberOfVisitor","numberOfEmployee","AddrBookAutoComplete","filter","setFilter","addressbook","loading","onChangeHandle","Autocomplete","multiple","limitTags","undefined","onOpen","options","getOptionLabel","address","renderTags","tagValue","getTagProps","index","Chip","filterSelectedOptions","renderInput","mailto","InputProps","endAdornment","ev","_","ControllerTextField","multiline","ControllerDateTimePicker","getValues","handleDateTimeChange","validate","getTime","DateTimePicker","ampm","format","disablePast","minutesStep","formAction","note","inputformTheme","grey","minRows","change5MinuteIntervals","date","Math","ceil","ADD_ROOM_KEY","getDefaultValues","start","startDate","mode","iCalUId","subject","visitorId","visitCompany","visitorName","authors","optional","resourcies","roomForEdit","comment","contactAddr","startTime","addMinutes","endTime","startTimeBufferMinute","RowDataInputDialog","addDefault","delConfOpen","setDelConfOpen","defaultValues","useForm","handleSubmit","reset","trigger","setError","formState","isDirty","isSubmitting","dirtyFields","Object","keys","reduce","newObj","startDateTime","endDateTime","cloneDeep","hiddenRooms","setHiddenRooms","defaultRoomsUrl","roomsUrl","setRoomsUrl","buildRoomsUrl","onSubmit","inputs","success","r","key","handleSearch","ThemeProvider","isMSMultipleLocations","reservationName","p","startIcon","deleteOk","RowDataReadDialog","apptTime","MuiTableRow","MuiTable","borderCollapse","dataDialogReducer","inputOpen","readOpen","DataTableBase","dataDialogHook","currentRow","handleInputDialogClose","handleReadDialogClose","makeDataTableStyles","cellApptTime","cellRoomName","cellRoomStatus","cellReservationName","cellVisitCompany","cellSubject","cellContactAddr","cellCheckIn","cellCheckOut","declinedApptTime","declinedRoomName","wordBreak","i18next","cellStyle","rowData","charAt","toUpperCase","slice","DataTable","currentDate","setCurrentRow","handleDialogOpen","selectedRow","isAuthor","columns","components","Cell","columnDef","onRowClick","showTitle","headerStyle","tableLayout","icons","keyboardDatePicker","MyCalendar","showTodayButton","KeyboardButtonProps","datePickerArea","actionButtonArea","datePicker","VisitList","selectedDate","setSelectedDate","dataDialogState","dataDialogDispatch","Paper","square","py","sm","shortStyle","halfWidth","scale","transform","x","y","viewHeight","viewBox","viewWidth","fontHeight","timeToPoint","time","boxStyle","zero","startOfDay","differenceInMinutes","getBoxData","end","x2","isSameDay","startOfCurrent","endOfCurrent","endOfDay","isBefore","isAfter","calcX","hour","createTransform","HtmlTooltip","withStyles","text","typography","pxToRem","strokeWidth","stroke","fill","dominantBaseline","cursor","fillOpacity","warning","TimeBar","schedule","events","onClickCallback","setTransform","createScheduleBox","boxData","rx","ry","createEventBox","rectSchedules","useMemo","scheduleItems","rectEvents","preserveAspectRatio","x1","y1","y2","range","$","minX","fontX","svg","closest","createSVGPoint","clientX","clientY","ctm","getScreenCTM","$time","point","pointToTime","matrixTransform","inverse","floor","handleCreateClick","category","timeBars","schedules","sIdx","eIdx","eventsIndex","num","CategoryTabContext","tabPanelContent","tabValue","setTabValue","handleTabChange","newValue","categories","tabList","TabList","indicatorColor","textColor","cate","Tab","tabPanels","TabPanel","cloneElement","TabContext","ByRoom","checkAction","RowDataFrontDialog","frontClasses","muiPickContext","MuiPickersContext","register","checkIn","checkOut","visitorCardNumber","timestamp","locale","autoComplete","frontDialogOpen","setFrontDialogOpen","handleFrontDialogOpen","handleFrontDialogClose","actions","icon","localization","header","filtering","Front","Routes","exact","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","wait","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48fa10e9.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: purple,\r\n    secondary: amber,\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version. 1.0.0 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","export type PostDataResult<T> = {\r\n  success: boolean;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T;\r\n}\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(path: string, args: RequestInit = { method: 'get' }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../../_components/Copyright';\r\nimport { Spinner } from '../../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/MakeLoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Copyright } from '../../_components/Copyright';\r\nimport { Spinner } from '../../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/MakeLoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') }); //TODO:あとでtestが必要\r\n          }\r\n          // urlにロケーションを設定\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(`/${location}/main`);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @returns\r\n */\r\nexport function useLoadData<T>(url: string, initialData: T | undefined) {\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url);\r\n      // await new Promise((r) => setTimeout(r, 1500)); // TODO: debug\r\n      console.log(url); // TODO: debug\r\n      console.log(result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload] as const;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setselected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setselected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getUserInfo, removeUserInfo, saveUserInfo } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { MySnackberProvider } from '../_components/MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 315;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n  });\r\n});\r\n\r\ntype UserStorageState = { signedIn: boolean } & User;\r\ntype UserStorageAction = { type: 'signedIn'; user: User } | { type: 'signedOut' };\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  adminMode?: true;\r\n  frontMode?: true;\r\n};\r\n\r\nconst BaseTemplate = ({ children, adminMode, frontMode }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ログアウトアクション\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeUserInfo(); //sessionStrageからUser情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // ストレージの状態初期値\r\n  const initialState: UserStorageState = {\r\n    signedIn: false,\r\n    email: '',\r\n    name: '',\r\n    isAdmin: false,\r\n    isFront: false,\r\n  };\r\n  // ストレージの状態設定\r\n  const userStorageReducer = (state: UserStorageState, action: UserStorageAction) => {\r\n    switch (action.type) {\r\n      case 'signedIn':\r\n        return { signedIn: true, email: action.user.email, name: action.user.name, isAdmin: action.user.isAdmin, isFront: action.user.isFront };\r\n      case 'signedOut':\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  // ストレージの状態管理\r\n  const [userStorage, dispatch] = useReducer(userStorageReducer, initialState);\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        dispatch({ type: 'signedIn', user: user });\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          dispatch({ type: 'signedIn', user: user });\r\n        } else {\r\n          // TODO: ここに遷移することってある？？？\r\n          removeUserInfo();\r\n          dispatch({ type: 'signedOut' });\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeUserInfo();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  // 権限制御をつけてchildrenを表示する\r\n  let conditionalChildren = children;\r\n  const error = <>{t('common.msg.authority-error')}</>;\r\n  if (adminMode && !userStorage.isAdmin) {\r\n    conditionalChildren = error; // 管理者Roleエラー\r\n  }\r\n  if (frontMode && !userStorage.isFront) {\r\n    conditionalChildren = error; // フロントRoleエラー\r\n  }\r\n\r\n  if (!userStorage.signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Visitors for Microsoft\r\n            </Typography>\r\n            <div>\r\n              <MyLocation></MyLocation>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={accountIconOpen}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}>{userStorage.email}</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                  <ListItemIcon>\r\n                    <EditIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.created-visit-info')} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                  <ListItemIcon>\r\n                    <MeetingRoomIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n              </ListItem>\r\n            </Link>\r\n            {userStorage.isFront && (\r\n              <Link to={`/${match.params.location}/front`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.front') as string}>\r\n                    <ListItemIcon>\r\n                      <PeopleIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.front')} />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            <ListItem button onClick={refreshPage}>\r\n              <Tooltip title={t('main.menu.refresh') as string}>\r\n                <ListItemIcon>\r\n                  <RefreshIcon />\r\n                </ListItemIcon>\r\n              </Tooltip>\r\n              <ListItemText primary={t('main.menu.refresh')} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n            {conditionalChildren}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<T>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T>(url: string, formData: FormDataType<T>) {\r\n  let response: HttpResponse<PostDataResult<T>>;\r\n  try {\r\n    console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T>>(url, formData);\r\n    console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\n\r\nexport const useRowDataDialogStyles = makeStyles((tableTheme) => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n\r\n  return createStyles({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n  });\r\n});\r\n\r\ntype RowDataBaseDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function RowDataBaseDialog(props: RowDataBaseDialogProps) {\r\n  const { open, onClose, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{t('visitdialog.title')}</DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel}>{t('visitdialog.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.delete-confirm-message')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormSetValue, useWatch } from 'react-hook-form';\r\nimport { Box, FormControlLabel, Grid, Switch, TextField } from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomId: string;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, rooms, roomId, disabledRoom, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0);\r\n      setValue(`resourcies.${roomId}.numberOfEmployee`, 0);\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{ required: t('common.form.required') as string }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.name} {'<'}\r\n                {option.email}\r\n                {'>'}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfVisitor`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-visitor')}\r\n                error={!!getNestedError('numberOfVisitor')}\r\n                helperText={!!getNestedError('numberOfVisitor') && getNestedError('numberOfVisitor').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfEmployee`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-employee')}\r\n                error={!!getNestedError('numberOfEmployee')}\r\n                helperText={!!getNestedError('numberOfEmployee') && getNestedError('numberOfEmployee').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { useRowDataDialogStyles } from './RowDataBaseDialog';\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>\r\n            {data.roomName} {'<'}\r\n            {data.roomEmail}\r\n            {'>'}\r\n          </div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field}>{data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}</div>\r\n            </li>\r\n\r\n            {data.teaSupply && (\r\n              <>\r\n                <li key=\"number-of-visitor\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                    {data.numberOfVisitor}\r\n                  </div>\r\n                  <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                    {t('visittable.header.number-of-employee')}\r\n                  </div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                    {data.numberOfEmployee}\r\n                  </div>\r\n                </li>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Chip, CircularProgress, TextField } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\nimport { EmailAddress } from '_models/VisitorInfo';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype AddrBookAutoCompleteType = {\r\n  control: Control<Inputs, object>;\r\n  type: 'authors' | 'required' | 'optional';\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n};\r\n\r\nexport function AddrBookAutoComplete(props: AddrBookAutoCompleteType) {\r\n  const { control, type, errors, disabled, style } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: loading }] = useLoadData<EmailAddress[]>(`/user/addressbook?filter=${filter}`, []);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      name={`mailto.${type}`}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          style={style}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={addressbook ? addressbook : []}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) =>\r\n            tagValue.map((option, index) => <Chip label={option.name} title={option.address} {...getTagProps({ index })} />)\r\n          }\r\n          filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={t(`visittable.header.event-mailto-${type}`)}\r\n              error={!!errors.mailto}\r\n              helperText={errors.mailto && (errors.mailto as any).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerTextFieldProps = {\r\n  name: keyof Inputs;\r\n  control: Control<Inputs, object>;\r\n  label: string;\r\n  required?: true;\r\n  multiline?: true;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerTextField(props: ControllerTextFieldProps) {\r\n  const { name, control, label, required, multiline, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={required ? { required: t('common.form.required') as string } : undefined}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          multiline={multiline}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { addMinutes } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { Room } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { RowDataType, tableTheme } from './DataTableBase';\r\nimport { RowDataBaseDialog, useRowDataDialogStyles } from './RowDataBaseDialog';\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { AddrBookAutoComplete } from './AddrBookAutoComplete';\r\nimport { ControllerTextField } from './ControllerTextField';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nconst startTimeBufferMinute = 0;\r\nconst endTimeBufferMinute = 30; //TODO: Interval config化？\r\nconst change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n\r\nexport type AddDefaultType = {\r\n  start: Date;\r\n  roomId: string;\r\n};\r\n\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (start?: Date, roomId?: string) => {\r\n  const startDate = start ? start : new Date();\r\n  const room = roomId ? roomId : '';\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: '',\r\n    visitorName: '',\r\n    mailto: { authors: [], required: [], optional: [] },\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: room,\r\n        teaSupply: false,\r\n        numberOfVisitor: 0,\r\n        numberOfEmployee: 0,\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: '',\r\n    startTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute),\r\n    endTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute + endTimeBufferMinute),\r\n  } as Inputs;\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload, addDefault } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = getDefaultValues();\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        visitorName: data.visitorName,\r\n        mailto: data.mailto,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfVisitor: data.resourcies[room].numberOfVisitor,\r\n            numberOfEmployee: data.resourcies[room].numberOfEmployee,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues(addDefault?.start, addDefault?.roomId)));\r\n    }\r\n  }, [data, open, reset, addDefault]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [roomsUrl, setRoomsUrl] = useState(defaultRoomsUrl);\r\n  const [{ data: rooms }] = useLoadData<Room[]>(roomsUrl, []);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      // 更新時、会議室変更は出来ないためデフォルト値\r\n      setRoomsUrl(defaultRoomsUrl);\r\n    } else {\r\n      setRoomsUrl(defaultRoomsUrl + `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}`);\r\n    }\r\n  }, [defaultRoomsUrl, getValues]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n  }, [buildRoomsUrl, open]);\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化アクション\r\n  const handleDateTimeChange = () => {\r\n    if (getValues('mode') === 'upd') return; //TODO: 更新時、空き会議室検索は未対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <RowDataBaseDialog open={open} onClose={onClose} data={data}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              {(() => {\r\n                if (data.isMSMultipleLocations) {\r\n                  /* mode=upd & 複数会議室 */\r\n                  return <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>;\r\n                } else {\r\n                  /* mode=upd & 単一会議室 */\r\n                  return (\r\n                    <List disablePadding={true}>\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                      <li key=\"reservation-name\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n                        <div className={classes.field}>{data.reservationName}</div>\r\n                      </li>\r\n                    </List>\r\n                  );\r\n                }\r\n              })()}\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              <AddrBookAutoComplete control={control} type=\"authors\" errors={errors} disabled={true} style={{ display: 'none' }} />\r\n              <AddrBookAutoComplete control={control} type=\"required\" errors={errors} disabled={data?.isMSMultipleLocations} />\r\n              <AddrBookAutoComplete control={control} type=\"optional\" errors={errors} disabled={data?.isMSMultipleLocations} />\r\n\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleDateTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleDateTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ margin: 'auto' }}>\r\n                  <Button onClick={handleSearch} variant=\"contained\" color=\"primary\" fullWidth disabled={data?.isMSMultipleLocations || !hiddenRooms}>\r\n                    {t('visitorinfoform.form.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && <RoomInputFields control={control} setValue={setValue} rooms={rooms} roomId={ADD_ROOM_KEY} errors={errors} />\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      rooms={rooms}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"visitCompany\" control={control} label={t('visittable.header.visit-company')} required errors={errors} />\r\n              <ControllerTextField name=\"visitorName\" control={control} label={t('visittable.header.visitor-name')} errors={errors} />\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} errors={errors} />\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('visitorinfoform.form.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('visitorinfoform.form.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </RowDataBaseDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List } from '@material-ui/core';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RowDataBaseDialog, useRowDataDialogStyles } from './RowDataBaseDialog';\r\nimport { RoomReadFields } from './RoomReadFields';\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <RowDataBaseDialog open={open} onClose={onClose} data={data}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          <li key=\"app-time\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n            <div className={classes.field}>{data.apptTime}</div>\r\n          </li>\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>{data.reservationName}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box p={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n            <div className={classes.field}>{data.visitCompany}</div>\r\n          </li>\r\n          <li key=\"visitor-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n            <div className={classes.field}>{data.visitorName}</div>\r\n          </li>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </RowDataBaseDialog>\r\n  );\r\n}\r\n","import { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\n\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { AddDefaultType, RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport type DataDialogAction =\r\n  | {\r\n      type: 'inputOpen' | 'readOpen' | 'inputClose' | 'readClose';\r\n    }\r\n  | { type: 'addDataOpen'; addDefault?: AddDefaultType };\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false, addDefault: action.addDefault };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n        addDefault={dataDialogHook.state.addDefault}\r\n      />\r\n      {!!currentRow && <RowDataReadDialog open={dataDialogHook.state.readOpen} onClose={handleReadDialogClose} data={currentRow} />}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\nimport { FrontRowData } from 'main/front/DataTable';\r\nimport { RowDataType } from 'main/DataTableBase';\r\n\r\nexport const makeDataTableStyles = () => {\r\n  return makeStyles(() => ({\r\n    //cell default\r\n    cellApptTime: {},\r\n    cellRoomName: {},\r\n    cellRoomStatus: {},\r\n    cellReservationName: {},\r\n    cellVisitCompany: {},\r\n    cellSubject: {},\r\n    cellContactAddr: {},\r\n    cellCheckIn: {},\r\n    cellCheckOut: {},\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  }));\r\n};\r\n\r\nexport const cellStyle = (field: String, rowData: RowDataType | FrontRowData, classes: ClassNameMap<string>) => {\r\n  const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n  return clsx(\r\n    classes[`cell${className}` as keyof ClassNameMap],\r\n    rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n  );\r\n};\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType, tableTheme } from '../DataTableBase';\r\nimport { LocationParams } from '_models/Location';\r\nimport { cellStyle, makeDataTableStyles } from '_styles/DataTableStyle';\r\n\r\nconst useStyles = makeDataTableStyles();\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowDataType[]>(\r\n    `/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowDataType>[]}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n});\r\n\r\ntype MyCalendarProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n};\r\n\r\nfunction MyCalendar({ label, date, onChange }: MyCalendarProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      value={date}\r\n      onChange={onChange}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      size=\"small\"\r\n      className={classes.keyboardDatePicker}\r\n      inputProps={{\r\n        style: {\r\n          width: 85,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import React, { useReducer, useState } from 'react';\r\n\r\nimport { Box, Button, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport MyCalendar from '_components/MyCalendar';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return createStyles({\r\n    datePickerArea: {},\r\n    actionButtonArea: {\r\n      textAlign: 'right',\r\n      margin: 'auto',\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    title: {\r\n      margin: 'auto 0.25em',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  });\r\n});\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dataDialogDispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box px={2} py={1}>\r\n          <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n            <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n              <Grid item className={classes.datePicker}>\r\n                <MyCalendar label={t('main.visitlist.picker-label')} date={selectedDate} onChange={handleDateChange} />\r\n              </Grid>\r\n              <Grid item className={classes.title}>\r\n                <Typography component=\"h5\">{t('main.visitlist.title')}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n                {t('main.visitlist.add-event')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\nimport { differenceInMinutes, endOfDay, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\nimport { Schedule, ScheduleItem } from '_models/Schedule';\r\nimport { DataDialogAction, DataDialogState, RowDataType } from 'main/DataTableBase';\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype BoxStyle = {\r\n  width: number;\r\n  halfWidth: number;\r\n  scale: number;\r\n  transform: Point;\r\n};\r\n\r\ntype BoxData = {\r\n  x: number;\r\n  width: number;\r\n  className: string;\r\n};\r\n\r\n// 8-20\r\nconst shortStyle: BoxStyle = {\r\n  width: 120,\r\n  halfWidth: 60,\r\n  scale: 2,\r\n  transform: { x: -960, y: 0 },\r\n};\r\n// 0-24\r\nconst longStyle: BoxStyle = {\r\n  width: 60,\r\n  halfWidth: 30,\r\n  scale: 1,\r\n  transform: { x: 0, y: 0 },\r\n};\r\n\r\nconst viewWidth = 60 * 24;\r\nconst viewHeight = 70;\r\nconst viewWidthMargin = 1; // lineの一番両端が身切れして他のlineより細くなる現象を避けるため\r\nconst viewWidthWrap = viewWidth + viewWidthMargin * 2;\r\nconst viewBox = `0 0 ${viewWidthWrap} ${viewHeight}`;\r\nconst fontHeight = 30;\r\nconst fontMargin = 5;\r\n\r\nconst timeToPoint = (time: Date, boxStyle: BoxStyle) => {\r\n  const zero = startOfDay(time);\r\n  return differenceInMinutes(time, zero) * boxStyle.scale;\r\n};\r\n\r\nconst pointToTime = (point: number, boxStyle: BoxStyle) => {\r\n  const offset = 0;\r\n  return ((point + offset) / boxStyle.scale) * 60 * 1000;\r\n  // const timestamp = startOfDay(new Date()).getTime() + minutes * 60 * 1000;\r\n  // return new Date(timestamp);\r\n};\r\n\r\nconst getBoxData = (item: ScheduleItem, boxStyle: BoxStyle, currentDate: Date): BoxData => {\r\n  const start = new Date(item.start);\r\n  const end = new Date(item.end);\r\n  let x = timeToPoint(start, boxStyle);\r\n  let x2 = timeToPoint(end, boxStyle);\r\n  // 日を跨ぐ場合\r\n  if (!isSameDay(start, end)) {\r\n    const startOfCurrent = startOfDay(currentDate);\r\n    const endOfCurrent = endOfDay(currentDate);\r\n    // 翌日に続く\r\n    if (isBefore(endOfCurrent, end)) {\r\n      x2 = timeToPoint(endOfCurrent, boxStyle);\r\n    }\r\n    // 前日から続いている\r\n    if (isAfter(startOfCurrent, start)) {\r\n      x = timeToPoint(startOfCurrent, boxStyle);\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    width: x2 - x,\r\n    className: item.status,\r\n  };\r\n};\r\n\r\nconst calcX = (hour: number, width: number) => (hour + 1) * width + viewWidthMargin;\r\n\r\nconst createTransform = (boxStyle: BoxStyle) => {\r\n  return `translate(${boxStyle.transform.x},${boxStyle.transform.y})`;\r\n};\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    color: theme.palette.text.primary,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '5vmin',\r\n      '& svg': {\r\n        fontSize: '1.5rem',\r\n        '& line': {\r\n          strokeWidth: 2,\r\n        },\r\n        '& line.hour-line': {\r\n          stroke: theme.palette.grey[400],\r\n        },\r\n        '& line.hour-half-line': {\r\n          stroke: theme.palette.grey[300],\r\n        },\r\n        '& text': {\r\n          fill: theme.palette.grey[400],\r\n        },\r\n        '& text.subject': {\r\n          fill: '#fff',\r\n          fontSize: '1.2rem',\r\n          dominantBaseline: 'central',\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect': {\r\n          strokeWidth: 1,\r\n          fillOpacity: 0.5,\r\n        },\r\n        '& rect.new-event-bar': {\r\n          fillOpacity: 0,\r\n        },\r\n        '& rect.event': {\r\n          stroke: theme.palette.success.main,\r\n          fill: theme.palette.success.light,\r\n          fillOpacity: 0.9,\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect.wait': {\r\n          stroke: theme.palette.warning.light,\r\n          fill: theme.palette.warning.main,\r\n        },\r\n        '& rect.busy': {\r\n          stroke: theme.palette.error.light,\r\n          fill: theme.palette.error.main,\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      // color: theme.palette.grey[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype TimeBarProps = {\r\n  // rangesw: BoxStyle;\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  schedule: Schedule;\r\n  events: RowDataType[];\r\n  onClickCallback: (rowData: RowDataType) => void;\r\n};\r\n\r\nexport function TimeBar(props: TimeBarProps) {\r\n  const { currentDate, dataDialogHook, schedule, events, onClickCallback } = props;\r\n  const classes = useStyles();\r\n\r\n  const [boxStyle, setBoxStyle] = useState(shortStyle);\r\n  const [transform, setTransform] = useState(createTransform(boxStyle));\r\n\r\n  // useEffect(() => {\r\n  //   setBoxStyle(rangesw ? longStyle : shortStyle);\r\n  // }, [rangesw]);\r\n\r\n  useEffect(() => {\r\n    setTransform(createTransform(boxStyle));\r\n  }, [boxStyle, events]);\r\n\r\n  const hRatio = 1;\r\n  const rectY = fontHeight + (viewHeight - fontHeight) * (1 - hRatio) + 1;\r\n  const rectHeight = (viewHeight - fontHeight) * hRatio - 1;\r\n\r\n  // スケジュール枠の作成\r\n  const createScheduleBox = useCallback(\r\n    (item: ScheduleItem, index: number, roomEmail: string) => {\r\n      const boxData = getBoxData(item, boxStyle, currentDate);\r\n      return (\r\n        <rect\r\n          key={`${roomEmail}-sc-${index}`}\r\n          className={boxData.className}\r\n          x={boxData.x}\r\n          y={rectY}\r\n          width={boxData.width}\r\n          height={rectHeight}\r\n          rx={3}\r\n          ry={5}\r\n        ></rect>\r\n      );\r\n    },\r\n    [boxStyle, rectHeight, rectY, currentDate]\r\n  );\r\n\r\n  // イベント枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createEventBox = useCallback(\r\n    (event: RowDataType, index: number, roomEmail: string) => {\r\n      const item: ScheduleItem = { status: 'event', start: event.startDateTime, end: event.endDateTime };\r\n      const boxData = getBoxData(item, boxStyle, currentDate);\r\n      const x = boxData.x;\r\n      const y = rectY;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${roomEmail}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n          onClick={() => {\r\n            onClickCallback(event);\r\n          }}\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={boxData.className} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, onClickCallback, rectHeight, rectY, currentDate]\r\n  );\r\n\r\n  // 新規作成ボタン(開始時間の指定あり)\r\n  const handleCreateClick = (event: React.MouseEvent<SVGRectElement, MouseEvent>, roomId: string) => {\r\n    const svg: SVGSVGElement | null = event.currentTarget.closest('svg');\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = event.clientX;\r\n    pt.y = event.clientY;\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) return;\r\n\r\n    const svgP = pt.matrixTransform(ctm.inverse());\r\n    const rectX = svgP.x - boxStyle.transform.x + viewWidthMargin;\r\n    const $time = pointToTime(rectX, boxStyle);\r\n    const time = Math.floor($time / 1000 / 60 / 30) * 1000 * 60 * 30; //TODO: Interval config化？\r\n    const start = new Date(startOfDay(currentDate).getTime() + time);\r\n\r\n    dataDialogHook.dispatch({ type: 'addDataOpen', addDefault: { start: start, roomId: roomId } });\r\n  };\r\n\r\n  // スケジュール枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectSchedules = useMemo(() => {\r\n    return <>{schedule.scheduleItems.map((item, index) => createScheduleBox(item, index, schedule.roomEmail))}</>;\r\n  }, [createScheduleBox, schedule]);\r\n\r\n  // イベント枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectEvents = useMemo(() => {\r\n    return <>{events.map((event, index) => createEventBox(event, index, schedule.roomEmail))}</>;\r\n  }, [createEventBox, events, schedule]);\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title}>{schedule.roomName}</Typography>\r\n      <div className={classes.container}>\r\n        <svg viewBox={viewBox} preserveAspectRatio=\"none\">\r\n          <g transform={transform}>\r\n            <line className=\"hour-line\" x1={0} y1={0} x2={0} y2={viewHeight}></line>\r\n            <line className=\"hour-half-line\" x1={boxStyle.halfWidth} y1={fontHeight} x2={boxStyle.halfWidth} y2={viewHeight}></line>\r\n            {_.range(0, 24).map(($) => {\r\n              const x = calcX($, boxStyle.width);\r\n              const minX = x + boxStyle.halfWidth;\r\n              const fontX = $ * boxStyle.width + fontMargin;\r\n              return (\r\n                <Fragment key={`fragment-${$}`}>\r\n                  <line key={`hour-line-${$}`} className=\"hour-line\" x1={x} y1={0} x2={x} y2={viewHeight}></line>\r\n                  <line key={`hour-half-line-${$}`} className=\"hour-half-line\" x1={minX} y1={fontHeight} x2={minX} y2={viewHeight}></line>\r\n                  <text key={`hour-text-${$}`} x={fontX} y={fontHeight - 5}>\r\n                    {$}\r\n                  </text>\r\n                </Fragment>\r\n              );\r\n            })}\r\n            <rect\r\n              className=\"new-event-bar\"\r\n              x={0}\r\n              y={rectY}\r\n              width={calcX(24, boxStyle.width)}\r\n              height={rectHeight}\r\n              onClick={(e) => handleCreateClick(e, schedule.roomId)}\r\n            ></rect>\r\n            {rectSchedules}\r\n            {rectEvents}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { TimeBar } from './TimeBar';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  category: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, category } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<TimeBarDataType>(\r\n    `/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${category}`,\r\n    undefined\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            currentDate={currentDate}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={data!.events.filter((_event, eIdx) => schedule.eventsIndex.some((num: number) => num === eIdx))}\r\n            onClickCallback={handleDialogOpen}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [currentDate, data, dataDialogHook, handleDialogOpen]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { cloneElement, useMemo, useState } from 'react';\r\n\r\nimport { AppBar, Tab } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nimport { Category } from '_models/Category';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\ntype CategoryTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n};\r\n\r\nexport function CategoryTabContext(props: CategoryTabContextProps) {\r\n  const { tabPanelContent } = props;\r\n\r\n  // タブ切り替え\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // カテゴリ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  // タブリストの表示（不要レンダリングが起きるためメモ化）\r\n  const tabList = useMemo(() => {\r\n    return (\r\n      <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n        {categories?.map((cate, index) => (\r\n          <Tab key={`tab-${index}`} label={cate.name} value={`${index}`} />\r\n        ))}\r\n      </TabList>\r\n    );\r\n  }, [categories]);\r\n\r\n  // タブパネルの表示（不要レンダリングが起きるためメモ化）\r\n  const tabPanels = useMemo(() => {\r\n    return (\r\n      <>\r\n        {categories?.map((cate, index) => {\r\n          return (\r\n            <TabPanel key={`tab-panel-${index}`} value={`${index}`}>\r\n              {cloneElement(tabPanelContent, { category: cate.id })}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [categories, tabPanelContent]);\r\n\r\n  return (\r\n    <TabContext value={tabValue}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        {tabList}\r\n      </AppBar>\r\n      {tabPanels}\r\n    </TabContext>\r\n  );\r\n}\r\n","import React, { useReducer, useState } from 'react';\r\n\r\nimport { Box, Button, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { CategoryTabContext } from 'main/CategoryTabContext';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return createStyles({\r\n    datePickerArea: {},\r\n    actionButtonArea: {\r\n      textAlign: 'right',\r\n      margin: 'auto',\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    keyboardDatePicker: {\r\n      '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n    },\r\n    title: {\r\n      margin: 'auto 0.25em',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  });\r\n});\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dataDialogDispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box px={2} py={1}>\r\n          <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n            <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n              <Grid item className={classes.datePicker}>\r\n                <MyCalendar label={t('main.byroom.picker-label')} date={selectedDate} onChange={handleDateChange} />\r\n              </Grid>\r\n              <Grid item className={classes.title}>\r\n                <Typography component=\"h5\">{t('main.byroom.title')}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n                {t('main.byroom.add-event')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <CategoryTabContext\r\n          tabPanelContent={\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} category=\"dummyId\" />\r\n          }\r\n        />\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Box, Button, List, makeStyles, TextField } from '@material-ui/core';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport { FrontRowData } from './DataTable';\r\nimport { RowDataBaseDialog, useRowDataDialogStyles } from 'main/RowDataBaseDialog';\r\nimport { RoomReadFields } from 'main/RoomReadFields';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { FrontInputType, VisitorInfoFront } from '_models/VisitorInfo';\r\n\r\nconst useStyles = makeStyles({\r\n  checkAction: {\r\n    textAlign: 'center',\r\n    marginBottom: '10px',\r\n    '& Button': {\r\n      margin: '0 5%',\r\n      width: '40%',\r\n    },\r\n  },\r\n});\r\n\r\ntype Inputs = {\r\n  mode: 'checkin' | 'checkout';\r\n} & VisitorInfoFront &\r\n  FrontInputType;\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: FrontRowData;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataFrontDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n  const frontClasses = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>();\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd hh:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('mode', 'checkin');\r\n    setValue('checkIn', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('mode', 'checkout');\r\n    setValue('checkOut', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData(`/front/${formData.mode}`, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <RowDataBaseDialog open={open} onClose={onClose} data={data}>\r\n        <Box p={2}>\r\n          <form>\r\n            <div className={frontClasses.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  // required: t('common.form.required') as string,\r\n                })}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>{data.apptTime}</div>\r\n            </li>\r\n            <li key=\"check-in\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-in')}</div>\r\n              <div className={classes.field}>{data.checkIn}</div>\r\n            </li>\r\n            <li key=\"check-out\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-out')}</div>\r\n              <div className={classes.field}>{data.checkOut}</div>\r\n            </li>\r\n            {/* <li key=\"event-subject\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n              <div className={classes.field}>{data.subject}</div>\r\n            </li> */}\r\n            <li key=\"visit-company\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n              <div className={classes.field}>{data.visitCompany}</div>\r\n            </li>\r\n            <li key=\"visitor-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n              <div className={classes.field}>{data.visitorName}</div>\r\n            </li>\r\n            <li key=\"comment\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n              <div className={classes.field}>{data.comment}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        {Object.keys(data.resourcies).map((roomId) => {\r\n          return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n        })}\r\n\r\n        <Box p={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"reservation-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n              <div className={classes.field}>{data.reservationName}</div>\r\n            </li>\r\n            <li key=\"contact-addr\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n              <div className={classes.field}>{data.contactAddr}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n      </RowDataBaseDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport { tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType, tableTheme } from '../DataTableBase';\r\nimport { RowDataFrontDialog } from './RowDataFrontDialog';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { cellStyle, makeDataTableStyles } from '_styles/DataTableStyle';\r\n\r\nconst useStyles = makeDataTableStyles();\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n};\r\n\r\nexport type FrontRowData = RowDataType & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  category: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, category } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<FrontRowData[]>(\r\n    `/front/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${category}`,\r\n    []\r\n  );\r\n\r\n  // フロント用ダイアログの状態\r\n  const [frontDialogOpen, setFrontDialogOpen] = useState(false);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<FrontRowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: FrontRowData) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // フロント用ダイアログを開く\r\n  const handleFrontDialogOpen = useCallback((selectedRow: FrontRowData) => {\r\n    setFrontDialogOpen(true);\r\n    setCurrentRow(selectedRow);\r\n  }, []);\r\n  // フロント用ダイアログを閉じる\r\n  const handleFrontDialogClose = async () => {\r\n    setFrontDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.visitor-name'), field: 'visitorName' },\r\n    { title: t('visittable.header.check-in'), field: 'checkIn', type: 'boolean' },\r\n    { title: t('visittable.header.check-out'), field: 'checkOut', type: 'boolean' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<FrontRowData>[]}\r\n        components={{\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleFrontDialogOpen(selectedRow)}\r\n        actions={[\r\n          {\r\n            icon: () => <BorderColorIcon />,\r\n            tooltip: t('visittable.header.edit-action'),\r\n            onClick: (_, rowData) => !!rowData && handleDialogOpen(rowData as FrontRowData),\r\n          },\r\n        ]}\r\n        localization={{\r\n          header: { actions: '' },\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          filtering: true,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          // actionsColumnIndex: -1,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {currentRow && <RowDataFrontDialog open={frontDialogOpen} onClose={handleFrontDialogClose} data={currentRow} reload={reload} />}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import React, { useReducer, useState } from 'react';\r\n\r\nimport { Box, Button, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { DataTable } from './DataTable';\r\nimport { CategoryTabContext } from 'main/CategoryTabContext';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return createStyles({\r\n    datePickerArea: {},\r\n    actionButtonArea: {\r\n      textAlign: 'right',\r\n      margin: 'auto',\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    title: {\r\n      margin: 'auto 0.25em',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  });\r\n});\r\n\r\nexport function Front() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dataDialogDispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate frontMode>\r\n      <Paper square>\r\n        <Box px={2} py={1}>\r\n          <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n            <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n              <Grid item className={classes.datePicker}>\r\n                <MyCalendar label={t('main.front.picker-label')} date={selectedDate} onChange={handleDateChange} />\r\n              </Grid>\r\n              <Grid item className={classes.title}>\r\n                <Typography component=\"h5\">{t('main.front.title')}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n                {t('main.front.add-event')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <CategoryTabContext\r\n          tabPanelContent={\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} category=\"dummyId\" />\r\n          }\r\n        />\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { SignIn } from './login/Main';\r\nimport { AuthorizeWrapper } from 'login/Main/Authorize';\r\nimport { VisitList } from './main/visitList';\r\nimport { ByRoom } from './main/byRoom';\r\nimport { Front } from './main/front';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main\" component={VisitList} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/front\" component={Front} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}