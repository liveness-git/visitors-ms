{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_components/Spinner.tsx","_styles/LoginStyles.ts","_utils/Http.ts","_utils/SessionStrage.ts","login/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Authorize.tsx","_utils/useLoadData.ts","_components/MyLocation.tsx","_components/BaseTemplate.tsx","_utils/useSelectedDate.ts","_utils/MaterialTableIcons.tsx","_utils/UseDataTable.ts","_styles/VisitorTableStyle.ts","_styles/TableTheme.ts","_models/Room.ts","_utils/FetchPostData.ts","_components/ControllerTextField.tsx","_components/UserStatusIcon.tsx","_components/MyChip.tsx","_components/AddrBookAutoComplete.tsx","_components/MyDialog.tsx","_models/User.ts","_components/UserStatusIconNote.tsx","_components/MyTimePicker.tsx","_components/MyConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/ControllerDateTimePicker.tsx","main/ReservationNameField.tsx","main/LastUpdatedField.tsx","_models/PatternedRecurrence.ts","_components/MyCalendar.tsx","main/DateTimePickerFields.tsx","main/RecurrenceInfo.tsx","main/RecurrenceFields.tsx","main/VisitCompanyInputFields.tsx","main/RowDataInputDialog.tsx","_components/AddrBookUserDisplay.tsx","main/RowDataReadDialog.tsx","main/RecurrenceConfirmDialog.tsx","main/DataTableBase.tsx","main/EventTypeIcon.tsx","main/visitList/DataTable.tsx","main/HeaderActions.tsx","main/visitList/index.tsx","main/TimeBar.tsx","main/TimeBarRangeToggle.tsx","main/byRoom/DataTable.tsx","main/byRoom/DataTableWeekly.tsx","_components/MyTabContext.tsx","main/CategoryTabContext.tsx","main/RoomTabContext.tsx","main/byRoom/index.tsx","main/front/RowDataFrontDialog.tsx","main/front/DataTable.tsx","main/front/ExportCsvDialog.tsx","main/front/index.tsx","master/RowDataInputDialog.tsx","master/DataTableBase.tsx","master/DataTable.tsx","master/HeaderActions.tsx","_models/Role.ts","master/role/DataInputs.tsx","master/role/index.tsx","master/location/DataInputs.tsx","master/location/index.tsx","master/category/DataInputs.tsx","master/category/index.tsx","master/room/DataInputs.tsx","master/room/index.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["defaultPrimary","light","main","dark","contrastText","theme","createTheme","palette","primary","secondary","amber","typography","button","textTransform","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","zIndex","Spinner","classes","Backdrop","className","open","CircularProgress","makeLoginStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","ABORT_REQUEST_CONTROLLERS","Map","http","request","a","fetch","response","json","parsedBody","ok","console","error","body","Error","statusText","get","path","signalKey","undefined","args","method","signal","abortAndGetSignalSafe","Request","post","JSON","stringify","abortRequestSafe","key","reason","abort","newController","AbortController","set","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","reload_key","saveReloadState","item","value","states","parse","getItem","getReloadState","reloadFlg_key","getReloadStateFlg","removeReloadStateFlg","removeItem","removeSessionStrage","SignIn","t","useTranslation","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","log","Container","component","maxWidth","Avatar","LockOutlined","Button","onClick","fullWidth","Box","mt","Alert","elevation","mySnackberReducer","state","action","type","severity","message","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","Provider","AuthorizeWrapper","Authorize","snackberContext","useContext","useEffect","sendAuthCode","search","first","setTimeout","replace","useLoadData","initUrl","initialData","setUrl","data","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","MyLocation","locations","history","useHistory","selected","setSelected","length","FormControl","size","Select","style","onChange","event","target","push","map","MenuItem","name","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","link","textDecoration","nested","paddingLeft","SessionStrageContext","BaseTemplate","adminMode","frontMode","menuOpen","setOpen","settingsOpen","setSettingsOpen","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","initialState","signedIn","email","isAdmin","isFront","contactAddr","userStorage","checkAuth","conditionalChildren","AppBar","clsx","Toolbar","IconButton","edge","noWrap","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","Drawer","Divider","List","to","ListItem","Tooltip","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","pt","useSelectedDate","selectedDate","setSelectedDate","weekly","setWeekly","count","setCount","getTime","toString","date","addDays","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","pageingOntions","paging","pageSize","pageSizeOptions","UseDataTable","dataDialogHook","currentRow","setCurrentRow","handleDialogOpen","selectedRow","isAuthor","seriesMasterId","handleRecConfClose","isCancel","master","frontCellPadding","makeVisitorTableStyles","cellPadding","cellApptTime","cellRoomName","cellTeaSupply","cellRoomStatus","cellReservationName","cellVisitCompany","cellSubject","cellContactAddr","cellCheckIn","overflowWrap","cellCheckOut","cellComment","declinedApptTime","declinedRoomName","wordBreak","border","i18next","cellStyle","field","rowData","charAt","toUpperCase","slice","roomStatus","tableTheme","grey","MuiTableRow","MuiTable","borderCollapse","makeTableDialogStyle","list","borderTop","boxSizing","flexBasis","borderLeft","borderBottom","borderRight","fieldSlim","bottomLine","nameOfRoomType","nameOfUsageRangeForVisitor","nameOfUsageRange","fetchPostData","formData","Promise","resolve","reject","ControllerTextField","control","label","required","selectList","multiline","disabled","validation","errors","rules","render","TextField","select","helperText","option","index","iconFontSize","UserStatusIcon","status","useTheme","text","warning","success","MyChip","other","Chip","icon","address","AddrBookAutoComplete","filter","setFilter","addressbook","loading","onChangeHandle","Autocomplete","multiple","limitTags","onOpen","options","filterOptions","_state","noOptionsText","getOptionLabel","renderTags","tagValue","getTagProps","filterSelectedOptions","getOptionSelected","renderInput","InputProps","endAdornment","ev","_","closeButton","right","top","MyDialog","Dialog","DialogTitle","DialogContent","dividers","DialogActions","nameOfUserStatus","UserStatusIconNote","kebabCase","timerSelectRoot","timerSelect","colon","change5MinuteIntervals","Math","ceil","calcStartTime","start","addMinutes","calcEndTimeFromStartTime","startTimeBufferMinute","hoursList","Array","i","minutesList","MyTimePicker","Grid","getHours","e","getMonth","getDate","Number","getMinutes","inputProps","MyConfirmDialog","DialogContentText","autoFocus","roomComment","lineHeight","RoomInputFields","setValue","getValues","clearErrors","rooms","roomsLoading","roomId","disabledVisitor","disabledRoom","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","shouldDirty","disabledTeaMember","setDisabledTeaMember","teaWatch","setRoomComment","comment","getNestedError","px","InputAdornment","validate","xs","sm","FormControlLabel","Switch","checked","opacity","min","textAlign","useRowDataDialogStyles","strRoomStatus","RoomReadFields","hiddenTeaSupply","disablePadding","roomName","numberOfTeaSupply","teaDetails","ControllerDateTimePicker","handleDateTimeChange","DateTimePicker","ampm","format","disablePast","minutesStep","ReservationNameField","flexWrap","verticalAlign","LastUpdatedField","datetime","muiPickContext","MuiPickersContext","locale","nameOfRecurrencePatternType","nameOfDayOfWeek","nameOfWeekIndex","nameOfRecurrenceRangeType","keyboardDatePicker","MyCalendar","showTodayButton","KeyboardButtonProps","invalidDateMessage","FormHelperText","minDateMessage","maxDateMessage","time","timeBetween","DateTimePickerFields","end","onDateChange","onStartChange","onEndChange","errMsg","RecurrenceInfo","recurrence","daysOfWeek","pattern","week","join","dayOfMonth","month","patternType","detail","num","interval","every","apptTime","range","startDate","endDate","inputInterval","inputDayOfMonth","datePicker","initCheckBoxWeek","reduce","newObj","getDefaultValues","startTime","endTime","checkBoxWeek","cloneDeep","getDay","addMonths","startOfDay","numberOfOccurrences","defaultInputError","RecurrenceFields","activeRoomSelect","activeSearchButton","confOpen","setConfOpen","inputValues","setInputValues","setErrMsg","defaultValues","handleOpen","handleConfirmOk","iCalUId","checkInstances","isIncludesException","handleOk","errorMsg","newEndDate","addYears","Object","keys","strDate","handleCancel","patternTypeList","dayOfWeekList","weekIndexList","monthList","WeekCheckBox","useMemo","FormGroup","row","Checkbox","values","WeekSelectBox","IndexSelectBox","DayOfMonthText","max","MonthSelectBox","startIcon","renderToString","minRows","py","md","p","AlertTitle","VisitCompanyInputFields","remove","visitCompany","rep","formAction","note","usageGuide","inputformTheme","MuiOutlinedInput","adornedEnd","ADD_ROOM_KEY","FETCH_ROOMS_SELECT","usage","usageRange","mode","subject","visitorId","numberOfVisitor","numberOfEmployee","mailto","authors","optional","resourcies","roomForEdit","cloneDeepWithoutFalse","obj","withoutFalse","transform","isObject","isEmpty","RowDataInputDialog","addDefault","sessionStrageContext","delConfOpen","setDelConfOpen","useForm","reValidateMode","handleSubmit","reset","trigger","setError","formState","isDirty","isSubmitting","dirtyFields","startDateTime","endDateTime","hiddenRooms","setHiddenRooms","usageRangeWatch","defaultRoomsUrl","buildRoomsUrl","setDisabledVisitor","startTimeWatch","endTimeWatch","useFieldArray","visitCompanyFields","fields","visitCompanyAppend","append","visitCompanyRemove","visitCompanyWatch","onSubmit","inputs","r","handleSearch","handleStartTimeChange","handleEndTimeChange","removeVisitorCompany","ThemeProvider","isMSMultipleLocations","reservationName","reservationStatus","pb","lastUpdated","deleteOk","eventType","AddrBookUserDisplay","propsKey","RowDataReadDialog","isAttendees","gutterBottom","co","RecurrenceConfirmDialog","answer","setAnswer","handleOkClose","handleCancelClose","RadioGroup","Radio","dataDialogReducer","inputOpen","readOpen","recConfOpen","DataTableBase","onRecConfClose","handleInputDialogClose","handleReadDialogClose","EventTypeIcon","visitCompanies","DataTable","currentDate","columns","customSort","b","components","Cell","columnDef","onRowClick","showTitle","headerStyle","tableLayout","icons","arrowLeft","arrowRight","arrowIcon","HeaderActions","subtitle","onDatePrev","onDateNext","actionButtons","VisitList","createdOnly","setCreatedOnly","handleDateChange","handleDatePrev","handleDateNext","dataDialogState","dataDialogDispatch","Paper","square","shortStyle","halfWidth","scale","x","y","longStyle","fontHeight","timeToPoint","boxStyle","zero","differenceInMinutes","getBoxData","x2","isSameDay","startOfCurrent","endOfCurrent","endOfDay","isBefore","isAfter","calcX","hour","createTransform","HtmlTooltip","withStyles","pxToRem","strokeWidth","stroke","fill","dominantBaseline","cursor","fillOpacity","info","TimeBar","rangeToggle","schedule","events","onClickCallback","keyLabel","keyValue","onTitleClick","setBoxStyle","setTransform","rectY","rectHeight","viewHeightDup","scheduleItems","createScheduleBox","timestamp","rowIndex","boxData","rx","ry","createEventBox","cleaningTime","myEvent","viewBox","rectSchedules","rectEvents","categoryId","viewWidth","preserveAspectRatio","x1","y1","y2","$","minX","fontX","svg","closest","createSVGPoint","clientX","clientY","ctm","getScreenCTM","$time","point","pointToTime","matrixTransform","inverse","floor","handleCreateClick","RangeToggleGroup","ToggleButtonGroup","RangeToggle","ToggleButton","TimeBarRangeToggle","onChangeRangeToggle","justify","exclusive","tabKey","timeBars","schedules","sIdx","eventsIndex","eventIndex","roomEmail","DataTableWeekly","MyTabContext","tabPanelContent","activateTab","setActivateTab","tabValue","setTabValue","handleTabChange","newValue","tabList","TabList","indicatorColor","textColor","Tab","tabPanels","TabPanel","cloneElement","TabContext","CategoryTabContext","RoomTabContext","byRoomReducer","changeTab","titleLabel","subtitleLabel","ByRoom","byRoomState","byRoomDispatch","setRangeToggle","handleRangeToggleChange","_categoryId","_roomId","checkAction","RowDataFrontDialog","frontClasses","register","checkIn","checkOut","visitorCardNumber","autoComplete","frontDialogOpen","setFrontDialogOpen","fronCurrentRow","setFronCurrentRow","handleFrontDialogClose","split","strNumOfTeaSupply","strNumOfVisitor","strNumOfEmployee","aRoomId","bRoomId","handleFrontDialogOpen","actions","localization","header","between","nameOfCsvHeaders","ExportCsvDialog","csvLinkRef","useRef","csvData","setCsvData","addWeeks","handleExportCsv","headers","filename","current","click","handleStartDateChange","Front","exportCsvOpen","setExportCsvOpen","csvButton","inputFields","methods","actionButtonArea","nameOfRoleType","DataInputs","useFormContext","RoleSettings","members","LocationSettings","sort","isLimitedPublic","showMembers","setShowMembers","CategorySettings","limitedPublic","disabledByRoom","categories","typeWatch","outside","inside","category","RoomSettings","fieldTeaSupply","sorting","find","cleaningOption","Routes","exact","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78cfe12.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\n// export const defaultPrimary = purple;\r\nexport const defaultPrimary = {\r\n  light: '#336bbd',\r\n  main: '#0046AD',\r\n  dark: '#003179',\r\n  contrastText: '#fff',\r\n};\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: defaultPrimary,\r\n    secondary: amber,\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version 1.0.3 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","export type PostDataResult<T, U> = {\r\n  success: boolean;\r\n  value?: U;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\ntype ServerErrorType = { body: string };\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T & ServerErrorType;\r\n}\r\n\r\nconst ABORT_REQUEST_CONTROLLERS = new Map();\r\n\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    console.error('Server Error: ', response.parsedBody?.body);\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(\r\n  path: string,\r\n  signalKey: string | undefined = undefined,\r\n  args: RequestInit = { method: 'get', signal: !!signalKey ? abortAndGetSignalSafe(signalKey) : null }\r\n): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport function abortRequestSafe(key: string, reason = 'CANCELLED') {\r\n  ABORT_REQUEST_CONTROLLERS.get(key)?.abort?.(reason);\r\n}\r\n\r\nfunction abortAndGetSignalSafe(key: string) {\r\n  abortRequestSafe(key); // abort previous request, if any\r\n  const newController = new AbortController();\r\n  ABORT_REQUEST_CONTROLLERS.set(key, newController);\r\n  return newController.signal;\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n/**\r\n * reload用stage情報を格納します\r\n */\r\nconst reload_key = 'liveness-visitor-reload';\r\nexport const initReloadState = () => {\r\n  sessionStorage.setItem(reload_key, `{}`);\r\n};\r\nexport const saveReloadState = (item: string, value: string) => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  states[item] = value;\r\n  sessionStorage.setItem(reload_key, JSON.stringify(states));\r\n};\r\nexport const getReloadState = (item: string): string => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  return states[item];\r\n};\r\nexport const removeReloadState = () => {\r\n  sessionStorage.removeItem(reload_key);\r\n};\r\n/**\r\n * reload用stageを保持するか否かのフラグ\r\n */\r\nconst reloadFlg_key = 'liveness-visitor-reload-flg';\r\nexport const setReloadStateFlg = () => {\r\n  sessionStorage.setItem(reloadFlg_key, '1');\r\n};\r\nexport const getReloadStateFlg = () => {\r\n  return sessionStorage.getItem(reloadFlg_key);\r\n};\r\nexport const removeReloadStateFlg = () => {\r\n  sessionStorage.removeItem(reloadFlg_key);\r\n};\r\n/**\r\n * SessionStrageの一括削除\r\n */\r\nexport const removeSessionStrage = () => {\r\n  removeUserInfo();\r\n  removeReloadState();\r\n  removeReloadStateFlg();\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          LIVENESS Visitors for Microsoft\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') });\r\n          }\r\n          // ロケーションを取得\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              // throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          // urlを設定\r\n          let url = `/${location}/main`;\r\n          // ロケーション設定が未だの場合\r\n          if (location === 'undefined') {\r\n            url = '/settings/location';\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(url);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          LIVENESS Visitors for Microsoft\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @param signalKey fetchキャンセル用の一意キー。指定がない場合は通常処理\r\n * @returns\r\n */\r\nexport function useLoadData<T>(initUrl: string, initialData: T | undefined, signalKey?: string) {\r\n  //URLの状態\r\n  const [url, setUrl] = useState(initUrl);\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // ローディング解除\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, [data]);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    if (!url) return; // urlがない場合は処理しない\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url, signalKey);\r\n      // console.log(url); // TODO: debug\r\n      // console.log('get', result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    // setIsLoading(false);// useEffectによる制御に変更\r\n  }, [url, signalKey]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload, setUrl] as const;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setSelected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getReloadStateFlg, getUserInfo, initReloadState, removeSessionStrage, saveUserInfo, setReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { MySnackberProvider } from './MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 230;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n    nested: {\r\n      // paddingLeft: theme.spacing(4),\r\n      paddingLeft: theme.spacing(10),\r\n    },\r\n  });\r\n});\r\n\r\ntype UserStorageState = { signedIn: boolean } & User;\r\ntype UserStorageAction = { type: 'signedIn'; user: User } | { type: 'signedOut' };\r\n\r\nexport type SessionStrageContextType = {\r\n  userStorage: UserStorageState;\r\n  dispatch: React.Dispatch<UserStorageAction>;\r\n};\r\n\r\nexport const SessionStrageContext = createContext({} as SessionStrageContextType);\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  adminMode?: true;\r\n  frontMode?: true;\r\n  menuOpen?: true;\r\n};\r\n\r\nconst BaseTemplate = ({ children, adminMode, frontMode, menuOpen }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(menuOpen ? true : false);\r\n\r\n  // 左メニュー：設定の詳細開閉\r\n  const [settingsOpen, setSettingsOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setSettingsOpen(false);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n    }\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ログアウトアクション\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeSessionStrage(); //sessionStrageから情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // ストレージの状態初期値\r\n  const initialState: UserStorageState = {\r\n    signedIn: false,\r\n    email: '',\r\n    name: '',\r\n    isAdmin: false,\r\n    isFront: false,\r\n    contactAddr: undefined,\r\n  };\r\n  // ストレージの状態設定\r\n  const userStorageReducer = (state: UserStorageState, action: UserStorageAction) => {\r\n    switch (action.type) {\r\n      case 'signedIn':\r\n        return {\r\n          signedIn: true,\r\n          email: action.user.email,\r\n          name: action.user.name,\r\n          isAdmin: action.user.isAdmin,\r\n          isFront: action.user.isFront,\r\n          contactAddr: action.user.contactAddr,\r\n        };\r\n      case 'signedOut':\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  // ストレージの状態管理\r\n  const [userStorage, dispatch] = useReducer(userStorageReducer, initialState);\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        dispatch({ type: 'signedIn', user: user });\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          dispatch({ type: 'signedIn', user: user });\r\n        } else {\r\n          removeSessionStrage();\r\n          dispatch({ type: 'signedOut' });\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeSessionStrage();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    setReloadStateFlg(); // リフレッシュ後にstateを復元できるようフラグをONにする\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの初期化\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) initReloadState();\r\n  }, []);\r\n  // ================================\r\n\r\n  // 権限制御をつけてchildrenを表示する\r\n  let conditionalChildren = children;\r\n  const error = <>{t('common.msg.authority-error')}</>;\r\n  if (adminMode && !userStorage.isAdmin) {\r\n    conditionalChildren = error; // 管理者Roleエラー\r\n  }\r\n  if (frontMode && !userStorage.isFront) {\r\n    conditionalChildren = error; // フロントRoleエラー\r\n  }\r\n\r\n  if (!userStorage.signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <SessionStrageContext.Provider value={{ userStorage, dispatch }}>\r\n      <MySnackberProvider>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n            <Toolbar className={classes.toolbar}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                LIVENESS Visitors for Microsoft\r\n              </Typography>\r\n              <div>\r\n                <MyLocation></MyLocation>\r\n              </div>\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleAccountMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={accountIconOpen}\r\n                  onClose={handleMenuClose}\r\n                >\r\n                  <MenuItem onClick={handleMenuClose}>{userStorage.email}</MenuItem>\r\n                  <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n            }}\r\n            open={open}\r\n          >\r\n            <div className={classes.drawerCloseIcon}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                    <ListItemIcon>\r\n                      <FaceIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.created-visit-info')} />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                    <ListItemIcon>\r\n                      <MeetingRoomIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n                </ListItem>\r\n              </Link>\r\n              {userStorage.isFront && (\r\n                <Link to={`/${match.params.location}/front`} className={classes.link}>\r\n                  <ListItem button>\r\n                    <Tooltip title={t('main.menu.front') as string}>\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                    </Tooltip>\r\n                    <ListItemText primary={t('main.menu.front')} />\r\n                  </ListItem>\r\n                </Link>\r\n              )}\r\n              {userStorage.isAdmin && (\r\n                <>\r\n                  <ListItem button onClick={handleSettingsClick}>\r\n                    <ListItemIcon>\r\n                      <SettingsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={t('main.menu.settings')} />\r\n                    {settingsOpen ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItem>\r\n                  <Collapse in={settingsOpen} timeout=\"auto\" unmountOnExit>\r\n                    <Link to={`/${match.params.location}/settings/role`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.role')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/location`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.location')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/category`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.category')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/room`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.room')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  </Collapse>\r\n                </>\r\n              )}\r\n              <ListItem button onClick={refreshPage}>\r\n                <Tooltip title={t('main.menu.refresh') as string}>\r\n                  <ListItemIcon>\r\n                    <RefreshIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.refresh')} />\r\n              </ListItem>\r\n            </List>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n              {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n              {conditionalChildren}\r\n              <Box pt={4}>\r\n                <Copyright />\r\n              </Box>\r\n            </Container>\r\n          </main>\r\n        </div>\r\n      </MySnackberProvider>\r\n    </SessionStrageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { addDays } from 'date-fns';\r\nimport { useEffect, useState } from 'react';\r\nimport { getReloadStateFlg, saveReloadState } from './SessionStrage';\r\n\r\n/**\r\n * カレンダー選択用カスタムフック\r\n */\r\nexport function useSelectedDate() {\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  // 矢印カウンターの状態\r\n  const [weekly, setWeekly] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('selectedDate', selectedDate!.getTime().toString());\r\n    }\r\n  }, [selectedDate]);\r\n  // ================================\r\n\r\n  useEffect(() => {\r\n    if (weekly) {\r\n      setCount(7);\r\n    } else {\r\n      setCount(1);\r\n    }\r\n  }, [weekly]);\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const handleDatePrev = () => {\r\n    setSelectedDate((date) => (!!date ? addDays(date!, count * -1) : date));\r\n  };\r\n  const handleDateNext = () => {\r\n    setSelectedDate((date) => (!!date ? addDays(date!, count) : date));\r\n  };\r\n\r\n  return [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext, setWeekly] as const;\r\n}\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n/**\r\n * ページ設定共通用\r\n */\r\nexport const pageingOntions = {\r\n  paging: true,\r\n  pageSize: 10, // make initial page size\r\n  // emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n  pageSizeOptions: [5, 10, 20, 50], // rows selection options\r\n};\r\n","import { useCallback, useState } from 'react';\r\n\r\nimport { DataDialogAction, DataDialogState, RowDataType } from '../main/DataTableBase';\r\n\r\ntype DataTableProps = {\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function UseDataTable<T extends RowDataType>(props: DataTableProps) {\r\n  const { dataDialogHook } = props;\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<T | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: T) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      if (!!selectedRow.seriesMasterId) {\r\n        // 定期イベントの場合は先に確認ダイアログを表示\r\n        dataDialogHook.dispatch({ type: 'recConfOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // 定期イベント確認メッセージを閉じる\r\n  const handleRecConfClose = useCallback(\r\n    (isCancel: boolean, master?: T) => {\r\n      if (isCancel) {\r\n        dataDialogHook.dispatch({ type: 'recConfCancel' });\r\n        return;\r\n      }\r\n      if (master) {\r\n        setCurrentRow(master);\r\n      }\r\n      dataDialogHook.dispatch({ type: 'recConfClose' });\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  return [{ currentRow }, setCurrentRow, handleDialogOpen, handleRecConfClose] as const;\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\nimport { FrontRowData } from 'main/front/DataTable';\r\nimport { RowDataType } from 'main/DataTableBase';\r\n\r\nexport const frontCellPadding = '12px 6px';\r\n\r\nexport const makeVisitorTableStyles = (isFront: boolean) => {\r\n  const cellPadding = isFront ? frontCellPadding : '';\r\n  return makeStyles(() => ({\r\n    cellApptTime: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellTeaSupply: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomStatus: {\r\n      padding: cellPadding,\r\n    },\r\n    cellReservationName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellVisitCompany: {\r\n      padding: cellPadding,\r\n    },\r\n    cellSubject: {\r\n      padding: cellPadding,\r\n    },\r\n    cellContactAddr: {\r\n      padding: cellPadding,\r\n    },\r\n    cellCheckIn: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellCheckOut: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellComment: {\r\n      padding: cellPadding,\r\n    },\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  }));\r\n};\r\n\r\nexport const cellStyle = (field: String, rowData: RowDataType | FrontRowData, classes: ClassNameMap<string>) => {\r\n  const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n  return clsx(\r\n    classes[`cell${className}` as keyof ClassNameMap],\r\n    rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n  );\r\n};\r\n","import { createTheme, makeStyles } from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { defaultPrimary } from './Theme';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const makeTableDialogStyle = () => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n  return makeStyles((tableTheme) => ({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child > div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    fieldSlim: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.2em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    bottomLine: {\r\n      borderBottom: border,\r\n    },\r\n  }));\r\n};\r\n","export const nameOfRoomType = ['rooms', 'free'] as const;\r\nexport type RoomType = typeof nameOfRoomType[number];\r\n\r\nexport const nameOfUsageRangeForVisitor = ['outside', 'inside'] as const;\r\nexport type UsageRangeForVisitor = typeof nameOfUsageRangeForVisitor[number];\r\nexport const nameOfUsageRange = ['none', ...nameOfUsageRangeForVisitor] as const;\r\nexport type UsageRange = typeof nameOfUsageRange[number];\r\n\r\nexport type Room = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  sort: string;\r\n  usageRange: UsageRange;\r\n  type: RoomType;\r\n  teaSupply: { outside: boolean; inside: boolean };\r\n  comment: string;\r\n  cleaningOption: boolean;\r\n  location: string;\r\n  category: string;\r\n};\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T, U> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<U>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T, U, P>(url: string, formData: FormDataType<T, U>) {\r\n  let response: HttpResponse<PostDataResult<T, P>>;\r\n  try {\r\n    // console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T, P>>(url, formData);\r\n    // console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path, RegisterOptions } from 'react-hook-form';\r\n\r\ntype ControllerTextFieldProps<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  required?: true | boolean;\r\n  validation?: RegisterOptions;\r\n  multiline?: true | boolean;\r\n  disabled?: true | boolean;\r\n  selectList?: SelectOption[];\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n};\r\nexport type SelectOption = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nexport function ControllerTextField<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: ControllerTextFieldProps<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, required, selectList, multiline, disabled, validation, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const rules: RegisterOptions = { required: required ? (t('common.form.required') as string) : false, ...validation };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          disabled={disabled}\r\n          multiline={multiline}\r\n          select={!!selectList}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        >\r\n          {!!selectList &&\r\n            selectList.map((option, index) => (\r\n              <MenuItem key={`${name}-${index}`} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTheme } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype UserStatusIconProps = {\r\n  status: UserStatus;\r\n};\r\n\r\nconst iconFontSize = '1.3em';\r\n\r\nexport const UserStatusIcon = (props: UserStatusIconProps) => {\r\n  const { status } = props;\r\n\r\n  const theme = useTheme();\r\n\r\n  // console.log('icon', status); //TODO:入力系の時重複レンダリングが発生。要調査\r\n\r\n  if (status === 'none') {\r\n    return <HelpOutlineIcon style={{ color: theme.palette.text.secondary, fontSize: iconFontSize }} />;\r\n  } else if (status === 'tentativelyAccepted') {\r\n    return <DoneIcon style={{ color: theme.palette.warning.main, fontSize: iconFontSize }} />;\r\n  } else if (status === 'accepted') {\r\n    return <DoneIcon style={{ color: theme.palette.success.main, fontSize: iconFontSize }} />;\r\n  } else {\r\n    return <CloseIcon style={{ color: theme.palette.error.main, fontSize: iconFontSize }} />;\r\n  }\r\n};\r\n","import { Chip } from '@material-ui/core';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\ntype MyChipProps = {\r\n  option: EmailAddress;\r\n  [x: string]: any;\r\n};\r\n\r\nexport const MyChip = (props: MyChipProps) => {\r\n  const { option, ...other } = props;\r\n\r\n  return (\r\n    <Chip\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      icon={!!option.status ? UserStatusIcon({ status: option.status }) : undefined}\r\n      label={option.name}\r\n      title={option.address}\r\n      style={{ fontSize: '0.9em' }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path } from 'react-hook-form';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CircularProgress, TextField } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyChip } from './MyChip';\r\n\r\ntype AddrBookAutoCompleteType<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n};\r\n\r\nexport function AddrBookAutoComplete<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: AddrBookAutoCompleteType<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, errors, disabled, style } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: loading }, , setUrl] = useLoadData<EmailAddress[]>('', []);\r\n  useEffect(() => {\r\n    if (!!filter) {\r\n      setUrl(`/user/addressbook?filter=${filter}`);\r\n    } else {\r\n      setUrl(``);\r\n    }\r\n  }, [filter, setUrl]);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          style={style}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={!!addressbook && !!filter ? addressbook : []}\r\n          filterOptions={(options, _state) => options}\r\n          noOptionsText={t('auto-complete.no-options-text')}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) => tagValue.map((option, index) => <MyChip option={option} {...getTagProps({ index })} />)}\r\n          filterSelectedOptions\r\n          getOptionSelected={(option, value) => option.address === value.address}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={label}\r\n              error={!!errors[name]}\r\n              helperText={errors[name] && (errors[name] as FieldError).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, makeStyles, createStyles, IconButton } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1.5),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(0.75),\r\n      top: theme.spacing(0.75),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype MyDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MyDialog(props: MyDialogProps) {\r\n  const { open, onClose, title, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const handleCancel = (_event: MouseEventHandler, reason: string) => {\r\n    if (reason && reason === 'backdropClick') return;\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleCancel} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.root}>\r\n          {title}\r\n          <IconButton className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions style={{ display: 'none' }}>\r\n          <Button onClick={onClose}>{t('common.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","export type User = {\r\n  email: string;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  isFront: boolean;\r\n  contactAddr: string | undefined; // 予約入力画面の連絡先デフォルト値（任意）\r\n};\r\n\r\nexport const nameOfUserStatus = ['none', 'tentativelyAccepted', 'accepted', 'declined'] as const;\r\nexport type UserStatus = typeof nameOfUserStatus[number];\r\n\r\nexport type EmailAddress = {\r\n  name: string;\r\n  address: string;\r\n  status?: UserStatus;\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Chip } from '@material-ui/core';\r\nimport _ from 'lodash';\r\n\r\nimport { nameOfUserStatus } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\nexport const UserStatusIconNote = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {nameOfUserStatus.map((status, index) => (\r\n        <Chip\r\n          key={index}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          icon={UserStatusIcon({ status: status })}\r\n          label={t(`visitdialog.notes.user-status-${_.kebabCase(status)}`)}\r\n          style={{ fontSize: '0.9em', marginLeft: '5px', border: 'none' }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { Grid, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport { addMinutes } from 'date-fns';\r\n\r\nconst useStyles = makeStyles({\r\n  timerSelectRoot: {\r\n    '& svg': { display: 'none' },\r\n  },\r\n  timerSelect: {\r\n    paddingRight: '15px !important',\r\n  },\r\n  colon: { margin: 'auto 3px' },\r\n});\r\n\r\nexport const startTimeBufferMinute = 0;\r\nexport const endTimeBufferMinute = 30; //TODO: Interval config化？\r\nexport const change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\nexport const calcStartTime = (start: Date) => addMinutes(change5MinuteIntervals(start), startTimeBufferMinute);\r\nexport const calcEndTimeFromStartTime = (start: Date) => addMinutes(change5MinuteIntervals(start), startTimeBufferMinute + endTimeBufferMinute);\r\n\r\nconst hoursList = [...Array(24)]\r\n  .map((_, i) => i)\r\n  .map((value) => {\r\n    return { label: value, value: value };\r\n  });\r\n\r\nconst minutesList = [...Array(12)]\r\n  .map((_, i) => i * 5)\r\n  .map((value) => {\r\n    return { label: value, value: value };\r\n  });\r\n\r\ntype MyTimePickerProps = {\r\n  selected: Date;\r\n  onChange: (date: Date) => void;\r\n  error: boolean;\r\n};\r\n\r\nfunction MyTimePicker(props: MyTimePickerProps) {\r\n  const { selected, onChange, error } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item>\r\n        <TextField\r\n          className={classes.timerSelectRoot}\r\n          select\r\n          value={selected.getHours()}\r\n          onChange={(e) => {\r\n            onChange(new Date(selected.getFullYear(), selected.getMonth(), selected.getDate(), Number(e.target.value), selected.getMinutes()));\r\n          }}\r\n          inputProps={{ className: classes.timerSelect }}\r\n          error={error}\r\n        >\r\n          {hoursList.map((option, index) => (\r\n            <MenuItem key={`hour-${index}`} value={option.value}>\r\n              {('00' + Number(option.label)).slice(-2)}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item className={classes.colon}>\r\n        :\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          className={classes.timerSelectRoot}\r\n          select\r\n          value={selected.getMinutes()}\r\n          onChange={(e) => {\r\n            onChange(new Date(selected.getFullYear(), selected.getMonth(), selected.getDate(), selected.getHours(), Number(e.target.value)));\r\n          }}\r\n          inputProps={{ className: classes.timerSelect }}\r\n          error={error}\r\n        >\r\n          {minutesList.map((option, index) => (\r\n            <MenuItem key={`minute-${index}`} value={option.value}>\r\n              {('00' + Number(option.label)).slice(-2)}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MyTimePicker;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype MyConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (ok: boolean) => void;\r\n  title?: string;\r\n  message: string | React.ReactNode;\r\n  color?: 'inherit' | 'default' | 'primary' | 'secondary';\r\n};\r\n\r\nexport function MyConfirmDialog(props: MyConfirmDialogPorps) {\r\n  const { open, onClose, title, message, color } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {!!title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{message}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color={color}>\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color={color} autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Control,\r\n  Controller,\r\n  DeepMap,\r\n  DeepPartial,\r\n  FieldError,\r\n  UseFormClearErrors,\r\n  UseFormGetValues,\r\n  UseFormSetValue,\r\n  useWatch,\r\n} from 'react-hook-form';\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\nconst useStyles = makeStyles({\r\n  roomComment: {\r\n    whiteSpace: 'pre-line',\r\n    fontSize: '0.75rem',\r\n    lineHeight: '1rem',\r\n    padding: '0 5px 5px 5px',\r\n  },\r\n});\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  clearErrors: UseFormClearErrors<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomsLoading: boolean;\r\n  roomId: string;\r\n  disabledVisitor: boolean;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, getValues, clearErrors, rooms, roomsLoading, roomId, disabledVisitor, disabledRoom, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply[getValues('usageRange')]);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [getValues, roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      clearErrors([`resourcies.${roomId}.numberOfTeaSupply`, `resourcies.${roomId}.teaDetails`]);\r\n      setValue(`resourcies.${roomId}.numberOfTeaSupply`, 0, { shouldDirty: true });\r\n      setValue(`resourcies.${roomId}.teaDetails`, '', { shouldDirty: true });\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId, clearErrors]);\r\n\r\n  //会議室の説明文\r\n  const [roomComment, setRoomComment] = useState('');\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const room = rooms.filter((room) => room.id === roomWatch && !!room.comment)[0];\r\n      const comment = !!room ? room.comment : '';\r\n      setRoomComment(comment);\r\n    } else {\r\n      setRoomComment('');\r\n    }\r\n  }, [roomWatch, rooms]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (roomsLoading) {\r\n    return (\r\n      <Box px={2}>\r\n        <TextField\r\n          label={t(`visittable.header.room-name`)}\r\n          value={t('visitdialog.notes.loading-rooms')}\r\n          disabled\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CircularProgress color=\"inherit\" style={{ padding: 10 }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!roomsLoading && rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{\r\n          required: t('common.form.required') as string,\r\n          // 何らかの挙動で選択リストから消えた会議室を選択している場合のエラー処理\r\n          validate: (roomId) => (rooms!.some((room) => room.id === roomId) ? undefined : (t('visitdialog.form.error.room-not-covered') as string)),\r\n        }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <MenuItem key={option.id} value={option.id}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n      <Typography component=\"div\" className={classes.roomComment}>\r\n        {roomComment}\r\n      </Typography>\r\n\r\n      <Grid container spacing={1} style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item xs={5} sm={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2} sm={4} style={disabledVisitor ? { opacity: 0 } : undefined}></Grid>\r\n\r\n        <Grid item xs={5} sm={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfTeaSupply`}\r\n            control={control}\r\n            rules={{\r\n              required: t('common.form.required') as string,\r\n              validate: () =>\r\n                (getValues(`resourcies.${roomId}.teaSupply`) && getValues(`resourcies.${roomId}.numberOfTeaSupply`) > 0) ||\r\n                (!getValues(`resourcies.${roomId}.teaSupply`) && getValues(`resourcies.${roomId}.numberOfTeaSupply`) === 0) ||\r\n                (t('visitdialog.form.error.number-of-tea-supply') as string),\r\n            }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-tea-supply')}\r\n                error={!!getNestedError('numberOfTeaSupply')}\r\n                helperText={!!getNestedError('numberOfTeaSupply') && getNestedError('numberOfTeaSupply').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Controller\r\n          name={`resourcies.${roomId}.teaDetails`}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              style={disabledTeaMember ? { display: 'none' } : undefined}\r\n              multiline\r\n              {...field}\r\n              disabled={disabledTeaMember}\r\n              label={t('visittable.header.tea-details')}\r\n              error={!!getNestedError('teaDetails')}\r\n              helperText={!!getNestedError('teaDetails') && getNestedError('teaDetails').message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>{data.roomName}</div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                {data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}\r\n              </div>\r\n              <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                {t('visittable.header.number-of-tea-supply')}\r\n              </div>\r\n              <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                {data.numberOfTeaSupply}\r\n              </div>\r\n            </li>\r\n            {data.teaSupply && (\r\n              <li key=\"tea-details\" className={classes.list}>\r\n                <div className={classes.title}>{t('visittable.header.tea-details')}</div>\r\n                <div className={classes.field}>{data.teaDetails}</div>\r\n              </li>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype ReservationNameFieldProps = {\r\n  name: string;\r\n  status: UserStatus;\r\n};\r\n\r\nfunction ReservationNameField(props: ReservationNameFieldProps) {\r\n  const { name, status } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {name}\r\n      {status === 'declined' && (\r\n        <div\r\n          style={{\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            color: 'red',\r\n            verticalAlign: 'bottom',\r\n            marginLeft: 15,\r\n            fontSize: '0.95em',\r\n          }}\r\n        >\r\n          <ErrorOutlineIcon fontSize=\"small\" style={{ marginRight: 3 }} />\r\n          {t('visitdialog.notes.reservation-status-declined')}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReservationNameField;\r\n","import { useContext } from 'react';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\n\r\ntype LastUpdatedFieldProps = {\r\n  datetime: number;\r\n};\r\n\r\nexport const LastUpdatedField = (props: LastUpdatedFieldProps) => {\r\n  const { datetime } = props;\r\n\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  return <>{format(datetime, 'yyyy/MM/dd HH:mm:ss', { locale: muiPickContext?.locale })}</>;\r\n};\r\n","export type PatternedRecurrence = {\r\n  pattern: RecurrencePattern & RecurrencePatternReadOnly;\r\n  range: RecurrenceRange & RecurrenceRangeReadOnly;\r\n};\r\n\r\nexport type PatternedRecurrenceInput = {\r\n  pattern: RecurrencePattern;\r\n  range: RecurrenceRange;\r\n  message?: string; // server側で返されるRecurrenceに関連するgraphAPIエラー\r\n};\r\n\r\nexport const nameOfRecurrencePatternType = ['daily', 'weekly', 'absoluteMonthly', 'relativeMonthly', 'absoluteYearly', 'relativeYearly'] as const;\r\nexport type RecurrencePatternType = typeof nameOfRecurrencePatternType[number];\r\n\r\nexport const nameOfDayOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'] as const;\r\nexport type DayOfWeek = typeof nameOfDayOfWeek[number];\r\n\r\nexport const nameOfWeekIndex = ['first', 'second', 'third', 'fourth', 'last'] as const;\r\nexport type WeekIndex = typeof nameOfWeekIndex[number];\r\n\r\nexport type RecurrencePattern = {\r\n  type: RecurrencePatternType;\r\n  interval: number;\r\n  daysOfWeek?: DayOfWeek[]; // weekly, relativeMonthly, relativeYearly\r\n  dayOfMonth?: number; // absoluteMonthly, absoluteYearly\r\n  index?: WeekIndex; // relativeMonthly, relativeYearly\r\n  month?: number; // absoluteYearly, relativeYearly\r\n};\r\ntype RecurrencePatternReadOnly = {\r\n  firstDayOfWeek?: DayOfWeek; //weekly\r\n};\r\n\r\n// export const nameOfRecurrenceRangeType = ['endDate', 'noEnd', 'numbered'] as const;//TODO: noEnd未対応（最大５年問題）\r\nexport const nameOfRecurrenceRangeType = ['endDate', 'numbered'] as const;\r\nexport type RecurrenceRangeType = typeof nameOfRecurrenceRangeType[number];\r\n\r\nexport type RecurrenceRange = {\r\n  type: RecurrenceRangeType;\r\n  startDate: string;\r\n  endDate?: string;\r\n  numberOfOccurrences?: number;\r\n};\r\ntype RecurrenceRangeReadOnly = {};\r\n","import { FormHelperText, makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n    width: 'fit-content',\r\n  },\r\n  helperText: { marginLeft: 0, marginRight: 0, textAlign: 'center' },\r\n});\r\n\r\ntype MyCalendarProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n  disablePast?: boolean;\r\n  error?: boolean;\r\n};\r\n\r\nfunction MyCalendar({ label, date, onChange, disablePast, error }: MyCalendarProps) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      disablePast={disablePast}\r\n      value={date}\r\n      onChange={onChange}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      size=\"small\"\r\n      className={classes.keyboardDatePicker}\r\n      inputProps={{\r\n        style: {\r\n          width: 85,\r\n        },\r\n      }}\r\n      error={error}\r\n      invalidDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-date')}\r\n        </FormHelperText>\r\n      }\r\n      minDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-min-date')}\r\n        </FormHelperText>\r\n      }\r\n      maxDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-max-date')}\r\n        </FormHelperText>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import { FormHelperText, Grid, makeStyles } from '@material-ui/core';\r\nimport MyTimePicker from '_components/MyTimePicker';\r\nimport MyCalendar from '_components/MyCalendar';\r\n\r\nconst useStyles = makeStyles({\r\n  time: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n  },\r\n  timeBetween: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    marginTop: -5,\r\n  },\r\n});\r\n\r\ntype DateTimePickerFieldsProps = {\r\n  label: string;\r\n  start: Date;\r\n  end: Date;\r\n  onDateChange: (date: Date) => void;\r\n  onStartChange: (date: Date) => void;\r\n  onEndChange: (date: Date) => void;\r\n  disablePast?: boolean;\r\n  errMsg?: string[];\r\n};\r\n\r\nexport function DateTimePickerFields(props: DateTimePickerFieldsProps) {\r\n  const { label, start, end, onDateChange, onStartChange, onEndChange, disablePast, errMsg } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    if (!date) return;\r\n    onDateChange(date);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item container>\r\n        <Grid item xs={12} sm={5}>\r\n          <MyCalendar label={label} date={start} disablePast={disablePast} onChange={handleDateChange} error={!!errMsg} />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={7}>\r\n          <Grid item className={classes.time}>\r\n            <MyTimePicker selected={start} onChange={onStartChange} error={!!errMsg}></MyTimePicker>\r\n          </Grid>\r\n          <Grid item className={classes.timeBetween}>\r\n            -\r\n          </Grid>\r\n          <Grid item className={classes.time}>\r\n            <MyTimePicker selected={end} onChange={onEndChange} error={!!errMsg}></MyTimePicker>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {!!errMsg && (\r\n        <Grid item xs={12}>\r\n          <FormHelperText className={classes.error} error>\r\n            {errMsg}\r\n          </FormHelperText>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport format from 'date-fns/format';\r\n\r\nimport { PatternedRecurrenceInput } from '_models/PatternedRecurrence';\r\n\r\ntype RecurrenceInfoProps = { recurrence: PatternedRecurrenceInput; start: Date; end: Date };\r\n\r\nexport const RecurrenceInfo = (props: RecurrenceInfoProps) => {\r\n  const { recurrence, start, end } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 曜日\r\n  const daysOfWeek = recurrence.pattern.daysOfWeek?.map((week) => t(`recurrence-dialog.pattern.day-of-week.${week}`)).join(', ');\r\n  // 日付\r\n  const dayOfMonth = recurrence.pattern.dayOfMonth?.toString() + t(`recurrence-info.pattern.day-of-month`);\r\n  // 週数\r\n  const index = t(`recurrence-dialog.pattern.index.${recurrence.pattern.index}`);\r\n  // 月\r\n  const month = t(`recurrence-dialog.pattern.month.${recurrence.pattern.month}`);\r\n\r\n  let patternType = '';\r\n  let detail = '';\r\n  switch (recurrence.pattern.type) {\r\n    case 'daily':\r\n      patternType = 'day';\r\n      break;\r\n    case 'weekly':\r\n      patternType = 'week';\r\n      detail = ' ' + daysOfWeek!;\r\n      break;\r\n    case 'absoluteMonthly':\r\n      patternType = 'month';\r\n      detail = ' ' + dayOfMonth;\r\n      break;\r\n    case 'relativeMonthly':\r\n      patternType = 'month';\r\n      detail = ' ' + index + daysOfWeek!;\r\n      break;\r\n    case 'absoluteYearly':\r\n      patternType = 'year';\r\n      detail = ' ' + month + dayOfMonth;\r\n      break;\r\n    case 'relativeYearly':\r\n      patternType = 'year';\r\n      detail = ' ' + month + index + daysOfWeek!;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  // 間隔\r\n  const num = recurrence.pattern.interval === 1 ? '' : recurrence.pattern.interval.toString();\r\n  const every = recurrence.pattern.interval === 1 ? 'every-' : '';\r\n  const interval = num + t(`recurrence-info.pattern.interval.${every + patternType}`);\r\n\r\n  const pattern = interval + detail;\r\n  const apptTime = format(start, 'HH:mm') + '-' + format(end, 'HH:mm');\r\n\r\n  const range = recurrence.range.startDate + t(`recurrence-info.range.to`) + recurrence.range.endDate + t(`recurrence-info.range.valid-from`);\r\n\r\n  return <>{pattern + ' ' + apptTime + '  ' + range}</>;\r\n};\r\n","import { MouseEventHandler, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepMap, DeepPartial, FieldError, UseFormClearErrors, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\r\n\r\nimport { addMonths, addYears, format, startOfDay } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  createStyles,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nimport {\r\n  DayOfWeek,\r\n  nameOfDayOfWeek,\r\n  nameOfRecurrencePatternType,\r\n  nameOfRecurrenceRangeType,\r\n  nameOfWeekIndex,\r\n  PatternedRecurrenceInput,\r\n  RecurrencePattern,\r\n  RecurrencePatternType,\r\n  RecurrenceRange,\r\n  RecurrenceRangeType,\r\n  WeekIndex,\r\n} from '_models/PatternedRecurrence';\r\n\r\nimport { get } from '_utils/Http';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { calcEndTimeFromStartTime } from '_components/MyTimePicker';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { DateTimePickerFields } from './DateTimePickerFields';\r\nimport { RecurrenceInfo } from './RecurrenceInfo';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1.5),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(0.75),\r\n      top: theme.spacing(0.75),\r\n      color: theme.palette.grey[500],\r\n    },\r\n    inputInterval: {\r\n      width: 70,\r\n    },\r\n    inputDayOfMonth: {\r\n      width: 70,\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    error: {\r\n      margin: '-2px 10px',\r\n      lineHeight: '1.4em',\r\n    },\r\n  })\r\n);\r\n\r\ntype CheckInstances = { isIncludesException: boolean };\r\n\r\ntype InputValuesType = {\r\n  startTime: Date;\r\n  endTime: Date;\r\n  pattern: {\r\n    type: RecurrencePatternType;\r\n    interval: number;\r\n    daysOfWeek: CheckBoxWeek;\r\n    dayOfMonth: number;\r\n    index: WeekIndex;\r\n    month: number;\r\n  };\r\n  range: {\r\n    type: RecurrenceRangeType;\r\n    // startDate: Date;\r\n    endDate: Date;\r\n    numberOfOccurrences: number;\r\n  };\r\n};\r\ntype CheckBoxWeek = { [K in DayOfWeek]: boolean };\r\n\r\ntype InputErrorType = {\r\n  startTime: string[] | undefined;\r\n  endTime: string[] | undefined;\r\n  pattern: {\r\n    type: string[] | undefined;\r\n    interval: string[] | undefined;\r\n    daysOfWeek: string[] | undefined;\r\n    dayOfMonth: string[] | undefined;\r\n    index: string[] | undefined;\r\n    month: string[] | undefined;\r\n  };\r\n  range: {\r\n    type: string[] | undefined;\r\n    // startDate: string[] | undefined;\r\n    endDate: string[] | undefined;\r\n    numberOfOccurrences: string[] | undefined;\r\n  };\r\n};\r\n\r\nconst initCheckBoxWeek = nameOfDayOfWeek.reduce((newObj, week) => {\r\n  newObj[week] = false;\r\n  return newObj;\r\n}, {} as CheckBoxWeek);\r\n\r\nconst endDateAddAmount = 1;\r\nconst maxRepeatYear = 5;\r\n\r\nconst getDefaultValues = (startTime: Date, endTime: Date) => {\r\n  const checkBoxWeek = _.cloneDeep(initCheckBoxWeek);\r\n  const week = nameOfDayOfWeek[new Date().getDay()];\r\n  checkBoxWeek[week] = true;\r\n  return {\r\n    startTime: startTime,\r\n    endTime: endTime,\r\n    pattern: {\r\n      type: nameOfRecurrencePatternType[0] as RecurrencePatternType,\r\n      interval: 1,\r\n      daysOfWeek: checkBoxWeek,\r\n      dayOfMonth: 1,\r\n      index: nameOfWeekIndex[0] as WeekIndex,\r\n      month: 1,\r\n    },\r\n    range: {\r\n      type: nameOfRecurrenceRangeType[0] as RecurrenceRangeType,\r\n      // startDate: startOfDay(startTime),\r\n      endDate: addMonths(startOfDay(startTime), endDateAddAmount),\r\n      numberOfOccurrences: 1,\r\n    },\r\n  } as InputValuesType;\r\n};\r\n\r\nconst defaultInputError = {\r\n  pattern: {\r\n    type: undefined,\r\n    interval: undefined,\r\n    daysOfWeek: undefined,\r\n    dayOfMonth: undefined,\r\n    index: undefined,\r\n    month: undefined,\r\n  },\r\n  range: {\r\n    type: undefined,\r\n    // startDate: undefined,\r\n    endDate: undefined,\r\n    numberOfOccurrences: undefined,\r\n  },\r\n} as InputErrorType;\r\n\r\ntype RecurrenceFieldsProps = {\r\n  activeRoomSelect: () => void;\r\n  activeSearchButton: () => void;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  clearErrors: UseFormClearErrors<Inputs>;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RecurrenceFields(props: RecurrenceFieldsProps) {\r\n  const { activeRoomSelect, activeSearchButton, getValues, setValue, clearErrors, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const classes = useStyles();\r\n\r\n  // ダイアログの状態\r\n  const [open, setOpen] = useState(false);\r\n  // 確認ダイアログの状態\r\n  const [confOpen, setConfOpen] = useState(false);\r\n\r\n  // 入力値の状態\r\n  const [inputValues, setInputValues] = useState<InputValuesType>(_.cloneDeep(getDefaultValues(getValues('startTime'), getValues('endTime'))));\r\n  // エラー値の状態\r\n  const [errMsg, setErrMsg] = useState<InputErrorType>(_.cloneDeep(defaultInputError));\r\n\r\n  // 初期値設定\r\n  useEffect(() => {\r\n    const defaultValues = { ...getDefaultValues(getValues('startTime'), getValues('endTime')) };\r\n    if (open) {\r\n      if (!!getValues('recurrence')) {\r\n        // recurrenceオブジェクトから取得\r\n        setInputValues({\r\n          startTime: getValues('startTime'),\r\n          endTime: getValues('endTime'),\r\n          pattern: {\r\n            type: getValues('recurrence')!.pattern.type,\r\n            interval: getValues('recurrence')!.pattern.interval,\r\n            daysOfWeek:\r\n              !!getValues('recurrence')!.pattern.daysOfWeek && getValues('recurrence')!.pattern.daysOfWeek!.length > 0\r\n                ? nameOfDayOfWeek.reduce((newObj, week) => {\r\n                    newObj[week] = getValues('recurrence')!.pattern.daysOfWeek!.filter((value) => value === week).length > 0;\r\n                    return newObj;\r\n                  }, {} as CheckBoxWeek)\r\n                : defaultValues.pattern.daysOfWeek,\r\n            dayOfMonth: (!!getValues('recurrence')!.pattern.dayOfMonth\r\n              ? getValues('recurrence')!.pattern.dayOfMonth\r\n              : defaultValues.pattern.dayOfMonth) as number,\r\n            index: (!!getValues('recurrence')!.pattern.index ? getValues('recurrence')!.pattern.index : defaultValues.pattern.index) as WeekIndex,\r\n            month: (!!getValues('recurrence')!.pattern.month ? getValues('recurrence')!.pattern.month : defaultValues.pattern.month) as number,\r\n          },\r\n          range: {\r\n            type: getValues('recurrence')!.range.type,\r\n            // startDate: new Date(getValues('recurrence')!.range.startDate),\r\n            endDate: getValues('recurrence')!.range.endDate ? new Date(getValues('recurrence')!.range.endDate!) : defaultValues.range.endDate,\r\n            numberOfOccurrences: getValues('recurrence')!.range.numberOfOccurrences\r\n              ? getValues('recurrence')!.range.numberOfOccurrences!\r\n              : defaultValues.range.numberOfOccurrences,\r\n          },\r\n        });\r\n      } else {\r\n        setInputValues(_.cloneDeep(defaultValues));\r\n      }\r\n    } else {\r\n      setInputValues(_.cloneDeep(defaultValues));\r\n    }\r\n    setErrMsg(_.cloneDeep(defaultInputError));\r\n  }, [getValues, open]);\r\n\r\n  // dialogOpen\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  // dialogClose\r\n  const handleClose = (_event: MouseEventHandler, reason: string) => {\r\n    if (reason && reason === 'backdropClick') return;\r\n    handleCancel();\r\n  };\r\n\r\n  // confirmDialogClose\r\n  const handleConfClose = (ok: boolean) => {\r\n    setConfOpen(false);\r\n    if (ok) {\r\n      handleOk(); // OKアクション実行\r\n    }\r\n  };\r\n  // OKアクションの前に確認\r\n  const handleConfirmOk = async () => {\r\n    try {\r\n      const iCalUId = getValues('iCalUId');\r\n      if (!!iCalUId) {\r\n        const result = await get<CheckInstances>(`/event/checkinstances/${iCalUId}`);\r\n        const checkInstances = result.parsedBody;\r\n        // exceptionの予定を含む場合\r\n        if (checkInstances?.isIncludesException) {\r\n          setConfOpen(true); // 確認メッセージへ\r\n          return;\r\n        }\r\n      }\r\n      handleOk(); // OKアクション実行\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // OKアクション\r\n  const handleOk = () => {\r\n    // 入力チェック\r\n    let isError = false;\r\n    const errorMsg = _.cloneDeep(defaultInputError);\r\n\r\n    const startDate = startOfDay(inputValues.startTime);\r\n    const newEndDate = addYears(startDate, maxRepeatYear);\r\n\r\n    // 開始日時のチェック\r\n    if (inputValues.startTime.getTime() > inputValues.endTime.getTime()) {\r\n      //時刻の大小関係エラー\r\n      errorMsg.startTime = [`${t('recurrence-dialog.error.event-time')}`];\r\n      isError = true;\r\n    }\r\n    // 終了日のチェック\r\n    if (startDate.getTime() > inputValues.range.endDate.getTime()) {\r\n      //日にちの大小関係エラー\r\n      errorMsg.range.endDate = [`${t('recurrence-dialog.error.range.end-date')}`];\r\n      isError = true;\r\n    } else if (newEndDate.getTime() < inputValues.range.endDate.getTime()) {\r\n      //最長予約年数チェック\r\n      errorMsg.range.endDate = [`${t('recurrence-dialog.error.range.end-date.max')}`];\r\n      isError = true;\r\n    }\r\n    setErrMsg(errorMsg);\r\n\r\n    if (isError) return;\r\n\r\n    // 曜日チェックボックスの値をRecurrenceオブジェクト用に加工する\r\n    const daysOfWeek = Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek]) as DayOfWeek[];\r\n    if (daysOfWeek.length === 0) {\r\n      // 曜日チェックボックスが未選択だった場合、今日の曜日をセット\r\n      daysOfWeek.push(nameOfDayOfWeek[new Date().getDay()]);\r\n    }\r\n\r\n    let pattern = { type: inputValues.pattern.type, interval: inputValues.pattern.interval } as RecurrencePattern;\r\n    switch (inputValues.pattern.type) {\r\n      case 'daily':\r\n        break;\r\n      case 'weekly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        break;\r\n      case 'absoluteMonthly':\r\n        pattern.dayOfMonth = inputValues.pattern.dayOfMonth;\r\n        break;\r\n      case 'relativeMonthly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        pattern.index = inputValues.pattern.index;\r\n        break;\r\n      case 'absoluteYearly':\r\n        pattern.dayOfMonth = inputValues.pattern.dayOfMonth;\r\n        pattern.month = inputValues.pattern.month;\r\n        break;\r\n      case 'relativeYearly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        pattern.index = inputValues.pattern.index;\r\n        pattern.month = inputValues.pattern.month;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let range = { type: inputValues.range.type, startDate: strDate(startDate) } as RecurrenceRange;\r\n    switch (inputValues.range.type) {\r\n      case 'endDate':\r\n        range.endDate = strDate(inputValues.range.endDate);\r\n        break;\r\n      // case 'noEnd'://TODO: noEnd未対応（最大５年問題）\r\n      //   break;\r\n      case 'numbered':\r\n        range.numberOfOccurrences = inputValues.range.numberOfOccurrences;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    clearErrors(['recurrence', 'startTime', 'endTime']);\r\n    setValue('recurrence', { pattern: pattern, range: range } as PatternedRecurrenceInput, { shouldDirty: true });\r\n    setValue('startTime', inputValues.startTime, { shouldDirty: true });\r\n    setValue('endTime', inputValues.endTime, { shouldDirty: true });\r\n\r\n    activeRoomSelect();\r\n    setOpen(false);\r\n  };\r\n\r\n  // Cancelアクション\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // 解除アクション\r\n  const handleRelease = () => {\r\n    clearErrors('recurrence');\r\n    setValue('recurrence', undefined, { shouldDirty: true });\r\n    activeSearchButton();\r\n    setOpen(false);\r\n  };\r\n\r\n  // 開始日変更アクション\r\n  const handleDateChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      return {\r\n        ...values,\r\n        startTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), values.startTime.getHours(), values.startTime.getMinutes()),\r\n        endTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), values.endTime.getHours(), values.endTime.getMinutes()),\r\n      };\r\n    });\r\n  };\r\n  // 開始時刻変更アクション\r\n  const handleStartChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      const start = new Date(\r\n        values.startTime.getFullYear(),\r\n        values.startTime.getMonth(),\r\n        values.startTime.getDate(),\r\n        date.getHours(),\r\n        date.getMinutes()\r\n      );\r\n      const end = calcEndTimeFromStartTime(start);\r\n      return { ...values, startTime: start, endTime: end };\r\n    });\r\n  };\r\n  // 終了時刻変更アクション\r\n  const handleEndChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      return {\r\n        ...values,\r\n        endTime: new Date(values.endTime.getFullYear(), values.endTime.getMonth(), values.endTime.getDate(), date.getHours(), date.getMinutes()),\r\n      };\r\n    });\r\n  };\r\n\r\n  const strDate = (date: Date): string => format(date, 'yyyy-MM-dd', { locale: muiPickContext?.locale });\r\n\r\n  const patternTypeList = nameOfRecurrencePatternType.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.type.${value}`), value: value };\r\n  });\r\n  const dayOfWeekList = nameOfDayOfWeek.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.day-of-week.${value}`), value: value };\r\n  });\r\n  const weekIndexList = nameOfWeekIndex.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.index.${value}`), value: value };\r\n  });\r\n  const monthList = [...Array(12)]\r\n    .map((_, i) => i + 1)\r\n    .map((value) => {\r\n      return { label: t(`recurrence-dialog.pattern.month.${value}`), value: value };\r\n    });\r\n\r\n  // 曜日チェックボックス\r\n  const WeekCheckBox = useMemo(() => {\r\n    return (\r\n      <FormGroup row>\r\n        {nameOfDayOfWeek.map((week, index) => {\r\n          return (\r\n            <FormControlLabel\r\n              key={index}\r\n              control={\r\n                <Checkbox\r\n                  checked={inputValues.pattern.daysOfWeek[week]}\r\n                  onChange={(e) => {\r\n                    setInputValues((values) => {\r\n                      return {\r\n                        ...values,\r\n                        pattern: {\r\n                          ...values.pattern,\r\n                          daysOfWeek: { ...values.pattern.daysOfWeek, [e.target.name as DayOfWeek]: e.target.checked },\r\n                        },\r\n                      };\r\n                    });\r\n                  }}\r\n                  name={week}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={t(`recurrence-dialog.pattern.day-of-week.${week}`)}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    );\r\n  }, [inputValues, t]);\r\n\r\n  // 曜日セレクトボックス\r\n  const WeekSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.days-of-week')}\r\n        select={true}\r\n        value={\r\n          Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek]).length > 0\r\n            ? Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek])\r\n            : nameOfDayOfWeek[0]\r\n        }\r\n        onChange={(e) => {\r\n          const value = _.cloneDeep(initCheckBoxWeek);\r\n          value[e.target.value as DayOfWeek] = true;\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, daysOfWeek: _.cloneDeep(value) } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.daysOfWeek}\r\n        helperText={errMsg.pattern.daysOfWeek}\r\n      >\r\n        {dayOfWeekList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [dayOfWeekList, errMsg.pattern.daysOfWeek, inputValues, t]);\r\n\r\n  // 週数セレクトボックス\r\n  const IndexSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.index')}\r\n        select={true}\r\n        value={inputValues.pattern.index}\r\n        onChange={(e) => {\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, index: e.target.value as WeekIndex } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.index}\r\n        helperText={errMsg.pattern.index}\r\n      >\r\n        {weekIndexList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [errMsg.pattern.index, inputValues, t, weekIndexList]);\r\n\r\n  // 日付インプットフィールド\r\n  const DayOfMonthText = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        className={classes.inputDayOfMonth}\r\n        label={t('recurrence-dialog.header.pattern.day-of-month')}\r\n        type=\"number\"\r\n        inputProps={{ min: 1, max: 31, style: { textAlign: 'right' } }}\r\n        value={inputValues.pattern.dayOfMonth}\r\n        onChange={(e) => {\r\n          let num = Number(e.target.value);\r\n          if (num < 1) num = 1;\r\n          if (num > 31) num = 31;\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, dayOfMonth: num } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.dayOfMonth}\r\n        helperText={errMsg.pattern.dayOfMonth}\r\n      ></TextField>\r\n    );\r\n  }, [classes.inputDayOfMonth, errMsg.pattern.dayOfMonth, inputValues, t]);\r\n\r\n  // 月セレクトボックス\r\n  const MonthSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.month')}\r\n        select={true}\r\n        value={inputValues.pattern.month}\r\n        onChange={(e) => {\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, month: Number(e.target.value) } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.month}\r\n        helperText={errMsg.pattern.month}\r\n      >\r\n        {monthList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [errMsg.pattern.month, inputValues, t, monthList]);\r\n\r\n  return (\r\n    <>\r\n      {!getValues('recurrence') && (\r\n        <Button size=\"small\" color=\"primary\" startIcon={<LoopIcon />} onClick={handleOpen}>\r\n          {t('visitdialog.button.set-recurrence')}\r\n        </Button>\r\n      )}\r\n      {!!getValues('recurrence') && (\r\n        <>\r\n          <TextField\r\n            label={t('visitdialog.notes.recurrence-info')}\r\n            value={renderToString(\r\n              <RecurrenceInfo recurrence={getValues('recurrence')!} start={getValues('startTime')} end={getValues('endTime')}></RecurrenceInfo>\r\n            )}\r\n            multiline\r\n            disabled\r\n            inputProps={{ minRows: 1 }}\r\n            error={!!errors.recurrence}\r\n          ></TextField>\r\n          {!!errors.recurrence && (\r\n            <FormHelperText error className={classes.error}>\r\n              {errors.recurrence.message}\r\n            </FormHelperText>\r\n          )}\r\n          <Button size=\"small\" color=\"primary\" startIcon={<LoopIcon />} onClick={handleOpen}>\r\n            {t('visitdialog.button.edit-recurrence')}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle className={classes.root}>\r\n          {t('recurrence-dialog.title')}\r\n          <IconButton className={classes.closeButton} onClick={handleCancel}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Box px={2} py={1}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={10}>\r\n                <DateTimePickerFields\r\n                  label={t('recurrence-dialog.header.appt-date-time')}\r\n                  start={inputValues.startTime}\r\n                  end={inputValues.endTime}\r\n                  onDateChange={handleDateChange}\r\n                  onStartChange={handleStartChange}\r\n                  onEndChange={handleEndChange}\r\n                  disablePast={getValues('mode') === 'ins'}\r\n                  errMsg={errMsg.startTime ? errMsg.startTime : undefined}\r\n                ></DateTimePickerFields>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <Box px={2} py={1}>\r\n            <TextField\r\n              label={t('recurrence-dialog.header.pattern.type')}\r\n              select={true}\r\n              value={inputValues.pattern.type}\r\n              onChange={(e) => {\r\n                const defaultValues = { ...getDefaultValues(getValues('startTime'), getValues('endTime')) };\r\n                defaultValues.pattern.type = e.target.value as RecurrencePatternType;\r\n                setInputValues((values) => {\r\n                  return { ...values, pattern: { ...defaultValues.pattern } }; // patternの中身は全置換え(リセット)\r\n                });\r\n              }}\r\n              error={!!errMsg.pattern.type}\r\n              helperText={errMsg.pattern.type}\r\n            >\r\n              {patternTypeList.map((option, index) => (\r\n                <MenuItem key={index} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} md={4} container spacing={1} alignItems=\"center\">\r\n                <Grid item>\r\n                  <TextField\r\n                    className={classes.inputInterval}\r\n                    label={t('recurrence-dialog.header.pattern.interval')}\r\n                    type=\"number\"\r\n                    inputProps={{ min: 1, style: { textAlign: 'right' } }}\r\n                    value={inputValues.pattern.interval}\r\n                    onChange={(e) => {\r\n                      const num = Number(e.target.value) > 0 ? Number(e.target.value) : 1;\r\n                      setInputValues((values) => {\r\n                        return { ...values, pattern: { ...values.pattern, interval: num } };\r\n                      });\r\n                    }}\r\n                    error={!!errMsg.pattern.interval}\r\n                    helperText={errMsg.pattern.interval}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>{t(`recurrence-dialog.label.pattern.interval.${inputValues.pattern.type}`)}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'weekly' ? undefined : { display: 'none' }}>\r\n                <FormControl error={!!errMsg.pattern.daysOfWeek}>\r\n                  {WeekCheckBox}\r\n                  {!!errMsg.pattern.daysOfWeek && <FormHelperText error>{errMsg.pattern.daysOfWeek}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'absoluteMonthly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{DayOfMonthText}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.absolute`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'relativeMonthly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{IndexSelectBox}</Grid>\r\n                  <Grid item>{WeekSelectBox}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.relative`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'absoluteYearly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{MonthSelectBox}</Grid>\r\n                  <Grid item>{DayOfMonthText}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.absolute`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'relativeYearly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{MonthSelectBox}</Grid>\r\n                  <Grid item>{IndexSelectBox}</Grid>\r\n                  <Grid item>{WeekSelectBox}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.relative`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <Box px={2} py={1}>\r\n            <Grid container spacing={2}>\r\n              <Grid item className={classes.datePicker}>\r\n                <MyCalendar\r\n                  label={t('recurrence-dialog.header.range.end-date')}\r\n                  date={inputValues.range.endDate}\r\n                  disablePast={getValues('mode') === 'ins'}\r\n                  onChange={(e) => {\r\n                    if (!e) return;\r\n                    setInputValues((values) => {\r\n                      return { ...values, range: { ...values.range, endDate: e } };\r\n                    });\r\n                  }}\r\n                  error={!!errMsg.range.endDate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {!!errMsg.range.endDate && <FormHelperText error>{errMsg.range.endDate}</FormHelperText>}\r\n          </Box>\r\n\r\n          <Box p={2}>\r\n            <Grid container justifyContent=\"space-between\" spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleConfirmOk}>\r\n                  {t('common.button.ok')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleCancel}>\r\n                  {t('common.button.cancel')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleRelease} disabled={getValues('recurrence') === undefined}>\r\n                  {t('recurrence-dialog.button.release-recurrence')}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <MyConfirmDialog\r\n        open={confOpen}\r\n        onClose={handleConfClose}\r\n        message={\r\n          <Alert severity=\"warning\" variant=\"outlined\">\r\n            <AlertTitle>Warning</AlertTitle>\r\n            {t('recurrence-dialog.confirm-message-1')}\r\n            <br />\r\n            {t('recurrence-dialog.confirm-message-2')}\r\n          </Alert>\r\n        }\r\n      ></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Grid, IconButton, TextField } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype VisitCompanyInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  index: number;\r\n  remove: (index: number) => void;\r\n  disabledVisitor: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function VisitCompanyInputFields(props: VisitCompanyInputFieldsProps) {\r\n  const { control, index, remove, disabledVisitor, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={6}>\r\n        <Controller\r\n          name={`visitCompany.${index}.name`}\r\n          control={control}\r\n          rules={{ required: !disabledVisitor ? (t('common.form.required') as string) : false }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.visit-company-name')}\r\n              disabled={disabledVisitor}\r\n              error={!!errors?.visitCompany?.[index]?.name}\r\n              helperText={errors?.visitCompany?.[index]?.name && errors?.visitCompany?.[index]?.name?.message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <Controller\r\n          name={`visitCompany.${index}.rep`}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.visit-company-rep')}\r\n              disabled={disabledVisitor}\r\n              error={!!errors?.visitCompany?.[index]?.rep}\r\n              helperText={errors?.visitCompany?.[index]?.rep && errors?.visitCompany?.[index]?.rep?.message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1} style={{ margin: 'auto', marginLeft: '-7px' }}>\r\n        <IconButton onClick={() => remove(index)} color=\"primary\" aria-label={t('common.button.delete')} component=\"span\" disabled={index === 0}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Controller, SubmitHandler, useFieldArray, useForm, useWatch } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List, Typography, TextField } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { nameOfUsageRangeForVisitor, Room, UsageRangeForVisitor } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\nimport { PatternedRecurrenceInput } from '_models/PatternedRecurrence';\r\nimport { User } from '_models/User';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { tableTheme, makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\nimport { calcEndTimeFromStartTime, calcStartTime } from '_components/MyTimePicker';\r\nimport { SessionStrageContext } from '_components/BaseTemplate';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\nimport { RecurrenceFields } from './RecurrenceFields';\r\nimport { DateTimePickerFields } from './DateTimePickerFields';\r\nimport { VisitCompanyInputFields } from './VisitCompanyInputFields';\r\nimport { abortRequestSafe } from '_utils/Http';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      marginTop: 0,\r\n    },\r\n    usageGuide: {\r\n      marginTop: '5px',\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 2,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      adornedEnd: {\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n\r\nconst FETCH_ROOMS_SELECT = 'FETCH_INPUT_DIALOG_ROOMS_SELECT';\r\n\r\nexport type AddDefaultType = {\r\n  start: Date;\r\n  roomId: string;\r\n  usageRange: UsageRangeForVisitor;\r\n};\r\n\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (user: User, start?: Date, roomId?: string, usage?: UsageRangeForVisitor) => {\r\n  const startDate = start ? start : new Date();\r\n  const room = roomId ? roomId : '';\r\n  const usageRange = usage ? usage : 'outside';\r\n  const contactAddr = !!user.contactAddr ? user.contactAddr : '';\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: usageRange === 'outside' ? [{ name: '', rep: '' }] : [],\r\n    numberOfVisitor: 0,\r\n    numberOfEmployee: 0,\r\n    mailto: { authors: [], required: [], optional: [] },\r\n    usageRange: usageRange,\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: room,\r\n        teaSupply: false,\r\n        numberOfTeaSupply: 0,\r\n        teaDetails: '',\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: contactAddr,\r\n    startTime: calcStartTime(startDate),\r\n    endTime: calcEndTimeFromStartTime(startDate),\r\n    seriesMasterId: undefined,\r\n    recurrence: undefined,\r\n  } as Inputs;\r\n};\r\n\r\n// useFieldArray使用により、dirtyFields内にfalseの場合もマークアップされるようになった為trueのみに絞り込む\r\nconst cloneDeepWithoutFalse = (obj: any) => {\r\n  // falseを排除したdirtyFieldsを作成\r\n  const withoutFalse = _.transform(obj, (result: any, value, key) => {\r\n    if (value === false) return;\r\n    result[key] = _.isObject(value) ? cloneDeepWithoutFalse(value) : value;\r\n  });\r\n  // ↑から空の配列やオブジェクトを排除\r\n  return _.transform(withoutFalse, (result: any, value, key) => {\r\n    if (value !== true && _.isEmpty(value)) return; // isEmptyにtrueが含まれるらしいので別途条件に追加\r\n    result[key] = _.isObject(value) ? cloneDeepWithoutFalse(value) : value;\r\n  });\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload, addDefault } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const sessionStrageContext = useContext(SessionStrageContext); // sessionStrage取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = useMemo(() => getDefaultValues(sessionStrageContext.userStorage), [sessionStrageContext.userStorage]);\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    clearErrors,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        numberOfVisitor: data.numberOfVisitor,\r\n        numberOfEmployee: data.numberOfEmployee,\r\n        mailto: data.mailto,\r\n        usageRange: data.usageRange,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfTeaSupply: data.resourcies[room].numberOfTeaSupply,\r\n            teaDetails: data.resourcies[room].teaDetails,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n        seriesMasterId: data.seriesMasterId,\r\n        recurrence: !!data.recurrence\r\n          ? ({\r\n              pattern: {\r\n                type: data.recurrence.pattern.type,\r\n                interval: data.recurrence.pattern.interval,\r\n                daysOfWeek: data.recurrence.pattern.daysOfWeek,\r\n                dayOfMonth: data.recurrence.pattern.dayOfMonth,\r\n                index: data.recurrence.pattern.index,\r\n                month: data.recurrence.pattern.month,\r\n              },\r\n              range: {\r\n                type: data.recurrence.range.type,\r\n                startDate: data.recurrence.range.startDate,\r\n                endDate: data.recurrence.range.endDate,\r\n              },\r\n            } as PatternedRecurrenceInput)\r\n          : undefined,\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues(sessionStrageContext.userStorage, addDefault?.start, addDefault?.roomId, addDefault?.usageRange)));\r\n    }\r\n  }, [data, open, reset, addDefault, sessionStrageContext.userStorage]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 利用範囲選択を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [{ data: rooms, isLoading: roomsLoading }, , setUrl] = useLoadData<Room[]>('', [], FETCH_ROOMS_SELECT);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      // 更新時、会議室変更は出来ないためデフォルト値\r\n      setUrl(defaultRoomsUrl);\r\n    } else if (!!getValues('recurrence')) {\r\n      setUrl(defaultRoomsUrl + `&usagerange=${getValues('usageRange')}`);\r\n    } else {\r\n      setUrl(\r\n        defaultRoomsUrl +\r\n          `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}` +\r\n          `&usagerange=${getValues('usageRange')}`\r\n      );\r\n    }\r\n  }, [defaultRoomsUrl, getValues, setUrl]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n    return () => {\r\n      abortRequestSafe(FETCH_ROOMS_SELECT, 'OPTIONAL_REASON'); // manual abort\r\n    };\r\n  }, [buildRoomsUrl, open, usageRangeWatch]); // 利用範囲変更時もリセット対象\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 来訪情報の制御状態\r\n  const [disabledVisitor, setDisabledVisitor] = useState(false);\r\n\r\n  // 利用範囲のエフェクト（来訪情報の制御）\r\n  useEffect(() => {\r\n    // 社内会議\r\n    if (usageRangeWatch === 'inside') {\r\n      clearErrors(['visitCompany', 'numberOfVisitor']);\r\n      setValue('visitCompany', [], { shouldDirty: true });\r\n      setValue('numberOfVisitor', 0, { shouldDirty: true });\r\n      setDisabledVisitor(true);\r\n    } else {\r\n      // 社外会議\r\n      clearErrors('visitCompany');\r\n      setValue('visitCompany', [{ name: '', rep: '' }], { shouldDirty: true });\r\n      setDisabledVisitor(false);\r\n    }\r\n  }, [clearErrors, setValue, usageRangeWatch]);\r\n\r\n  // 予約日時を監視\r\n  const startTimeWatch = useWatch({ control, name: 'startTime' });\r\n  const endTimeWatch = useWatch({ control, name: 'endTime' });\r\n\r\n  // 来訪社/代表者フィールドの配列管理\r\n  const { fields: visitCompanyFields, append: visitCompanyAppend, remove: visitCompanyRemove } = useFieldArray({ control, name: 'visitCompany' });\r\n  const visitCompanyWatch = useWatch({ control, name: 'visitCompany' });\r\n\r\n  // ::アクション処理 start-->\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: cloneDeepWithoutFalse(dirtyFields) });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化\r\n  const activeSearchButton = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n  // 開始日時の変更アクション\r\n  const handleStartTimeChange = () => {\r\n    const endTime = calcEndTimeFromStartTime(getValues('startTime'));\r\n    setValue('endTime', endTime, { shouldDirty: true });\r\n    activeSearchButton();\r\n  };\r\n  // 終了日時の変更アクション\r\n  const handleEndTimeChange = () => {\r\n    activeSearchButton();\r\n  };\r\n\r\n  // 予約日の変更アクション(DateTimePicker用)\r\n  const handleDateChange = (date: Date) => {\r\n    setValue(\r\n      'startTime',\r\n      new Date(date.getFullYear(), date.getMonth(), date.getDate(), getValues('startTime').getHours(), getValues('startTime').getMinutes()),\r\n      { shouldDirty: true }\r\n    );\r\n    handleStartTimeChange();\r\n  };\r\n  //  開始時間の変更アクション(DateTimePicker用)\r\n  const handleStartChange = (date: Date) => {\r\n    setValue('startTime', date, { shouldDirty: true });\r\n    handleStartTimeChange();\r\n  };\r\n  //  終了時間の変更アクション(DateTimePicker用)\r\n  const handleEndChange = (date: Date) => {\r\n    setValue('endTime', date, { shouldDirty: true });\r\n    handleEndTimeChange();\r\n  };\r\n\r\n  // 会議室選択活性化 (定期イベント用)\r\n  const activeRoomSelect = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    setHiddenRooms(false);\r\n    buildRoomsUrl();\r\n  };\r\n\r\n  // 来訪社追加アクション\r\n  const appendVisitorCompany = () => {\r\n    visitCompanyAppend({ name: '', rep: '' });\r\n  };\r\n  // 来訪社削除アクション\r\n  const removeVisitorCompany = (index: number) => {\r\n    visitCompanyRemove(index);\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              <List disablePadding={true}>\r\n                {(() => {\r\n                  if (data.isMSMultipleLocations) {\r\n                    /* mode=upd & 複数会議室 */\r\n                    return (\r\n                      <li className={classes.bottomLine}>\r\n                        <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>\r\n                      </li>\r\n                    );\r\n                  } else {\r\n                    /* mode=upd & 単一会議室 */\r\n                    return (\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                })()}\r\n                <li key=\"reservation-name\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n                  <div className={classes.field}>\r\n                    <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n                  </div>\r\n                </li>\r\n              </List>\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2} pb={0}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              {!!data && (\r\n                <Typography variant=\"caption\" display=\"block\" className={classes.usageGuide}>\r\n                  {t('visitdialog.notes.reply-status')}\r\n                  <UserStatusIconNote />\r\n                </Typography>\r\n              )}\r\n\r\n              <AddrBookAutoComplete\r\n                name={'mailto.authors'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-authors')}\r\n                errors={errors}\r\n                disabled={true}\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.required'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-required')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.optional'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-optional')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n\r\n              <Box py={1} style={!!data ? { display: 'none' } : undefined}>\r\n                <ControllerTextField\r\n                  name={'usageRange'}\r\n                  control={control}\r\n                  label={t('visittable.header.usage-range')}\r\n                  required\r\n                  selectList={nameOfUsageRangeForVisitor.map((value) => {\r\n                    return { label: t(`visitdialog.view.usage-range.${value}`), value: value };\r\n                  })}\r\n                  disabled={!!data}\r\n                  errors={errors}\r\n                />\r\n              </Box>\r\n\r\n              <Grid container spacing={1} style={!!getValues('recurrence') ? { display: 'none' } : undefined}>\r\n                <Grid item xs={5} style={{ display: 'none' }}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleStartTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5} style={{ display: 'none' }}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleEndTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                  <DateTimePickerFields\r\n                    label={t('visittable.header.appt-date-time')}\r\n                    start={startTimeWatch}\r\n                    end={endTimeWatch}\r\n                    onDateChange={handleDateChange}\r\n                    onStartChange={handleStartChange}\r\n                    onEndChange={handleEndChange}\r\n                    disablePast={!data}\r\n                    errMsg={errors['startTime']?.message ? [errors['startTime']?.message] : undefined}\r\n                  ></DateTimePickerFields>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} style={{ margin: 'auto' }}>\r\n                  <Button\r\n                    onClick={handleSearch}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={data?.isMSMultipleLocations || !hiddenRooms}\r\n                    style={getValues('mode') === 'upd' ? { display: 'none' } : undefined}\r\n                  >\r\n                    {t('common.button.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {!data?.seriesMasterId && sessionStrageContext.userStorage.isFront && (\r\n                <Grid>\r\n                  <RecurrenceFields\r\n                    activeRoomSelect={activeRoomSelect}\r\n                    activeSearchButton={activeSearchButton}\r\n                    getValues={getValues}\r\n                    setValue={setValue}\r\n                    clearErrors={clearErrors}\r\n                    errors={errors}\r\n                  ></RecurrenceFields>\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && (\r\n                <RoomInputFields\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  getValues={getValues}\r\n                  clearErrors={clearErrors}\r\n                  rooms={rooms}\r\n                  roomsLoading={roomsLoading}\r\n                  roomId={ADD_ROOM_KEY}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              )\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      getValues={getValues}\r\n                      clearErrors={clearErrors}\r\n                      rooms={rooms}\r\n                      roomsLoading={roomsLoading}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      disabledVisitor={data.usageRange === 'inside'}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box px={2} pt={1} style={disabledVisitor ? { display: 'none' } : undefined}>\r\n              {visitCompanyFields.map((field, index) => (\r\n                <VisitCompanyInputFields\r\n                  key={field.id}\r\n                  control={control}\r\n                  index={index}\r\n                  remove={removeVisitorCompany}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              ))}\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={4} style={disabledVisitor ? { opacity: 0 } : { margin: 'auto' }}>\r\n                  <Button\r\n                    onClick={appendVisitorCompany}\r\n                    startIcon={<AddCircleOutlineIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={visitCompanyWatch.length > 2} // 最大３社まで\r\n                  >\r\n                    {t('visitdialog.button.add-visitor')}\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} sm={4} style={disabledVisitor ? { opacity: 0 } : undefined}>\r\n                  <Controller\r\n                    name={`numberOfVisitor`}\r\n                    control={control}\r\n                    rules={{ required: t('common.form.required') as string }}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        type=\"number\"\r\n                        inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                        {...field}\r\n                        disabled={disabledVisitor}\r\n                        label={t('visittable.header.number-of-visitor')}\r\n                        error={!!errors.numberOfVisitor}\r\n                        helperText={!!errors.numberOfVisitor && errors.numberOfVisitor.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} sm={4}>\r\n                  <Controller\r\n                    name={`numberOfEmployee`}\r\n                    control={control}\r\n                    rules={{ required: t('common.form.required') as string }}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        type=\"number\"\r\n                        inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                        {...field}\r\n                        label={t('visittable.header.number-of-employee')}\r\n                        error={!!errors.numberOfEmployee}\r\n                        helperText={!!errors.numberOfEmployee && errors.numberOfEmployee.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} required errors={errors} />\r\n            </Box>\r\n\r\n            {!!data && (\r\n              <Box px={2}>\r\n                <List disablePadding={true}>\r\n                  <li key=\"datetime\" className={classes.list}>\r\n                    <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n                    <div className={classes.field}>\r\n                      <LastUpdatedField datetime={data.lastUpdated} />\r\n                    </div>\r\n                  </li>\r\n                </List>\r\n              </Box>\r\n            )}\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms || roomsLoading}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('visitdialog.button.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('visitdialog.button.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <MyConfirmDialog\r\n        open={delConfOpen}\r\n        onClose={handleDelConfClose}\r\n        // title={t('visitorinfoform.delete-confirm-title')}\r\n        message={\r\n          data?.eventType === 'seriesMaster' ? t('visitorinfoform.delete-confirm-message.series-master') : t('visitorinfoform.delete-confirm-message')\r\n        }\r\n        color=\"secondary\"\r\n      ></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles, createStyles } from '@material-ui/core';\r\nimport { EmailAddress } from '_models/User';\r\nimport { MyChip } from './MyChip';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      // justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype AddrBookUserDisplayProps = {\r\n  propsKey: string;\r\n  data: EmailAddress[];\r\n};\r\n\r\nexport function AddrBookUserDisplay({ propsKey, data }: AddrBookUserDisplayProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {data.map((user, i) => (\r\n        <MyChip key={`${propsKey}-${i}`} option={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List, Typography } from '@material-ui/core';\r\n\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomReadFields } from './RoomReadFields';\r\nimport { AddrBookUserDisplay } from '_components/AddrBookUserDisplay';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\nimport { RecurrenceInfo } from './RecurrenceInfo';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  // 会議メンバーではない場合、詳細表示NG\r\n  if (!data.isAttendees) {\r\n    return (\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        {t('common.msg.authority-error')}\r\n      </MyDialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          {!data?.recurrence && (\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>{data.apptTime}</div>\r\n            </li>\r\n          )}\r\n          {!!data?.recurrence && (\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visitdialog.notes.recurrence-info')}</div>\r\n              <div className={classes.field}>\r\n                <RecurrenceInfo\r\n                  recurrence={data?.recurrence}\r\n                  start={new Date(data?.startDateTime)}\r\n                  end={new Date(data?.endDateTime)}\r\n                ></RecurrenceInfo>\r\n              </div>\r\n            </li>\r\n          )}\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>\r\n              <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pt={2}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          {t('visitdialog.notes.reply-status')}\r\n          <UserStatusIconNote />\r\n        </Typography>\r\n        <List disablePadding={true}>\r\n          <li key=\"mailto-required\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-required')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay propsKey=\"mailto-required\" data={data.mailto.required} />\r\n            </div>\r\n          </li>\r\n          <li key=\"mailto-optional\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-optional')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay propsKey=\"mailto-optional\" data={data.mailto.optional} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box px={2} pt={2} style={data.usageRange === 'inside' ? { display: 'none' } : undefined}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>\r\n              {t('visittable.header.visit-company-name')} /<br />\r\n              {t('visittable.header.visit-company-rep')}\r\n            </div>\r\n            <div className={classes.field}>\r\n              {data.visitCompany.map((co, index) => (\r\n                <>\r\n                  {!!index && <br />}\r\n                  <span>{`${co.name} / ${co.rep}`}</span>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </li>\r\n\r\n          <li key=\"number-of-visitor\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n            <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n              {data.numberOfVisitor}\r\n            </div>\r\n            <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n              {t('visittable.header.number-of-employee')}\r\n            </div>\r\n            <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n              {data.numberOfEmployee}\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box p={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pb={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"datetime\" className={classes.list}>\r\n            <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n            <div className={classes.field}>\r\n              <LastUpdatedField datetime={data.lastUpdated} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </MyDialog>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { RowDataType } from './DataTableBase';\r\nimport { get } from '_utils/Http';\r\n\r\ntype AnswerType = 'instances' | 'master';\r\n\r\ntype RecurrenceConfirmDialogProps = {\r\n  open: boolean;\r\n  seriesMasterId: string;\r\n  onClose: (isCancel: boolean, master?: RowDataType) => void;\r\n};\r\n\r\nexport function RecurrenceConfirmDialog(props: RecurrenceConfirmDialogProps) {\r\n  const { open, seriesMasterId, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const [answer, setAnswer] = useState<AnswerType>('instances');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer(event.target.value as AnswerType);\r\n  };\r\n\r\n  const handleOkClose = async () => {\r\n    if (answer === 'master') {\r\n      const result = await get<RowDataType>(`/event/visitInfo/${seriesMasterId}`);\r\n      // console.log('seriesMaster', result.parsedBody); // TODO: debug\r\n      onClose(false, result.parsedBody);\r\n    } else {\r\n      onClose(false);\r\n    }\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleCancelClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.recurrence-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.recurrence-confirm-message')}</DialogContentText>\r\n          <Box>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={answer} onChange={handleChange}>\r\n              <FormControlLabel value=\"instances\" control={<Radio />} label={t('visitorinfoform.recurrence-radio-instances')} />\r\n              <FormControlLabel value=\"master\" control={<Radio />} label={t('visitorinfoform.recurrence-radio-master')} />\r\n            </RadioGroup>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { AddDefaultType, RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\nimport { RecurrenceConfirmDialog } from './RecurrenceConfirmDialog';\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n  addDefault?: AddDefaultType;\r\n  recConfOpen?: boolean;\r\n};\r\n\r\nexport type DataDialogAction =\r\n  | {\r\n      type: 'inputOpen' | 'readOpen' | 'inputClose' | 'readClose' | 'recConfOpen' | 'recConfClose' | 'recConfCancel';\r\n    }\r\n  | { type: 'addDataOpen'; addDefault?: AddDefaultType };\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false, addDefault: action.addDefault };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    case 'recConfOpen':\r\n      return { ...state, recConfOpen: true };\r\n    case 'recConfClose':\r\n      return { ...state, recConfOpen: false };\r\n    case 'recConfCancel':\r\n      return { ...state, recConfOpen: false, inputOpen: false, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n  onRecConfClose?: (isCancel: boolean, master?: RowDataType) => void;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children, onRecConfClose } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen && !dataDialogHook.state.recConfOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n        addDefault={dataDialogHook.state.addDefault}\r\n      />\r\n      {!!currentRow && (\r\n        <RowDataReadDialog\r\n          open={dataDialogHook.state.readOpen && !dataDialogHook.state.recConfOpen}\r\n          onClose={handleReadDialogClose}\r\n          data={currentRow}\r\n        />\r\n      )}\r\n      {!!currentRow && !!currentRow.seriesMasterId && !!onRecConfClose && (\r\n        <RecurrenceConfirmDialog open={!!dataDialogHook.state.recConfOpen} seriesMasterId={currentRow.seriesMasterId} onClose={onRecConfClose} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import SyncIcon from '@material-ui/icons/Sync';\r\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled';\r\n\r\nimport { GraphApiEventType } from '_models/VisitorInfo';\r\n\r\ntype EventTypeIconProps = {\r\n  type: GraphApiEventType;\r\n};\r\n\r\nconst style = { fontSize: '1.2em', marginLeft: '3px', marginRight: '3px', verticalAlign: 'text-bottom', color: 'gray' };\r\n\r\nexport const EventTypeIcon = (props: EventTypeIconProps) => {\r\n  const { type } = props;\r\n\r\n  switch (type) {\r\n    case 'occurrence':\r\n      return <SyncIcon style={style} />;\r\n    case 'exception':\r\n      return <SyncDisabledIcon style={style} />;\r\n    case 'seriesMaster':\r\n    case 'singleInstance':\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitCompany } from '_models/VisitorInfo';\r\n\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { EventTypeIcon } from '../EventTypeIcon';\r\n\r\nconst useStyles = makeVisitorTableStyles(false);\r\n\r\nconst visitCompanies = (rowData: RowDataType) => rowData.visitCompany.map((co: VisitCompany) => `${co.name}`).join(', ');\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  render?: (rowData: RowDataType) => any;\r\n  customSort?: (a: RowDataType, b: RowDataType) => number;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<RowDataType[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`);\r\n  }, [currentDate, match.params.location, setUrl]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  const columns: Columns[] = [\r\n    {\r\n      title: t('visittable.header.appt-time'),\r\n      field: 'apptTime',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.apptTime}\r\n          <EventTypeIcon type={rowData.eventType} />\r\n        </>\r\n      ),\r\n    },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n    {\r\n      title: t('visittable.header.visit-company-name'),\r\n      field: 'visitCompany',\r\n      render: (rowData) => visitCompanies(rowData),\r\n      customSort: (a, b) => (visitCompanies(a) < visitCompanies(b) ? -1 : 1),\r\n    },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Grid, IconButton, makeStyles } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRIghtIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { DataDialogAction } from './DataTableBase';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  arrowLeft: {\r\n    paddingTop: 7,\r\n    marginRight: -5,\r\n  },\r\n  arrowRight: {\r\n    paddingTop: 7,\r\n    marginLeft: -5,\r\n  },\r\n  arrowIcon: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  datePicker: {\r\n    margin: 'auto 0',\r\n  },\r\n  title: {\r\n    margin: 'auto 0.25em',\r\n  },\r\n}));\r\n\r\ntype HeaderActionsProps = {\r\n  title: string;\r\n  subtitle?: string;\r\n  date: Date | null;\r\n  onDateChange: (date: Date | null) => void;\r\n  onDatePrev: () => void;\r\n  onDateNext: () => void;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n  actionButtons?: React.ReactNode[];\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { subtitle, date, onDateChange, onDatePrev, onDateNext, dispatch, actionButtons } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container alignItems=\"center\" item xs={12} sm={!!actionButtons ? 6 : 9}>\r\n          <Grid item className={classes.arrowLeft}>\r\n            <IconButton className={classes.arrowIcon} onClick={onDatePrev}>\r\n              <ArrowLeftIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item className={classes.datePicker}>\r\n            <MyCalendar label={t('main.header.picker-label')} date={date} onChange={onDateChange} />\r\n          </Grid>\r\n          <Grid item className={classes.arrowRight} onClick={onDateNext}>\r\n            <IconButton className={classes.arrowIcon}>\r\n              <ArrowRIghtIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Grid>\r\n          {/* <Grid item className={classes.title}>\r\n            <Typography component=\"h5\">{title}</Typography>\r\n          </Grid> */}\r\n        </Grid>\r\n\r\n        <Grid container item justifyContent=\"flex-end\" alignItems=\"center\" spacing={2} xs={12} sm={!!actionButtons ? 6 : 3}>\r\n          {!!actionButtons &&\r\n            actionButtons.map((item, index) => {\r\n              return (\r\n                <Grid item key={`actionButtons-${index}`}>\r\n                  {item}\r\n                </Grid>\r\n              );\r\n            })}\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n              {t('main.header.add-event')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box pt={1}>{subtitle}</Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // isCreatedOnlyの状態\r\n  const [createdOnly, setCreatedOnly] = useState(false);\r\n  useEffect(() => {\r\n    setCreatedOnly(false); // TODO: production.jsの値を反映\r\n  }, []);\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.visitlist.title')}\r\n            subtitle={t(`main.visitlist.subtitle${createdOnly ? '.created-only' : ''}`)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Tooltip, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { differenceInMinutes, endOfDay, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport _ from 'lodash';\r\nimport clsx from 'clsx';\r\n\r\nimport { Schedule, ScheduleItem } from '_models/Schedule';\r\nimport { UsageRangeForVisitor } from '_models/Room';\r\n\r\nimport { DataDialogAction, DataDialogState, RowDataType } from 'main/DataTableBase';\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport type BoxStyleType = 'short' | 'long';\r\n\r\ntype BoxStyle = {\r\n  width: number;\r\n  halfWidth: number;\r\n  scale: number;\r\n  transform: Point;\r\n};\r\n\r\ntype BoxData = {\r\n  x: number;\r\n  width: number;\r\n  className: string;\r\n};\r\n\r\n// 8-20\r\nconst shortStyle: BoxStyle = {\r\n  width: 120,\r\n  halfWidth: 60,\r\n  scale: 2,\r\n  transform: { x: -960, y: 0 },\r\n};\r\n// 0-24\r\nconst longStyle: BoxStyle = {\r\n  width: 60,\r\n  halfWidth: 30,\r\n  scale: 1,\r\n  transform: { x: 0, y: 0 },\r\n};\r\n\r\nconst viewWidth = 60 * 24;\r\nconst viewHeight = 70;\r\nconst viewWidthMargin = 1; // lineの一番両端が身切れして他のlineより細くなる現象を避けるため\r\nconst viewWidthWrap = viewWidth + viewWidthMargin * 2;\r\nconst fontHeight = 30;\r\nconst fontMargin = 5;\r\n\r\nconst timeToPoint = (time: Date, boxStyle: BoxStyle) => {\r\n  const zero = startOfDay(time);\r\n  return differenceInMinutes(time, zero) * boxStyle.scale;\r\n};\r\n\r\nconst pointToTime = (point: number, boxStyle: BoxStyle) => {\r\n  const offset = 0;\r\n  return ((point + offset) / boxStyle.scale) * 60 * 1000;\r\n};\r\n\r\nconst getBoxData = (item: ScheduleItem, boxStyle: BoxStyle, currentDate: Date): BoxData => {\r\n  const start = new Date(item.start);\r\n  const end = new Date(item.end);\r\n  let x = timeToPoint(start, boxStyle);\r\n  let x2 = timeToPoint(end, boxStyle);\r\n  // 日を跨ぐ場合\r\n  if (!isSameDay(start, end)) {\r\n    const startOfCurrent = startOfDay(currentDate);\r\n    const endOfCurrent = endOfDay(currentDate);\r\n    // 翌日に続く\r\n    if (isBefore(endOfCurrent, end)) {\r\n      x2 = timeToPoint(endOfCurrent, boxStyle);\r\n    }\r\n    // 前日から続いている\r\n    if (isAfter(startOfCurrent, start)) {\r\n      x = timeToPoint(startOfCurrent, boxStyle);\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    width: x2 - x,\r\n    className: item.status,\r\n  };\r\n};\r\n\r\nconst calcX = (hour: number, width: number) => (hour + 1) * width + viewWidthMargin;\r\n\r\nconst createTransform = (boxStyle: BoxStyle) => {\r\n  return `translate(${boxStyle.transform.x},${boxStyle.transform.y})`;\r\n};\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    color: theme.palette.text.primary,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      marginBottom: '0.5rem',\r\n      // height: '5vmin',\r\n      '& svg': {\r\n        fontSize: '1.5rem',\r\n        '& line': {\r\n          strokeWidth: 2,\r\n        },\r\n        '& line.hour-line': {\r\n          stroke: theme.palette.grey[400],\r\n        },\r\n        '& line.hour-half-line': {\r\n          stroke: theme.palette.grey[300],\r\n        },\r\n        '& text': {\r\n          fill: theme.palette.grey[400],\r\n        },\r\n        '& text.subject': {\r\n          fill: '#fff',\r\n          fontSize: '1.2rem',\r\n          dominantBaseline: 'central',\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect': {\r\n          strokeWidth: 1,\r\n          fillOpacity: 0.5,\r\n        },\r\n        '& rect.new-event-bar': {\r\n          fillOpacity: 0,\r\n        },\r\n        '& rect.event': {\r\n          stroke: theme.palette.success.main,\r\n          fill: theme.palette.success.light,\r\n          fillOpacity: 0.9,\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect.myOwn': {\r\n          stroke: theme.palette.info.main,\r\n          fill: theme.palette.info.light,\r\n        },\r\n        '& rect.wait': {\r\n          stroke: theme.palette.warning.light,\r\n          fill: theme.palette.warning.main,\r\n        },\r\n        '& rect.busy': {\r\n          stroke: theme.palette.error.light,\r\n          fill: theme.palette.error.main,\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      // color: theme.palette.grey[500],\r\n      fontSize: '1rem',\r\n      paddingBottom: 0,\r\n    },\r\n  })\r\n);\r\n\r\ntype TimeBarProps = {\r\n  rangeToggle: BoxStyleType;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  schedule: Schedule;\r\n  events: RowDataType[][];\r\n  onClickCallback: (rowData: RowDataType) => void;\r\n  keyLabel: string; //schedule.roomName\r\n  keyValue: string; //schedule.roomEmail\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function TimeBar(props: TimeBarProps) {\r\n  const { rangeToggle, dataDialogHook, schedule, events, onClickCallback, keyLabel, keyValue, onTitleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const [boxStyle, setBoxStyle] = useState(shortStyle);\r\n  const [transform, setTransform] = useState(createTransform(boxStyle));\r\n\r\n  useEffect(() => {\r\n    setBoxStyle(rangeToggle === 'short' ? shortStyle : longStyle);\r\n  }, [rangeToggle]);\r\n\r\n  useEffect(() => {\r\n    setTransform(createTransform(boxStyle));\r\n  }, [boxStyle, events]);\r\n\r\n  const hRatio = 1;\r\n  const rectY = fontHeight + (viewHeight - fontHeight) * (1 - hRatio) + 1;\r\n  const rectHeight = (viewHeight - fontHeight) * hRatio - 1;\r\n  const viewHeightDup = schedule.type === 'free' ? viewHeight + rectHeight * (schedule.scheduleItems.length - 1) + rectHeight : viewHeight;\r\n\r\n  // スケジュール枠の作成\r\n  const createScheduleBox = useCallback(\r\n    (item: ScheduleItem, index: number, timestamp: number, rowIndex: number) => {\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      return (\r\n        <rect\r\n          key={`${keyValue}-sc-${index}`}\r\n          className={boxData.className}\r\n          x={boxData.x}\r\n          y={rectY + rectHeight * rowIndex}\r\n          width={boxData.width}\r\n          height={rectHeight}\r\n          rx={3}\r\n          ry={5}\r\n        ></rect>\r\n      );\r\n    },\r\n    [boxStyle, keyValue, rectY, rectHeight]\r\n  );\r\n\r\n  // イベント枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createEventBox = useCallback(\r\n    (event: RowDataType, index: number, timestamp: number, rowIndex: number) => {\r\n      const item: ScheduleItem = { status: 'event', start: event.startDateTime, end: event.endDateTime + event.cleaningTime };\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      const x = boxData.x;\r\n      const y = rectY + rectHeight * rowIndex;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      const myEvent = event.isAttendees ? 'myOwn' : '';\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${keyValue}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n          onClick={() => {\r\n            onClickCallback(event);\r\n          }}\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={clsx(boxData.className, myEvent)} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, rectY, rectHeight, keyValue, onClickCallback]\r\n  );\r\n\r\n  // 新規作成ボタン(開始時間の指定あり)\r\n  const handleCreateClick = (\r\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\r\n    timestamp: number,\r\n    roomId: string,\r\n    usageRange: UsageRangeForVisitor\r\n  ) => {\r\n    const svg: SVGSVGElement | null = event.currentTarget.closest('svg');\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = event.clientX;\r\n    pt.y = event.clientY;\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) return;\r\n\r\n    const svgP = pt.matrixTransform(ctm.inverse());\r\n    const rectX = svgP.x - boxStyle.transform.x + viewWidthMargin;\r\n    const $time = pointToTime(rectX, boxStyle);\r\n    const time = Math.floor($time / 1000 / 60 / 30) * 1000 * 60 * 30; //TODO: Interval config化？\r\n    const start = new Date(startOfDay(timestamp).getTime() + time);\r\n\r\n    dataDialogHook.dispatch({ type: 'addDataOpen', addDefault: { start: start, roomId: roomId, usageRange: usageRange } });\r\n  };\r\n\r\n  // スケジュール枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectSchedules = useMemo(() => {\r\n    return <>{schedule.scheduleItems.map((row, rowIndex) => row.map((item, index) => createScheduleBox(item, index, schedule.date, rowIndex)))}</>;\r\n  }, [createScheduleBox, schedule]);\r\n\r\n  // イベント枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectEvents = useMemo(() => {\r\n    return <>{events.map((row, rowIndex) => row.map((event, index) => createEventBox(event, index, schedule.date, rowIndex)))}</>;\r\n  }, [createEventBox, events, schedule]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Typography className={classes.title}>{keyLabel}</Typography> */}\r\n      <Button\r\n        color=\"secondary\"\r\n        className={classes.title}\r\n        size=\"small\"\r\n        onClick={() => onTitleClick(schedule.date, schedule.categoryId, schedule.roomId)}\r\n      >\r\n        {keyLabel}\r\n      </Button>\r\n      <div className={classes.container}>\r\n        <svg viewBox={`0 0 ${viewWidthWrap} ${viewHeightDup}`} preserveAspectRatio=\"none\">\r\n          <g transform={transform}>\r\n            <line className=\"hour-line\" x1={0} y1={0} x2={0} y2={viewHeightDup}></line>\r\n            <line className=\"hour-half-line\" x1={boxStyle.halfWidth} y1={fontHeight} x2={boxStyle.halfWidth} y2={viewHeightDup}></line>\r\n            {_.range(0, 24).map(($) => {\r\n              const x = calcX($, boxStyle.width);\r\n              const minX = x + boxStyle.halfWidth;\r\n              const fontX = $ * boxStyle.width + fontMargin;\r\n              return (\r\n                <Fragment key={`fragment-${$}`}>\r\n                  <line key={`hour-line-${$}`} className=\"hour-line\" x1={x} y1={0} x2={x} y2={viewHeightDup}></line>\r\n                  <line key={`hour-half-line-${$}`} className=\"hour-half-line\" x1={minX} y1={fontHeight} x2={minX} y2={viewHeightDup}></line>\r\n                  <text key={`hour-text-${$}`} x={fontX} y={fontHeight - 5}>\r\n                    {$}\r\n                  </text>\r\n                </Fragment>\r\n              );\r\n            })}\r\n            <rect\r\n              className=\"new-event-bar\"\r\n              x={0}\r\n              y={rectY}\r\n              width={calcX(24, boxStyle.width)}\r\n              height={viewHeightDup - rectY}\r\n              onClick={(e) => handleCreateClick(e, schedule.date, schedule.roomId, schedule.usageRange)}\r\n            ></rect>\r\n            {rectSchedules}\r\n            {rectEvents}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Grid, withStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport { BoxStyleType } from './TimeBar';\r\n\r\nconst RangeToggleGroup = withStyles(() => ({\r\n  root: {},\r\n}))(ToggleButtonGroup);\r\n\r\nconst RangeToggle = withStyles(() => ({\r\n  root: {\r\n    fontSize: '1.1em',\r\n    padding: '2px 10px',\r\n    '&$selected': {\r\n      backgroundColor: grey[300],\r\n      color: grey[600],\r\n      '&:hover': {\r\n        backgroundColor: grey[100],\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n}))(ToggleButton);\r\n\r\ntype TimeBarRangeToggleProps = {\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n};\r\n\r\nexport function TimeBarRangeToggle(props: TimeBarRangeToggleProps) {\r\n  const { rangeToggle, onChangeRangeToggle } = props;\r\n\r\n  const handleChange = (_event: React.MouseEvent<HTMLElement>, value: BoxStyleType) => {\r\n    if (!value) return;\r\n    onChangeRangeToggle(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"flex-end\">\r\n      <Grid item xs={12} style={{ textAlign: 'right' }}>\r\n        <RangeToggleGroup size=\"small\" value={rangeToggle} exclusive onChange={handleChange}>\r\n          <RangeToggle value=\"short\">\r\n            <>8-20</>\r\n          </RangeToggle>\r\n          <RangeToggle value=\"long\">\r\n            <>1Day</>\r\n          </RangeToggle>\r\n        </RangeToggleGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { BoxStyleType, TimeBar } from '../TimeBar';\r\nimport { TimeBarRangeToggle } from 'main/TimeBarRangeToggle';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, rangeToggle, onChangeRangeToggle, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<TimeBarDataType>('', undefined);\r\n  useEffect(() => {\r\n    setUrl(`/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${tabKey}`);\r\n  }, [currentDate, match.params.location, setUrl, tabKey]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            rangeToggle={rangeToggle}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={schedule.roomName}\r\n            keyValue={schedule.roomEmail}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, onTitleClick, rangeToggle]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <TimeBarRangeToggle rangeToggle={rangeToggle} onChangeRangeToggle={onChangeRangeToggle} />\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { MuiPickersContext } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport { useContext, useEffect, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { BoxStyleType, TimeBar } from '../TimeBar';\r\nimport { TimeBarRangeToggle } from 'main/TimeBarRangeToggle';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTableWeekly(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, rangeToggle, onChangeRangeToggle, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<TimeBarDataType>('', undefined);\r\n  useEffect(() => {\r\n    setUrl(`/event/byroom/weekly?timestamp=${currentDate!.getTime()}&location=${match.params.location}&room=${tabKey}`);\r\n  }, [currentDate, match.params.location, setUrl, tabKey]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            rangeToggle={rangeToggle}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={format(schedule.date, 'yyyy/MM/dd (E)', { locale: muiPickContext?.locale })}\r\n            keyValue={schedule.date.toString()}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, muiPickContext?.locale, onTitleClick, rangeToggle]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <TimeBarRangeToggle rangeToggle={rangeToggle} onChangeRangeToggle={onChangeRangeToggle} />\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { cloneElement, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { AppBar, Tab } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nimport { getReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\ninterface TabModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ntype MyTabContextProps<T extends TabModel> = {\r\n  data: Array<T>;\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function MyTabContext<T extends TabModel>(props: MyTabContextProps<T>) {\r\n  const { data, tabPanelContent, selected } = props;\r\n\r\n  // タブパネルとタブリストの描画が揃ってから表示するための制御\r\n  const [activateTab, setActivateTab] = useState(false);\r\n  useEffect(() => setActivateTab(true), []);\r\n\r\n  // タブの状態\r\n  const [tabValue, setTabValue] = useState('');\r\n\r\n  // タブの自動選択\r\n  useEffect(() => {\r\n    if (!!selected) {\r\n      setTabValue(selected);\r\n    } else {\r\n      setTabValue(data[0].id);\r\n    }\r\n  }, [data, selected]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('tabValue', tabValue);\r\n    }\r\n  }, [tabValue]);\r\n  // ================================\r\n\r\n  // タブ切り替えアクション\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // タブリストの表示（不要レンダリングが起きるためメモ化）\r\n  const tabList = useMemo(() => {\r\n    return (\r\n      <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"scrollable\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n        {data?.map((item, index) => (\r\n          <Tab key={`tab-${index}`} label={item.name} value={`${item.id}`} />\r\n        ))}\r\n      </TabList>\r\n    );\r\n  }, [data]);\r\n\r\n  // タブパネルの表示（不要レンダリングが起きるためメモ化）\r\n  const tabPanels = useMemo(() => {\r\n    return (\r\n      <>\r\n        {data?.map((item, index) => {\r\n          return (\r\n            <TabPanel key={`tab-panel-${index}`} value={`${item.id}`}>\r\n              {cloneElement(tabPanelContent, { tabKey: item.id })}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [data, tabPanelContent]);\r\n\r\n  if (!activateTab) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        {tabList}\r\n      </AppBar>\r\n      {tabPanels}\r\n    </TabContext>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { LocationParams } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\ntype CategoryTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function CategoryTabContext(props: CategoryTabContextProps) {\r\n  const { tabPanelContent, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // カテゴリ取得\r\n  const [{ data, isLoading }, , setUrl] = useLoadData<Category[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/category/choices?location=${match.params.location}&tab=byroom`);\r\n  }, [match.params.location, setUrl]);\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      {!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Room } from '_models/Room';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\ntype RoomTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function RoomTabContext(props: RoomTabContextProps) {\r\n  const { tabPanelContent, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // カテゴリ取得\r\n  const [{ data, isLoading }, , setUrl] = useLoadData<Room[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/room/choices?location=${match.params.location}&samecategory=${selected}`);\r\n  }, [match.params.location, selected, setUrl]);\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      {!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { DataTableWeekly } from './DataTableWeekly';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { CategoryTabContext } from '../CategoryTabContext';\r\nimport { RoomTabContext } from 'main/RoomTabContext';\r\nimport { BoxStyleType } from 'main/TimeBar';\r\n\r\nexport type ByRoomState = {\r\n  weekly: boolean;\r\n  changeTab: string | undefined;\r\n  titleLabel: string;\r\n  subtitleLabel: string;\r\n};\r\n\r\nexport type ByRoomAction = {\r\n  type: 'default' | 'weekly';\r\n  changeTab: string;\r\n};\r\n\r\nexport const byRoomReducer = (state: ByRoomState, action: ByRoomAction) => {\r\n  switch (action.type) {\r\n    case 'default':\r\n      return { weekly: false, changeTab: action.changeTab, titleLabel: 'main.byroom.title', subtitleLabel: 'main.byroom.subtitle' };\r\n    case 'weekly':\r\n      return {\r\n        weekly: true,\r\n        changeTab: action.changeTab,\r\n        titleLabel: 'main.byroom-weekly.title',\r\n        subtitleLabel: 'main.byroom-weekly.subtitle',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext, setWeekly] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // １週間表示切替えの状態管理\r\n  const [byRoomState, byRoomDispatch] = useReducer(byRoomReducer, {\r\n    weekly: false,\r\n    changeTab: undefined,\r\n    titleLabel: 'main.byroom.title',\r\n    subtitleLabel: 'main.byroom.subtitle',\r\n  });\r\n\r\n  // タイムバー表示範囲の状態\r\n  const [rangeToggle, setRangeToggle] = useState<BoxStyleType>('short');\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      byRoomDispatch({ type: !!getReloadState('weekly') ? 'weekly' : 'default', changeTab: getReloadState('tabValue') });\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('weekly', byRoomState.weekly ? '1' : '');\r\n    }\r\n  }, [byRoomState.weekly]);\r\n  // ================================\r\n\r\n  // タイムバー表示範囲の切替えアクション\r\n  const handleRangeToggleChange = (value: BoxStyleType) => {\r\n    setRangeToggle(value);\r\n  };\r\n\r\n  // デフォルト → １週間表示へ切替えアクション\r\n  const handleDefaultClick = (timestamp: number, _categoryId: string, roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    setWeekly(true);\r\n    byRoomDispatch({ type: 'weekly', changeTab: roomId });\r\n  };\r\n\r\n  // １週間 → デフォルト表示へ切替えアクション\r\n  const handleWeeklyClick = (timestamp: number, categoryId: string, _roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    setWeekly(false);\r\n    byRoomDispatch({ type: 'default', changeTab: categoryId });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t(byRoomState.titleLabel)}\r\n            subtitle={t(byRoomState.subtitleLabel)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        {\r\n          /* デフォルト表示 */\r\n          !byRoomState.weekly && (\r\n            <CategoryTabContext\r\n              tabPanelContent={\r\n                <DataTable\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  rangeToggle={rangeToggle}\r\n                  onChangeRangeToggle={handleRangeToggleChange}\r\n                  onTitleClick={handleDefaultClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          /* １週間表示 */\r\n          byRoomState.weekly && (\r\n            <RoomTabContext\r\n              tabPanelContent={\r\n                <DataTableWeekly\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  rangeToggle={rangeToggle}\r\n                  onChangeRangeToggle={handleRangeToggleChange}\r\n                  onTitleClick={handleWeeklyClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n            />\r\n          )\r\n        }\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Box, Button, List, makeStyles, TextField } from '@material-ui/core';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport { FrontRowData } from './DataTable';\r\n\r\nimport { RoomReadFields } from 'main/RoomReadFields';\r\nimport { LastUpdatedField } from 'main/LastUpdatedField';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { FrontInputType, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles({\r\n  checkAction: {\r\n    textAlign: 'center',\r\n    marginBottom: '10px',\r\n    '& Button': {\r\n      margin: '0 5%',\r\n      width: '40%',\r\n    },\r\n  },\r\n});\r\n\r\ntype Inputs = {\r\n  mode: 'checkin' | 'checkout';\r\n} & VisitorInfoFront &\r\n  FrontInputType;\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: FrontRowData;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataFrontDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n  const frontClasses = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        iCalUId: data.iCalUId,\r\n        seriesMasterId: data.seriesMasterId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd HH:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('mode', 'checkin');\r\n    setValue('checkIn', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('mode', 'checkout');\r\n    setValue('checkOut', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData(`/front/${formData.mode}`, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <Box p={2}>\r\n          <form>\r\n            <div className={frontClasses.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  // required: t('common.form.required') as string,\r\n                })}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>{data.apptTime}</div>\r\n            </li>\r\n            <li key=\"check-in\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-in')}</div>\r\n              <div className={classes.field}>{data.checkIn}</div>\r\n            </li>\r\n            <li key=\"check-out\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-out')}</div>\r\n              <div className={classes.field}>{data.checkOut}</div>\r\n            </li>\r\n            {/* <li key=\"event-subject\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n              <div className={classes.field}>{data.subject}</div>\r\n            </li> */}\r\n            <li key=\"visit-company\" className={classes.list}>\r\n              <div className={classes.title}>\r\n                {t('visittable.header.visit-company-name')} /<br />\r\n                {t('visittable.header.visit-company-rep')}\r\n              </div>\r\n              <div className={classes.field}>\r\n                {data.visitCompany.map((co, index) => (\r\n                  <>\r\n                    {!!index && <br />}\r\n                    <span>{`${co.name} / ${co.rep}`}</span>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </li>\r\n            <li key=\"number-of-visitor\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n              <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                {data.numberOfVisitor}\r\n              </div>\r\n              <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                {t('visittable.header.number-of-employee')}\r\n              </div>\r\n              <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                {data.numberOfEmployee}\r\n              </div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"comment\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n              <div className={classes.field}>{data.comment}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        {Object.keys(data.resourcies).map((roomId) => {\r\n          return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n        })}\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"reservation-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n              <div className={classes.field}>{data.reservationName}</div>\r\n            </li>\r\n            <li key=\"contact-addr\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n              <div className={classes.field}>{data.contactAddr}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        <Box p={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"datetime\" className={classes.list}>\r\n              <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n              <div className={classes.field}>\r\n                <LastUpdatedField datetime={data.lastUpdated} />\r\n              </div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport { pageingOntions, tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { RowDataFrontDialog } from './RowDataFrontDialog';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitCompany, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { cellStyle, makeVisitorTableStyles, frontCellPadding } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nconst useStyles = makeVisitorTableStyles(true);\r\nconst visitCompanies = (rowData: FrontRowData) => rowData.visitCompany.map((co: VisitCompany) => `${co.name} / ${co.rep}`).join(', ');\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  width?: string;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: FrontRowData) => any;\r\n  customSort?: (a: FrontRowData, b: FrontRowData) => number;\r\n};\r\n\r\nexport type FrontRowData = RowDataType & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<FrontRowData[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/front/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`);\r\n  }, [currentDate, match.params.location, setUrl]);\r\n\r\n  // フロント用ダイアログの状態\r\n  const [frontDialogOpen, setFrontDialogOpen] = useState(false);\r\n\r\n  // 編集用選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n  // フロント用選択行の状態\r\n  const [fronCurrentRow, setFronCurrentRow] = useState<FrontRowData | null>(null);\r\n\r\n  // フロント用ダイアログを開く\r\n  const handleFrontDialogOpen = (selectedRow: FrontRowData) => {\r\n    setFrontDialogOpen(true);\r\n    setFronCurrentRow(selectedRow);\r\n  };\r\n  // フロント用ダイアログを閉じる\r\n  const handleFrontDialogClose = async () => {\r\n    setFrontDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    {\r\n      title: t('visittable.header.appt-time'),\r\n      field: 'apptTime',\r\n      render: (rowData) => rowData.apptTime.split(' ')[1],\r\n      width: '95px',\r\n    },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    {\r\n      title: t('visittable.header.number-of-people'),\r\n      field: 'teaSupply',\r\n      render: (rowData) => {\r\n        const roomId = Object.keys(rowData.resourcies)[0]; // TODO:複数会議室未対応\r\n        const strNumOfTeaSupply = `${t('visitdialog.view.tea-supply.number-of-tea-supply')}:${rowData.resourcies[roomId].numberOfTeaSupply}`;\r\n\r\n        const strNumOfVisitor = `${t('visitdialog.view.tea-supply.number-of-visitor')}:${rowData.numberOfVisitor}`;\r\n        const strNumOfEmployee = `${t('visitdialog.view.tea-supply.number-of-employee')}:${rowData.numberOfEmployee}`;\r\n\r\n        return (\r\n          <>\r\n            <span style={rowData.resourcies[roomId].teaSupply ? { color: 'red' } : undefined}>{strNumOfTeaSupply}</span>\r\n            <br />\r\n            {strNumOfVisitor}\r\n            <br />\r\n            {strNumOfEmployee}\r\n          </>\r\n        );\r\n      },\r\n      customSort: (a, b) => {\r\n        const aRoomId = Object.keys(a.resourcies)[0]; // TODO:複数会議室未対応\r\n        const bRoomId = Object.keys(b.resourcies)[0]; // TODO:複数会議室未対応\r\n        return a.resourcies[aRoomId].numberOfTeaSupply - b.resourcies[bRoomId].numberOfTeaSupply;\r\n      },\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.visit-company-name')} / ${t('visittable.header.visit-company-rep')}`,\r\n      field: 'visitCompany',\r\n      render: (rowData) =>\r\n        rowData.visitCompany.map((co, index) => (\r\n          <>\r\n            {!!index && <br />}\r\n            <span>{`${co.name} / ${co.rep}`}</span>\r\n          </>\r\n        )),\r\n      customSort: (a, b) => (visitCompanies(a) < visitCompanies(b) ? -1 : 1),\r\n    },\r\n    {\r\n      title: t('visittable.header.check-in'),\r\n      field: 'checkIn',\r\n      render: (rowData) =>\r\n        rowData.checkIn ? (\r\n          <>\r\n            <span>✓</span>\r\n            <br />\r\n            <span>{rowData.visitorCardNumber}</span>\r\n          </>\r\n        ) : (\r\n          <span></span>\r\n        ),\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: t('visittable.header.check-out'),\r\n      field: 'checkOut',\r\n      render: (rowData) => (rowData.checkOut ? <span>✓</span> : <span></span>),\r\n      width: '50px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.reservation-name')} / ${t('visittable.header.contact-addr')}`,\r\n      field: 'reservationName',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.reservationName}\r\n          <br />\r\n          {rowData.contactAddr}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: `${t('visittable.header.tea-details')} / ${t('visittable.header.comment')}`,\r\n      field: 'comment',\r\n      render: (rowData) => {\r\n        const roomId = Object.keys(rowData.resourcies)[0]; // TODO:複数会議室未対応\r\n        const teaDetails = !!rowData.resourcies[roomId].teaDetails ? (\r\n          <>\r\n            <span style={{ color: 'red' }}>{rowData.resourcies[roomId].teaDetails}</span>\r\n            <br />\r\n          </>\r\n        ) : undefined;\r\n        return (\r\n          <>\r\n            {teaDetails}\r\n            {rowData.comment}\r\n          </>\r\n        );\r\n      },\r\n      width: '70%',\r\n    },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <MaterialTable\r\n        columns={columns as Column<FrontRowData>[]}\r\n        components={{\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleFrontDialogOpen(selectedRow)}\r\n        actions={[\r\n          {\r\n            icon: () => <BorderColorIcon />,\r\n            tooltip: t('visittable.header.edit-action'),\r\n            onClick: (_, rowData) => !!rowData && handleDialogOpen(rowData as FrontRowData),\r\n          },\r\n        ]}\r\n        localization={{\r\n          header: { actions: '' },\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light, padding: frontCellPadding },\r\n          tableLayout: 'fixed',\r\n          // actionsColumnIndex: -1,\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {fronCurrentRow && <RowDataFrontDialog open={frontDialogOpen} onClose={handleFrontDialogClose} data={fronCurrentRow} reload={reload} />}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useContext, useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { addWeeks, format, startOfDay } from 'date-fns';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { CSVLink } from 'react-csv';\r\nimport _ from 'lodash';\r\n\r\nimport { Box, Button, Grid, makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfo, VisitorInfoFront, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n  between: { textAlign: 'center' },\r\n});\r\n\r\ntype ExportCsvParams = {\r\n  location: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n};\r\n\r\ntype DataType = VisitorInfo & VisitorInfoReadOnly & VisitorInfoFront;\r\n\r\nconst nameOfCsvHeaders = [\r\n  'apptTime',\r\n  'roomName',\r\n  'teaSupply',\r\n  'numberOfTeaSupply',\r\n  'teaDetails',\r\n  'numberOfVisitor',\r\n  'numberOfEmployee',\r\n  'visitCompany',\r\n  'checkIn',\r\n  'visitorCardNumber',\r\n  'checkOut',\r\n  'reservationName',\r\n  'contactAddr',\r\n  'subject',\r\n  'comment',\r\n] as const;\r\ntype TypeOfCsvHeaders = typeof nameOfCsvHeaders[number];\r\ntype CsvDataType = {\r\n  [P in TypeOfCsvHeaders]: string;\r\n};\r\ntype CsvHeaderType = { label: string; key: keyof CsvDataType };\r\n\r\ntype ExportCsvDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\nexport function ExportCsvDialog(props: ExportCsvDialogProps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  const csvLinkRef = useRef<CSVLink & HTMLAnchorElement & { link: HTMLAnchorElement }>(null);\r\n\r\n  // CSVデータの状態\r\n  const [csvData, setCsvData] = useState<CsvDataType[]>([]);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = useMemo(() => {\r\n    return { location: match.params.location, startDate: new Date(), endDate: addWeeks(new Date(), 1) };\r\n  }, [match.params.location]);\r\n\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<ExportCsvParams>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset(defaultValues);\r\n    }\r\n  }, [defaultValues, open, reset]);\r\n\r\n  // 開始日の変更アクション\r\n  const handleStartDateChange = () => {\r\n    const endDate = addWeeks(getValues('startDate'), 1);\r\n    setValue('endDate', endDate, { shouldDirty: true });\r\n  };\r\n\r\n  // CSV出力アクション\r\n  const handleExportCsv = async () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // CSVヘッダー\r\n  const headers: CsvHeaderType[] = nameOfCsvHeaders.map((value) => {\r\n    return { label: t(`export-csv.file.header.${_.kebabCase(value)}`), key: value };\r\n  });\r\n\r\n  // CSVファイル名\r\n  const filename = `visitor-${format(getValues('startDate'), 'yyyyMMdd')}-${format(getValues('endDate'), 'yyyyMMdd')}.csv`;\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<ExportCsvParams> = async (formData) => {\r\n    try {\r\n      const result = await fetchPostData<ExportCsvParams, ExportCsvParams, DataType[]>('/front/export', {\r\n        inputs: formData,\r\n        dirtyFields: dirtyFields,\r\n      });\r\n      if (result!.success) {\r\n        if (!!result.value) {\r\n          const data = result.value.map((item) => {\r\n            const roomId = Object.keys(item.resourcies)[0]; // TODO:複数会議室未対応\r\n            return {\r\n              apptTime: item.apptTime,\r\n              roomName: item.roomName,\r\n              teaSupply: item.resourcies[roomId].teaSupply ? t('export-csv.file.tea-supply-yes') : t('export-csv.file.tea-supply-no'),\r\n              numberOfTeaSupply: item.resourcies[roomId].numberOfTeaSupply.toString(),\r\n              teaDetails: item.resourcies[roomId].teaDetails,\r\n              numberOfVisitor: item.numberOfVisitor.toString(),\r\n              numberOfEmployee: item.numberOfEmployee.toString(),\r\n              visitCompany: item.visitCompany.map((co) => `${co.name} / ${co.rep}`).join(', '),\r\n              checkIn: item.checkIn,\r\n              visitorCardNumber: item.visitorCardNumber,\r\n              checkOut: item.checkOut,\r\n              reservationName: item.reservationName,\r\n              contactAddr: item.contactAddr,\r\n              subject: item.subject,\r\n              comment: item.comment,\r\n            };\r\n          }) as CsvDataType[];\r\n          setCsvData(data);\r\n          csvLinkRef?.current?.link.click();\r\n          snackberContext.dispatch({ type: 'success', message: t('export-csv.msg.export-success') });\r\n        }\r\n      } else {\r\n        // エラーのセット\r\n        snackberContext.dispatch({ type: 'error', message: t('export-csv.msg.export-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 日付ピッカー\r\n  const datePicker = (type: 'start' | 'end') => (\r\n    <Controller\r\n      name={`${type}Date`}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () =>\r\n          startOfDay(getValues('startDate')).getTime() <= startOfDay(getValues('endDate')).getTime() ||\r\n          (t('export-csv.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <KeyboardDatePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            if (type === 'start') handleStartDateChange();\r\n          }}\r\n          format=\"yyyy/MM/dd\"\r\n          label={t(`export-csv.${type}-date`)}\r\n          showTodayButton\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n          size=\"small\"\r\n          className={classes.keyboardDatePicker}\r\n          error={!!errors[`${type}Date`]}\r\n          helperText={errors[`${type}Date`] && errors[`${type}Date`]!.message}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('export-csv.title')}>\r\n        <form>\r\n          <Box px={2} pt={2}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('start')}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} className={classes.between}>\r\n                <ArrowRightAltIcon />\r\n              </Grid>\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('end')}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box p={2}>\r\n            <Button onClick={handleExportCsv} variant=\"contained\" color=\"primary\" fullWidth>\r\n              {t('export-csv.button.export-csv')}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n\r\n        <CSVLink style={{ display: 'none' }} data={csvData} headers={headers} filename={filename} ref={csvLinkRef}>\r\n          {'Export Trigger'}\r\n        </CSVLink>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Paper } from '@material-ui/core';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { ExportCsvDialog } from './ExportCsvDialog';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function Front() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  //  CSV出力ダイアログの状態\r\n  const [exportCsvOpen, setExportCsvOpen] = useState(false);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  //  CSV出力クリックアクション\r\n  const handleExporCsvClick = () => {\r\n    setExportCsvOpen(true);\r\n  };\r\n  // CSV出力ダイアログ閉じるアクション\r\n  const handleExporCsvClose = () => {\r\n    setExportCsvOpen(false);\r\n  };\r\n\r\n  // CSV出力ボタン\r\n  const csvButton = (\r\n    <Button variant=\"contained\" startIcon={<ArchiveOutlinedIcon />} onClick={handleExporCsvClick}>\r\n      {t('main.header.export-csv')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <BaseTemplate frontMode>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.front.title')}\r\n            subtitle={t('main.front.subtitle')}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n            actionButtons={[csvButton]}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n      <ExportCsvDialog open={exportCsvOpen} onClose={handleExporCsvClose} />\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepPartial, Path, PathValue, SubmitHandler, UnpackNestedValue, useForm, FieldValues, FormProvider } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nexport type Mastertype = 'role' | 'location' | 'category' | 'room';\r\n\r\ntype InputMode = { mode: 'ins' | 'upd' | 'del' };\r\nexport type Inputs<RowData> = InputMode & RowData;\r\n\r\ntype DefaultValuesType<RowData> = UnpackNestedValue<DeepPartial<Inputs<RowData>>>;\r\nexport type InputFields<RowData> = {\r\n  type: Mastertype;\r\n  item: React.ReactNode;\r\n  defaultValues: DefaultValuesType<RowData>;\r\n};\r\n\r\n// react-hook-formのsetValue。型定義が長いのでショートカット用\r\ntype RHFSetValueP1<RowData> = Path<Inputs<RowData>>;\r\ntype RHFSetValueP2<RowData> = UnpackNestedValue<PathValue<Inputs<RowData>, Path<Inputs<RowData>>>>;\r\n\r\ntype RowDataInputDialogProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowData | null;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataInputDialog<RowData>(props: RowDataInputDialogProps<RowData>) {\r\n  const { inputFields, open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 削除確認メッセージの状\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const methods = useForm({ defaultValues: { ...inputFields.defaultValues }, reValidateMode: 'onSubmit' });\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    setError,\r\n    formState: { isDirty, isSubmitting, dirtyFields },\r\n  } = methods;\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      const values = Object.keys(inputFields.defaultValues).reduce((newObj: FieldValues, key) => {\r\n        if (key === 'mode') {\r\n          newObj['mode'] = 'upd';\r\n        } else {\r\n          newObj[key] = (data as FieldValues)[key];\r\n        }\r\n        return newObj;\r\n      }, {});\r\n      reset(_.cloneDeep(values as DefaultValuesType<RowData>));\r\n    } else {\r\n      reset(_.cloneDeep(inputFields.defaultValues));\r\n    }\r\n  }, [data, inputFields, open, reset]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode' as RHFSetValueP1<RowData>, 'del' as RHFSetValueP2<RowData>);\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs<RowData>> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = `/${inputFields.type}/create`;\r\n          break;\r\n        case 'upd':\r\n          url = `/${inputFields.type}/update`;\r\n          break;\r\n        case 'del':\r\n          url = `/${inputFields.type}/delete`;\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n        // ロール設定とロケーション設定は更新反映のためにログアウトを促す\r\n        if (inputFields.type === 'role' || inputFields.type === 'location') {\r\n          await new Promise(() =>\r\n            setTimeout(() => {\r\n              snackberContext.dispatch({ type: 'warning', message: t('common.msg.prompt-logout') });\r\n            }, 1500)\r\n          );\r\n        }\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs<RowData> as Path<Inputs<RowData>>;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t(`settings.title.${inputFields.type}`)}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          <FormProvider {...methods}>\r\n            <form>\r\n              <Box p={2}>{inputFields.item}</Box>\r\n              <Box px={2}>\r\n                <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                  <Grid item xs={!data ? 12 : 6}>\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" disabled={!isDirty} startIcon={<SaveIcon />} fullWidth>\r\n                      {t('common.button.save')}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                    <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                      {t('common.button.delete')}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </FormProvider>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <MyConfirmDialog open={delConfOpen} onClose={handleDelConfClose} message={t('common.msg.delete-confirm')} color=\"secondary\"></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { InputFields, RowDataInputDialog } from './RowDataInputDialog';\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n};\r\n\r\nexport type DataDialogAction = {\r\n  type: 'inputOpen' | 'addDataOpen' | 'inputClose';\r\n};\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  currentRow: RowData | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase<RowData>(props: DataTableBaseProps<RowData>) {\r\n  const { inputFields, dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog<RowData>\r\n        inputFields={inputFields}\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase } from './DataTableBase';\r\nimport { InputFields } from './RowDataInputDialog';\r\n\r\nexport type Columns<RowData> = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  sorting?: boolean;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: RowData) => any;\r\n};\r\n\r\ntype DataTableProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  columns: Columns<RowData>[];\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable<RowData extends object>(props: DataTableProps<RowData>) {\r\n  const { inputFields, columns, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<RowData[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/${inputFields.type}/list`);\r\n  }, [inputFields.type, setUrl]);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowData) => {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase<RowData> inputFields={inputFields} currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { DataDialogAction } from './DataTableBase';\r\nimport { Mastertype } from './RowDataInputDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype HeaderActionsProps = {\r\n  master: Mastertype;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { master, dispatch } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={9}>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            {t(`settings.title.${master}`)}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n            {t('settings.add-master')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { EmailAddress } from './User';\r\n\r\nexport const nameOfRoleType = ['admin', 'front'] as const;\r\nexport type RoleType = typeof nameOfRoleType[number];\r\nexport type Role = {\r\n  id: string;\r\n  name: RoleType;\r\n  members: EmailAddress[];\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { nameOfRoleType } from '_models/Role';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Role>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField\r\n        name={'name'}\r\n        control={control}\r\n        label={t('settings.header.role.name')}\r\n        required\r\n        selectList={nameOfRoleType.map((value) => {\r\n          return { label: t(`settings.view.role.name.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <AddrBookAutoComplete name={'members'} control={control} label={t('settings.header.role.members')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nexport function RoleSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Role>[] = [\r\n    {\r\n      title: t('settings.header.role.name'),\r\n      field: 'name',\r\n      render: (rowData) => t(`settings.view.role.name.${rowData.name}`),\r\n    },\r\n    // { title: t('settings.header.role.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Role> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: 'admin',\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"role\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Role>\r\n            inputFields={{ type: 'role', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Location>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.location.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'url'}\r\n        control={control}\r\n        label={t('settings.header.location.url')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            value: /^[a-z0-9]+$/,\r\n            message: t('settings.form.location.error.url.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.location.sort')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nexport function LocationSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Location>[] = [\r\n    { title: t('settings.header.location.name'), field: 'name' },\r\n    { title: t('settings.header.location.url'), field: 'url' },\r\n    { title: t('settings.header.location.sort'), field: 'sort' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Location> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    url: '',\r\n    sort: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"location\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Location>\r\n            inputFields={{ type: 'location', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Category>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // メンバー表示の制御用に限定公開スイッチを監視\r\n  const isLimitedPublic = useWatch({\r\n    control,\r\n    name: 'limitedPublic',\r\n  });\r\n\r\n  //メンバー表示の状態\r\n  const [showMembers, setShowMembers] = useState(false);\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    setShowMembers(isLimitedPublic);\r\n    if (!isLimitedPublic) {\r\n      setValue('members', [], { shouldDirty: true });\r\n    }\r\n  }, [isLimitedPublic, setValue]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.category.name')} required errors={errors} />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.category.sort')} errors={errors} />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'limitedPublic'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.limited-public')}\r\n      />\r\n      <AddrBookAutoComplete\r\n        name={'members'}\r\n        control={control}\r\n        label={t('settings.header.category.members')}\r\n        errors={errors}\r\n        style={!showMembers ? { display: 'none' } : undefined}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'disabledByRoom'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.disabled-by-room')}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nexport function CategorySettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Category>[] = [\r\n    { title: t('settings.header.category.name'), field: 'name' },\r\n    { title: t('settings.header.category.sort'), field: 'sort' },\r\n    { title: t('settings.header.category.limited-public'), field: 'limitedPublic', type: 'boolean' },\r\n    // { title: t('settings.header.category.members'), field: 'members' },\r\n    { title: t('settings.header.category.disabled-by-room'), field: 'disabledByRoom', type: 'boolean' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Category> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    sort: '',\r\n    limitedPublic: false,\r\n    members: [],\r\n    disabledByRoom: false,\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"category\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Category>\r\n            inputFields={{ type: 'category', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Grid, Switch } from '@material-ui/core';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { nameOfRoomType, nameOfUsageRange, Room } from '_models/Room';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\ntype DataInputsProps = {\r\n  locations: Location[] | undefined;\r\n  categories: Category[] | undefined;\r\n};\r\n\r\nexport function DataInputs({ locations, categories }: DataInputsProps) {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Room>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用にタイプ選択を監視\r\n  const typeWatch = useWatch({ control, name: 'type' });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (typeWatch === 'free') {\r\n      setValue('teaSupply', { outside: false, inside: false }, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    } else {\r\n      setDisabledTeaSupply(false);\r\n    }\r\n  }, [setValue, typeWatch]);\r\n\r\n  // 給茶選択の制御用に利用範囲を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n  // 利用範囲のエフェクト\r\n  useEffect(() => {\r\n    switch (usageRangeWatch) {\r\n      case 'outside':\r\n        setValue('teaSupply.inside', false, { shouldDirty: true });\r\n        break;\r\n      case 'inside':\r\n        setValue('teaSupply.outside', false, { shouldDirty: true });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [setValue, usageRangeWatch]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.room.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'email'}\r\n        control={control}\r\n        label={t('settings.header.room.email')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            // eslint-disable-next-line no-useless-escape\r\n            value: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n            message: t('settings.form.room.error.email.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.room.sort')} errors={errors} />\r\n      <ControllerTextField\r\n        name={'usageRange'}\r\n        control={control}\r\n        label={t('settings.header.room.usage-range')}\r\n        required\r\n        selectList={nameOfUsageRange.map((value) => {\r\n          return { label: t(`settings.view.room.usage-range.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'type'}\r\n        control={control}\r\n        label={t('settings.header.room.type')}\r\n        required\r\n        selectList={nameOfRoomType.map((value) => {\r\n          return { label: t(`settings.view.room.type.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <Grid container style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'teaSupply.outside'}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('settings.header.room.tea-supply.outside')}\r\n            style={usageRangeWatch === 'inside' ? { display: 'none' } : undefined}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'teaSupply.inside'}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('settings.header.room.tea-supply.inside')}\r\n            style={usageRangeWatch === 'outside' ? { display: 'none' } : undefined}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <ControllerTextField\r\n        name={'location'}\r\n        control={control}\r\n        label={t('settings.header.room.location')}\r\n        required\r\n        selectList={locations?.map((location) => {\r\n          return { label: location.name, value: location.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'category'}\r\n        control={control}\r\n        label={t('settings.header.room.category')}\r\n        required\r\n        selectList={categories?.map((category) => {\r\n          return { label: category.name, value: category.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name=\"comment\" control={control} label={t('settings.header.room.comment')} multiline errors={errors} />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'cleaningOption'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.room.cleaning-option')}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Room } from '_models/Room';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nexport function RoomSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ロケーションデータ取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  // カテゴリデータ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  const fieldTeaSupply = (result: boolean) => {\r\n    return result ? t('settings.view.room.tea-supply-true') : t('settings.view.room.tea-supply-false');\r\n  };\r\n  const columns: Columns<Room>[] = [\r\n    { title: t('settings.header.room.name'), field: 'name' },\r\n    // { title: t('settings.header.room.email'), field: 'email' },\r\n    { title: t('settings.header.room.sort'), field: 'sort' },\r\n    {\r\n      title: t('settings.header.room.usage-range'),\r\n      field: 'usageRange',\r\n      render: (rowData) => t(`settings.view.room.usage-range.${rowData.usageRange}`),\r\n    },\r\n    { title: t('settings.header.room.type'), field: 'type', render: (rowData) => t(`settings.view.room.type.${rowData.type}`) },\r\n    {\r\n      title: t('settings.header.room.tea-supply'),\r\n      field: 'teaSupply',\r\n      type: 'boolean',\r\n      sorting: false,\r\n      render: (rowData) => {\r\n        if (rowData.usageRange === 'none') {\r\n          return (\r\n            <>\r\n              <span>\r\n                {t('settings.view.room.tea-supply.outside')}\r\n                {fieldTeaSupply(rowData.teaSupply.outside)}\r\n              </span>\r\n              <br />\r\n              <span>\r\n                {t('settings.view.room.tea-supply.inside')}\r\n                {fieldTeaSupply(rowData.teaSupply.inside)}\r\n              </span>\r\n            </>\r\n          );\r\n        } else {\r\n          return <span>{fieldTeaSupply(rowData.teaSupply[rowData.usageRange])}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.location'),\r\n      field: 'location',\r\n      render: (rowData) => {\r\n        const target = locations?.find((location) => location.id === rowData.location);\r\n        return target?.name;\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.category'),\r\n      field: 'category',\r\n      render: (rowData) => {\r\n        const target = categories?.find((category) => category.id === rowData.category);\r\n        return target?.name;\r\n      },\r\n    },\r\n    { title: t('settings.header.room.cleaning-option'), field: 'cleaningOption', type: 'boolean' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Room> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    usageRange: 'none',\r\n    type: 'rooms',\r\n    sort: '',\r\n    teaSupply: { outside: false, inside: false },\r\n    comment: '',\r\n    cleaningOption: false,\r\n    location: '',\r\n    category: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"room\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Room>\r\n            inputFields={{ type: 'room', item: <DataInputs locations={locations} categories={categories} />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { SignIn } from 'login';\r\nimport { AuthorizeWrapper } from 'login/Authorize';\r\nimport { VisitList } from 'main/visitList';\r\nimport { ByRoom } from 'main/byRoom';\r\nimport { Front } from 'main/front';\r\nimport { RoleSettings } from 'master/role';\r\nimport { LocationSettings } from 'master/location';\r\nimport { CategorySettings } from 'master/category';\r\nimport { RoomSettings } from 'master/room';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main\" component={VisitList} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/front\" component={Front} />\r\n        <Route exact path=\"/:location?/settings/role\" component={RoleSettings} />\r\n        <Route exact path=\"/:location?/settings/location\" component={LocationSettings} />\r\n        <Route exact path=\"/:location?/settings/category\" component={CategorySettings} />\r\n        <Route exact path=\"/:location?/settings/room\" component={RoomSettings} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/:location?/\" to=\"/:location?/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    // wait: true,\r\n    useSuspense: false,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}