{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_components/Spinner.tsx","_styles/LoginStyles.ts","_utils/Http.ts","_utils/SessionStrage.ts","login/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Authorize.tsx","_utils/useLoadData.ts","_components/MyLocation.tsx","_components/BaseTemplate.tsx","_utils/useSelectedDate.ts","_utils/MaterialTableIcons.tsx","_styles/VisitorTableStyle.ts","_styles/TableTheme.ts","_models/Room.ts","_utils/FetchPostData.ts","_components/ControllerTextField.tsx","_components/UserStatusIcon.tsx","_components/MyChip.tsx","_components/AddrBookAutoComplete.tsx","_components/MyDialog.tsx","_models/User.ts","_components/UserStatusIconNote.tsx","main/DeleteConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/ControllerDateTimePicker.tsx","main/ReservationNameField.tsx","main/LastUpdatedField.tsx","main/RowDataInputDialog.tsx","_components/AddrBookUserDisplay.tsx","main/RowDataReadDialog.tsx","main/DataTableBase.tsx","main/visitList/DataTable.tsx","_components/MyCalendar.tsx","main/HeaderActions.tsx","main/visitList/index.tsx","main/TimeBar.tsx","main/byRoom/DataTable.tsx","main/byRoom/DataTableWeekly.tsx","_components/MyTabContext.tsx","main/CategoryTabContext.tsx","main/RoomTabContext.tsx","main/byRoom/index.tsx","main/front/RowDataFrontDialog.tsx","main/front/DataTable.tsx","main/front/ExportCsvDialog.tsx","main/front/index.tsx","master/DeleteConfirmDialog.tsx","master/RowDataInputDialog.tsx","master/DataTableBase.tsx","master/DataTable.tsx","master/HeaderActions.tsx","_models/Role.ts","master/role/DataInputs.tsx","master/role/index.tsx","master/location/DataInputs.tsx","master/location/index.tsx","master/category/DataInputs.tsx","master/category/index.tsx","master/room/DataInputs.tsx","master/room/index.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["defaultPrimary","light","main","dark","contrastText","theme","createTheme","palette","primary","secondary","amber","typography","button","textTransform","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","zIndex","Spinner","classes","Backdrop","className","open","CircularProgress","makeLoginStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","http","request","a","fetch","response","json","parsedBody","ok","console","error","body","Error","statusText","get","path","args","method","Request","post","JSON","stringify","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","reload_key","saveReloadState","item","value","states","parse","getItem","getReloadState","reloadFlg_key","getReloadStateFlg","removeReloadStateFlg","removeItem","removeSessionStrage","SignIn","t","useTranslation","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","log","Container","component","maxWidth","Avatar","LockOutlined","Button","onClick","fullWidth","Box","mt","Alert","elevation","mySnackberReducer","state","action","type","severity","message","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","reason","Provider","AuthorizeWrapper","Authorize","snackberContext","useContext","useEffect","sendAuthCode","search","first","setTimeout","replace","useLoadData","initialData","data","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","MyLocation","locations","history","useHistory","selected","setSelected","length","FormControl","size","Select","style","onChange","event","target","push","map","MenuItem","name","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","link","textDecoration","nested","paddingLeft","BaseTemplate","adminMode","frontMode","menuOpen","setOpen","settingsOpen","setSettingsOpen","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","initialState","signedIn","email","isAdmin","isFront","userStorage","checkAuth","conditionalChildren","AppBar","clsx","Toolbar","IconButton","edge","noWrap","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","Drawer","Divider","List","to","ListItem","Tooltip","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","pt","useSelectedDate","selectedDate","setSelectedDate","getTime","toString","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","pageingOntions","paging","pageSize","pageSizeOptions","frontCellPadding","makeVisitorTableStyles","cellPadding","cellApptTime","cellRoomName","cellTeaSupply","cellRoomStatus","cellReservationName","cellVisitCompany","cellVisitorName","cellSubject","cellContactAddr","cellCheckIn","overflowWrap","cellCheckOut","cellComment","declinedApptTime","declinedRoomName","wordBreak","border","i18next","cellStyle","field","rowData","charAt","toUpperCase","slice","roomStatus","tableTheme","grey","MuiTableRow","MuiTable","borderCollapse","makeTableDialogStyle","list","borderTop","boxSizing","flexBasis","borderLeft","borderBottom","borderRight","fieldSlim","bottomLine","nameOfRoomType","nameOfUsageRangeForVisitor","nameOfUsageRange","fetchPostData","formData","Promise","resolve","reject","ControllerTextField","control","label","required","selectList","multiline","disabled","validation","errors","rules","render","TextField","select","helperText","option","index","iconFontSize","UserStatusIcon","status","useTheme","text","warning","success","MyChip","other","Chip","icon","undefined","address","AddrBookAutoComplete","filter","setFilter","addressbook","loading","onChangeHandle","Autocomplete","multiple","limitTags","onOpen","options","filterOptions","_state","noOptionsText","getOptionLabel","renderTags","tagValue","getTagProps","filterSelectedOptions","getOptionSelected","renderInput","InputProps","endAdornment","ev","_","closeButton","right","top","MyDialog","Dialog","DialogTitle","DialogContent","dividers","DialogActions","nameOfUserStatus","UserStatusIconNote","kebabCase","DeleteConfirmDialog","DialogContentText","autoFocus","RoomInputFields","setValue","rooms","roomId","disabledVisitor","disabledRoom","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","shouldDirty","disabledTeaMember","setDisabledTeaMember","teaWatch","getNestedError","px","textAlign","validate","Grid","xs","FormControlLabel","Switch","e","checked","opacity","inputProps","min","useRowDataDialogStyles","strRoomStatus","RoomReadFields","hiddenTeaSupply","disablePadding","roomName","roomEmail","numberOfVisitor","numberOfEmployee","ControllerDateTimePicker","getValues","handleDateTimeChange","DateTimePicker","ampm","format","disablePast","minutesStep","ReservationNameField","flexWrap","verticalAlign","LastUpdatedField","datetime","formAction","note","usageGuide","inputformTheme","minRows","change5MinuteIntervals","date","Math","ceil","ADD_ROOM_KEY","getDefaultValues","start","usage","startDate","mode","iCalUId","subject","visitorId","visitCompany","visitorName","mailto","authors","optional","usageRange","resourcies","roomForEdit","comment","contactAddr","startTime","addMinutes","endTime","startTimeBufferMinute","RowDataInputDialog","addDefault","delConfOpen","setDelConfOpen","defaultValues","useForm","reValidateMode","handleSubmit","reset","trigger","setError","formState","isDirty","isSubmitting","dirtyFields","Object","keys","reduce","newObj","startDateTime","endDateTime","cloneDeep","hiddenRooms","setHiddenRooms","usageRangeWatch","defaultRoomsUrl","roomsUrl","setRoomsUrl","buildRoomsUrl","setDisabledVisitor","onSubmit","inputs","r","key","handleSearch","activeSearchButton","ThemeProvider","isMSMultipleLocations","reservationName","reservationStatus","p","py","lastUpdated","startIcon","deleteOk","AddrBookUserDisplay","i","RowDataReadDialog","isAttendees","apptTime","gutterBottom","pb","dataDialogReducer","inputOpen","readOpen","DataTableBase","dataDialogHook","currentRow","handleInputDialogClose","handleReadDialogClose","DataTable","currentDate","setCurrentRow","handleDialogOpen","selectedRow","isAuthor","columns","components","Cell","columnDef","onRowClick","showTitle","headerStyle","tableLayout","icons","keyboardDatePicker","MyCalendar","showTodayButton","KeyboardButtonProps","datePicker","HeaderActions","subtitle","onDateChange","actionButtons","sm","VisitList","createdOnly","setCreatedOnly","dataDialogState","dataDialogDispatch","Number","Paper","square","shortStyle","halfWidth","scale","transform","x","y","fontHeight","timeToPoint","time","boxStyle","zero","startOfDay","differenceInMinutes","getBoxData","end","x2","isSameDay","startOfCurrent","endOfCurrent","endOfDay","isBefore","isAfter","calcX","hour","createTransform","HtmlTooltip","withStyles","pxToRem","strokeWidth","stroke","fill","dominantBaseline","cursor","fillOpacity","info","TimeBar","schedule","events","onClickCallback","keyLabel","keyValue","onTitleClick","setTransform","rectY","rectHeight","viewHeightDup","scheduleItems","createScheduleBox","timestamp","rowIndex","boxData","rx","ry","createEventBox","myEvent","viewBox","rectSchedules","useMemo","row","rectEvents","categoryId","viewWidth","preserveAspectRatio","x1","y1","y2","range","$","minX","fontX","svg","closest","createSVGPoint","clientX","clientY","ctm","getScreenCTM","$time","point","pointToTime","matrixTransform","inverse","floor","handleCreateClick","tabKey","timeBars","schedules","sIdx","eventsIndex","eventIndex","DataTableWeekly","muiPickContext","MuiPickersContext","locale","MyTabContext","tabPanelContent","activateTab","setActivateTab","tabValue","setTabValue","handleTabChange","newValue","tabList","TabList","indicatorColor","textColor","Tab","tabPanels","TabPanel","cloneElement","TabContext","CategoryTabContext","RoomTabContext","typeQuery","byRoomReducer","weekly","changeTab","titleLabel","subtitleLabel","ByRoom","byRoomState","byRoomDispatch","_categoryId","_roomId","checkAction","RowDataFrontDialog","frontClasses","register","checkIn","checkOut","visitorCardNumber","autoComplete","frontDialogOpen","setFrontDialogOpen","handleFrontDialogOpen","handleFrontDialogClose","split","strNumOfVisitor","strNumOfEmployee","actions","localization","header","between","nameOfCsvHeaders","ExportCsvDialog","csvLinkRef","useRef","csvData","setCsvData","endDate","addWeeks","handleExportCsv","headers","filename","current","click","handleStartDateChange","Front","exportCsvOpen","setExportCsvOpen","csvButton","inputFields","methods","values","actionButtonArea","master","nameOfRoleType","DataInputs","useFormContext","RoleSettings","members","pattern","LocationSettings","sort","isLimitedPublic","showMembers","setShowMembers","CategorySettings","limitedPublic","categories","typeWatch","category","RoomSettings","find","Routes","exact","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.764f5264.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\n// export const defaultPrimary = purple;\r\nexport const defaultPrimary = {\r\n  light: '#336bbd',\r\n  main: '#0046AD',\r\n  dark: '#003179',\r\n  contrastText: '#fff',\r\n};\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: defaultPrimary,\r\n    secondary: amber,\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version. 1.0.1 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","export type PostDataResult<T, U> = {\r\n  success: boolean;\r\n  value?: U;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\ntype ServerErrorType = { body: string };\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T & ServerErrorType;\r\n}\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    console.error('Server Error: ', response.parsedBody?.body);\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(path: string, args: RequestInit = { method: 'get' }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n/**\r\n * reload用stage情報を格納します\r\n */\r\nconst reload_key = 'liveness-visitor-reload';\r\nexport const initReloadState = () => {\r\n  sessionStorage.setItem(reload_key, `{}`);\r\n};\r\nexport const saveReloadState = (item: string, value: string) => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  states[item] = value;\r\n  sessionStorage.setItem(reload_key, JSON.stringify(states));\r\n};\r\nexport const getReloadState = (item: string): string => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  return states[item];\r\n};\r\nexport const removeReloadState = () => {\r\n  sessionStorage.removeItem(reload_key);\r\n};\r\n/**\r\n * reload用stageを保持するか否かのフラグ\r\n */\r\nconst reloadFlg_key = 'liveness-visitor-reload-flg';\r\nexport const setReloadStateFlg = () => {\r\n  sessionStorage.setItem(reloadFlg_key, '1');\r\n};\r\nexport const getReloadStateFlg = () => {\r\n  return sessionStorage.getItem(reloadFlg_key);\r\n};\r\nexport const removeReloadStateFlg = () => {\r\n  sessionStorage.removeItem(reloadFlg_key);\r\n};\r\n/**\r\n * SessionStrageの一括削除\r\n */\r\nexport const removeSessionStrage = () => {\r\n  removeUserInfo();\r\n  removeReloadState();\r\n  removeReloadStateFlg();\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          LIVENESS Visitors for Microsoft\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') });\r\n          }\r\n          // ロケーションを取得\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              // throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          // urlを設定\r\n          let url = `/${location}/main`;\r\n          // ロケーション設定が未だの場合\r\n          if (location === 'undefined') {\r\n            url = '/settings/location';\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(url);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          LIVENESS Visitors for Microsoft\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @returns\r\n */\r\nexport function useLoadData<T>(url: string, initialData: T | undefined) {\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url);\r\n      // console.log(url); // TODO: debug\r\n      // console.log(result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload] as const;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setSelected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getReloadStateFlg, getUserInfo, initReloadState, removeSessionStrage, saveUserInfo, setReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { MySnackberProvider } from './MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 230;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n    nested: {\r\n      // paddingLeft: theme.spacing(4),\r\n      paddingLeft: theme.spacing(10),\r\n    },\r\n  });\r\n});\r\n\r\ntype UserStorageState = { signedIn: boolean } & User;\r\ntype UserStorageAction = { type: 'signedIn'; user: User } | { type: 'signedOut' };\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  adminMode?: true;\r\n  frontMode?: true;\r\n  menuOpen?: true;\r\n};\r\n\r\nconst BaseTemplate = ({ children, adminMode, frontMode, menuOpen }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(menuOpen ? true : false);\r\n\r\n  // 左メニュー：設定の詳細開閉\r\n  const [settingsOpen, setSettingsOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setSettingsOpen(false);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n    }\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ログアウトアクション\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeSessionStrage(); //sessionStrageから情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // ストレージの状態初期値\r\n  const initialState: UserStorageState = {\r\n    signedIn: false,\r\n    email: '',\r\n    name: '',\r\n    isAdmin: false,\r\n    isFront: false,\r\n  };\r\n  // ストレージの状態設定\r\n  const userStorageReducer = (state: UserStorageState, action: UserStorageAction) => {\r\n    switch (action.type) {\r\n      case 'signedIn':\r\n        return { signedIn: true, email: action.user.email, name: action.user.name, isAdmin: action.user.isAdmin, isFront: action.user.isFront };\r\n      case 'signedOut':\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  // ストレージの状態管理\r\n  const [userStorage, dispatch] = useReducer(userStorageReducer, initialState);\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        dispatch({ type: 'signedIn', user: user });\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          dispatch({ type: 'signedIn', user: user });\r\n        } else {\r\n          removeSessionStrage();\r\n          dispatch({ type: 'signedOut' });\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeSessionStrage();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    setReloadStateFlg(); // リフレッシュ後にstateを復元できるようフラグをONにする\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの初期化\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) initReloadState();\r\n  }, []);\r\n  // ================================\r\n\r\n  // 権限制御をつけてchildrenを表示する\r\n  let conditionalChildren = children;\r\n  const error = <>{t('common.msg.authority-error')}</>;\r\n  if (adminMode && !userStorage.isAdmin) {\r\n    conditionalChildren = error; // 管理者Roleエラー\r\n  }\r\n  if (frontMode && !userStorage.isFront) {\r\n    conditionalChildren = error; // フロントRoleエラー\r\n  }\r\n\r\n  if (!userStorage.signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              LIVENESS Visitors for Microsoft\r\n            </Typography>\r\n            <div>\r\n              <MyLocation></MyLocation>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={accountIconOpen}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}>{userStorage.email}</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                  <ListItemIcon>\r\n                    <FaceIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.created-visit-info')} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                  <ListItemIcon>\r\n                    <MeetingRoomIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n              </ListItem>\r\n            </Link>\r\n            {userStorage.isFront && (\r\n              <Link to={`/${match.params.location}/front`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.front') as string}>\r\n                    <ListItemIcon>\r\n                      <PeopleIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.front')} />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {userStorage.isAdmin && (\r\n              <>\r\n                <ListItem button onClick={handleSettingsClick}>\r\n                  <ListItemIcon>\r\n                    <SettingsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('main.menu.settings')} />\r\n                  {settingsOpen ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={settingsOpen} timeout=\"auto\" unmountOnExit>\r\n                  <Link to={`/${match.params.location}/settings/role`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.role')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/location`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.location')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/category`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.category')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/room`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.room')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Collapse>\r\n              </>\r\n            )}\r\n            <ListItem button onClick={refreshPage}>\r\n              <Tooltip title={t('main.menu.refresh') as string}>\r\n                <ListItemIcon>\r\n                  <RefreshIcon />\r\n                </ListItemIcon>\r\n              </Tooltip>\r\n              <ListItemText primary={t('main.menu.refresh')} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n            {conditionalChildren}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { useEffect, useState } from 'react';\r\nimport { getReloadStateFlg, saveReloadState } from './SessionStrage';\r\n\r\n/**\r\n * カレンダー選択用カスタムフック\r\n */\r\nexport function useSelectedDate() {\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('selectedDate', selectedDate!.getTime().toString());\r\n    }\r\n  }, [selectedDate]);\r\n  // ================================\r\n\r\n  return [selectedDate, setSelectedDate] as const;\r\n}\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n/**\r\n * ページ設定共通用\r\n */\r\nexport const pageingOntions = {\r\n  paging: true,\r\n  pageSize: 10, // make initial page size\r\n  // emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n  pageSizeOptions: [5, 10, 20, 50], // rows selection options\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\nimport { FrontRowData } from 'main/front/DataTable';\r\nimport { RowDataType } from 'main/DataTableBase';\r\n\r\nexport const frontCellPadding = '12px 6px';\r\n\r\nexport const makeVisitorTableStyles = (isFront: boolean) => {\r\n  const cellPadding = isFront ? frontCellPadding : '';\r\n  return makeStyles(() => ({\r\n    cellApptTime: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellTeaSupply: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomStatus: {\r\n      padding: cellPadding,\r\n    },\r\n    cellReservationName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellVisitCompany: {\r\n      padding: cellPadding,\r\n    },\r\n    cellVisitorName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellSubject: {\r\n      padding: cellPadding,\r\n    },\r\n    cellContactAddr: {\r\n      padding: cellPadding,\r\n    },\r\n    cellCheckIn: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellCheckOut: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellComment: {\r\n      padding: cellPadding,\r\n    },\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  }));\r\n};\r\n\r\nexport const cellStyle = (field: String, rowData: RowDataType | FrontRowData, classes: ClassNameMap<string>) => {\r\n  const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n  return clsx(\r\n    classes[`cell${className}` as keyof ClassNameMap],\r\n    rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n  );\r\n};\r\n","import { createTheme, makeStyles } from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { defaultPrimary } from './Theme';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const makeTableDialogStyle = () => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n  return makeStyles((tableTheme) => ({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child > div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    fieldSlim: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.2em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    bottomLine: {\r\n      borderBottom: border,\r\n    },\r\n  }));\r\n};\r\n","export const nameOfRoomType = ['rooms', 'free'] as const;\r\nexport type RoomType = typeof nameOfRoomType[number];\r\n\r\nexport const nameOfUsageRangeForVisitor = ['outside', 'inside'] as const;\r\nexport type UsageRangeForVisitor = typeof nameOfUsageRangeForVisitor[number];\r\nexport const nameOfUsageRange = ['none', ...nameOfUsageRangeForVisitor] as const;\r\nexport type UsageRange = typeof nameOfUsageRange[number];\r\n\r\nexport type Room = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  sort: string;\r\n  usageRange: UsageRange;\r\n  type: RoomType;\r\n  teaSupply: boolean;\r\n  location: string;\r\n  category: string;\r\n};\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T, U> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<U>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T, U, P>(url: string, formData: FormDataType<T, U>) {\r\n  let response: HttpResponse<PostDataResult<T, P>>;\r\n  try {\r\n    // console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T, P>>(url, formData);\r\n    // console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path, RegisterOptions } from 'react-hook-form';\r\n\r\ntype ControllerTextFieldProps<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  required?: true | boolean;\r\n  validation?: RegisterOptions;\r\n  multiline?: true | boolean;\r\n  disabled?: true | boolean;\r\n  selectList?: SelectOption[];\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n};\r\nexport type SelectOption = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nexport function ControllerTextField<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: ControllerTextFieldProps<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, required, selectList, multiline, disabled, validation, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const rules: RegisterOptions = { required: required ? (t('common.form.required') as string) : false, ...validation };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          disabled={disabled}\r\n          multiline={multiline}\r\n          select={!!selectList}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        >\r\n          {!!selectList &&\r\n            selectList.map((option, index) => (\r\n              <MenuItem key={`${name}-${index}`} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTheme } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype UserStatusIconProps = {\r\n  status: UserStatus;\r\n};\r\n\r\nconst iconFontSize = '1.3em';\r\n\r\nexport const UserStatusIcon = (props: UserStatusIconProps) => {\r\n  const { status } = props;\r\n\r\n  const theme = useTheme();\r\n\r\n  // console.log('icon', status); //TODO:入力系の時重複レンダリングが発生。要調査\r\n\r\n  if (status === 'none') {\r\n    return <HelpOutlineIcon style={{ color: theme.palette.text.secondary, fontSize: iconFontSize }} />;\r\n  } else if (status === 'tentativelyAccepted') {\r\n    return <DoneIcon style={{ color: theme.palette.warning.main, fontSize: iconFontSize }} />;\r\n  } else if (status === 'accepted') {\r\n    return <DoneIcon style={{ color: theme.palette.success.main, fontSize: iconFontSize }} />;\r\n  } else {\r\n    return <CloseIcon style={{ color: theme.palette.error.main, fontSize: iconFontSize }} />;\r\n  }\r\n};\r\n","import { Chip } from '@material-ui/core';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\ntype MyChipProps = {\r\n  option: EmailAddress;\r\n  [x: string]: any;\r\n};\r\n\r\nexport const MyChip = (props: MyChipProps) => {\r\n  const { option, ...other } = props;\r\n\r\n  return (\r\n    <Chip\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      icon={!!option.status ? UserStatusIcon({ status: option.status }) : undefined}\r\n      label={option.name}\r\n      title={option.address}\r\n      style={{ fontSize: '0.9em' }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path } from 'react-hook-form';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CircularProgress, TextField } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyChip } from './MyChip';\r\n\r\ntype AddrBookAutoCompleteType<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n};\r\n\r\nexport function AddrBookAutoComplete<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: AddrBookAutoCompleteType<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, errors, disabled, style } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: loading }] = useLoadData<EmailAddress[]>(`/user/addressbook?filter=${filter}`, []);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          style={style}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={!!addressbook && !!filter ? addressbook : []}\r\n          filterOptions={(options, _state) => options}\r\n          noOptionsText={t('auto-complete.no-options-text')}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) => tagValue.map((option, index) => <MyChip option={option} {...getTagProps({ index })} />)}\r\n          filterSelectedOptions\r\n          getOptionSelected={(option, value) => option.address === value.address}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={label}\r\n              error={!!errors[name]}\r\n              helperText={errors[name] && (errors[name] as FieldError).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, makeStyles, createStyles, IconButton } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1.5),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(0.75),\r\n      top: theme.spacing(0.75),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype MyDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MyDialog(props: MyDialogProps) {\r\n  const { open, onClose, title, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const handleCancel = (_event: MouseEventHandler, reason: string) => {\r\n    if (reason && reason === 'backdropClick') return;\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleCancel} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.root}>\r\n          {title}\r\n          <IconButton className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions style={{ display: 'none' }}>\r\n          <Button onClick={onClose}>{t('common.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","export type User = {\r\n  email: string;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  isFront: boolean;\r\n};\r\n\r\nexport const nameOfUserStatus = ['none', 'tentativelyAccepted', 'accepted', 'declined'] as const;\r\nexport type UserStatus = typeof nameOfUserStatus[number];\r\n\r\nexport type EmailAddress = {\r\n  name: string;\r\n  address: string;\r\n  status?: UserStatus;\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Chip } from '@material-ui/core';\r\nimport _ from 'lodash';\r\n\r\nimport { nameOfUserStatus } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\nexport const UserStatusIconNote = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {nameOfUserStatus.map((status, index) => (\r\n        <Chip\r\n          key={index}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          icon={UserStatusIcon({ status: status })}\r\n          label={t(`visitdialog.notes.user-status-${_.kebabCase(status)}`)}\r\n          style={{ fontSize: '0.9em', marginLeft: '5px', border: 'none' }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.delete-confirm-message')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormSetValue, useWatch } from 'react-hook-form';\r\nimport { Box, FormControlLabel, Grid, MenuItem, Switch, TextField } from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomId: string;\r\n  disabledVisitor: boolean;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, rooms, roomId, disabledVisitor, disabledRoom, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0, { shouldDirty: true });\r\n      setValue(`resourcies.${roomId}.numberOfEmployee`, 0, { shouldDirty: true });\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId]);\r\n\r\n  // 利用範囲のエフェクト（来訪者数のリセット）\r\n  useEffect(() => {\r\n    if (disabledVisitor) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0, { shouldDirty: true });\r\n    }\r\n  }, [setValue, disabledVisitor, roomId]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{\r\n          required: t('common.form.required') as string,\r\n          // 何らかの挙動で選択リストから消えた会議室を選択している場合のエラー処理\r\n          validate: (roomId) => (rooms!.some((room) => room.id === roomId) ? undefined : (t('visitdialog.form.error.room-not-covered') as string)),\r\n        }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <MenuItem key={option.id} value={option.id}>\r\n                {option.name} {'<'}\r\n                {option.email}\r\n                {'>'}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n\r\n      <Grid container spacing={1} style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4} style={disabledVisitor ? { opacity: 0 } : undefined}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfVisitor`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember || disabledVisitor}\r\n                label={t('visittable.header.number-of-visitor')}\r\n                error={!!getNestedError('numberOfVisitor')}\r\n                helperText={!!getNestedError('numberOfVisitor') && getNestedError('numberOfVisitor').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfEmployee`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-employee')}\r\n                error={!!getNestedError('numberOfEmployee')}\r\n                helperText={!!getNestedError('numberOfEmployee') && getNestedError('numberOfEmployee').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>\r\n            {data.roomName} {'<'}\r\n            {data.roomEmail}\r\n            {'>'}\r\n          </div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field}>{data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}</div>\r\n            </li>\r\n\r\n            {data.teaSupply && (\r\n              <>\r\n                <li key=\"number-of-visitor\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                    {data.numberOfVisitor}\r\n                  </div>\r\n                  <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                    {t('visittable.header.number-of-employee')}\r\n                  </div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                    {data.numberOfEmployee}\r\n                  </div>\r\n                </li>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype ReservationNameFieldProps = {\r\n  name: string;\r\n  status: UserStatus;\r\n};\r\n\r\nfunction ReservationNameField(props: ReservationNameFieldProps) {\r\n  const { name, status } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {name}\r\n      {status === 'declined' && (\r\n        <div\r\n          style={{\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            color: 'red',\r\n            verticalAlign: 'bottom',\r\n            marginLeft: 15,\r\n            fontSize: '0.95em',\r\n          }}\r\n        >\r\n          <ErrorOutlineIcon fontSize=\"small\" style={{ marginRight: 3 }} />\r\n          {t('visitdialog.notes.reservation-status-declined')}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReservationNameField;\r\n","import { format } from 'date-fns';\r\n\r\ntype LastUpdatedFieldProps = {\r\n  datetime: number;\r\n};\r\n\r\nexport const LastUpdatedField = (props: LastUpdatedFieldProps) => {\r\n  const { datetime } = props;\r\n\r\n  return <>{format(datetime, 'yyyy/MM/dd HH:mm:ss')}</>;\r\n};\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm, useWatch } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { addMinutes } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { nameOfUsageRangeForVisitor, Room, UsageRangeForVisitor } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { tableTheme, makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      marginTop: 0,\r\n    },\r\n    usageGuide: {\r\n      marginTop: '5px',\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nconst startTimeBufferMinute = 0;\r\nconst endTimeBufferMinute = 30; //TODO: Interval config化？\r\nconst change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n\r\nexport type AddDefaultType = {\r\n  start: Date;\r\n  roomId: string;\r\n  usageRange: UsageRangeForVisitor;\r\n};\r\n\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (start?: Date, roomId?: string, usage?: UsageRangeForVisitor) => {\r\n  const startDate = start ? start : new Date();\r\n  const room = roomId ? roomId : '';\r\n  const usageRange = usage ? usage : 'outside';\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: '',\r\n    visitorName: '',\r\n    mailto: { authors: [], required: [], optional: [] },\r\n    usageRange: usageRange,\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: room,\r\n        teaSupply: false,\r\n        numberOfVisitor: 0,\r\n        numberOfEmployee: 0,\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: '',\r\n    startTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute),\r\n    endTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute + endTimeBufferMinute),\r\n  } as Inputs;\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload, addDefault } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = getDefaultValues();\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        visitorName: data.visitorName,\r\n        mailto: data.mailto,\r\n        usageRange: data.usageRange,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfVisitor: data.resourcies[room].numberOfVisitor,\r\n            numberOfEmployee: data.resourcies[room].numberOfEmployee,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues(addDefault?.start, addDefault?.roomId, addDefault?.usageRange)));\r\n    }\r\n  }, [data, open, reset, addDefault]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 利用範囲選択を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [roomsUrl, setRoomsUrl] = useState(defaultRoomsUrl);\r\n  const [{ data: rooms }] = useLoadData<Room[]>(roomsUrl, []);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      // 更新時、会議室変更は出来ないためデフォルト値\r\n      setRoomsUrl(defaultRoomsUrl);\r\n    } else {\r\n      setRoomsUrl(\r\n        defaultRoomsUrl +\r\n          `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}` +\r\n          `&usagerange=${getValues('usageRange')}`\r\n      );\r\n    }\r\n  }, [defaultRoomsUrl, getValues]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n  }, [buildRoomsUrl, open, usageRangeWatch]); // 利用範囲変更時もリセット対象\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 来訪情報の制御状態\r\n  const [disabledVisitor, setDisabledVisitor] = useState(false);\r\n\r\n  // 利用範囲のエフェクト（来訪情報の制御）\r\n  useEffect(() => {\r\n    // 社内会議\r\n    if (usageRangeWatch === 'inside') {\r\n      setValue('visitCompany', '', { shouldDirty: true });\r\n      setValue('visitorName', '', { shouldDirty: true });\r\n      setDisabledVisitor(true);\r\n    } else {\r\n      // 社外会議\r\n      setDisabledVisitor(false);\r\n    }\r\n  }, [setValue, usageRangeWatch]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化\r\n  const activeSearchButton = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n  // 開始日時の変更アクション\r\n  const handleStartTimeChange = () => {\r\n    const endTime = addMinutes(change5MinuteIntervals(getValues('startTime')), startTimeBufferMinute + endTimeBufferMinute);\r\n    setValue('endTime', endTime, { shouldDirty: true });\r\n    activeSearchButton();\r\n  };\r\n  // 終了日時の変更アクション\r\n  const handleEndTimeChange = () => {\r\n    activeSearchButton();\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              <List disablePadding={true}>\r\n                {(() => {\r\n                  if (data.isMSMultipleLocations) {\r\n                    /* mode=upd & 複数会議室 */\r\n                    return (\r\n                      <li className={classes.bottomLine}>\r\n                        <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>\r\n                      </li>\r\n                    );\r\n                  } else {\r\n                    /* mode=upd & 単一会議室 */\r\n                    return (\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                })()}\r\n                <li key=\"reservation-name\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n                  <div className={classes.field}>\r\n                    <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n                  </div>\r\n                </li>\r\n              </List>\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              {!!data && (\r\n                <Typography variant=\"caption\" display=\"block\" className={classes.usageGuide}>\r\n                  {t('visitdialog.notes.reply-status')}\r\n                  <UserStatusIconNote />\r\n                </Typography>\r\n              )}\r\n\r\n              <AddrBookAutoComplete\r\n                name={'mailto.authors'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-authors')}\r\n                errors={errors}\r\n                disabled={true}\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.required'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-required')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.optional'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-optional')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n\r\n              <Box py={1} style={!!data ? { display: 'none' } : undefined}>\r\n                <ControllerTextField\r\n                  name={'usageRange'}\r\n                  control={control}\r\n                  label={t('visittable.header.usage-range')}\r\n                  required\r\n                  selectList={nameOfUsageRangeForVisitor.map((value) => {\r\n                    return { label: t(`visitdialog.view.usage-range.${value}`), value: value };\r\n                  })}\r\n                  disabled={!!data}\r\n                  errors={errors}\r\n                />\r\n              </Box>\r\n\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleStartTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleEndTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ margin: 'auto' }}>\r\n                  <Button\r\n                    onClick={handleSearch}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={data?.isMSMultipleLocations || !hiddenRooms}\r\n                    style={getValues('mode') === 'upd' ? { display: 'none' } : undefined}\r\n                  >\r\n                    {t('common.button.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && (\r\n                <RoomInputFields\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  rooms={rooms}\r\n                  roomId={ADD_ROOM_KEY}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              )\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      rooms={rooms}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      disabledVisitor={data.usageRange === 'inside'}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box p={2} style={disabledVisitor ? { display: 'none' } : undefined}>\r\n              <ControllerTextField\r\n                name=\"visitCompany\"\r\n                control={control}\r\n                label={t('visittable.header.visit-company')}\r\n                required={!disabledVisitor}\r\n                disabled={disabledVisitor}\r\n                errors={errors}\r\n              />\r\n              <ControllerTextField\r\n                name=\"visitorName\"\r\n                control={control}\r\n                label={t('visittable.header.visitor-name')}\r\n                disabled={disabledVisitor}\r\n                errors={errors}\r\n              />\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} required errors={errors} />\r\n            </Box>\r\n\r\n            {!!data && (\r\n              <Box px={2}>\r\n                <List disablePadding={true}>\r\n                  <li key=\"datetime\" className={classes.list}>\r\n                    <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n                    <div className={classes.field}>\r\n                      <LastUpdatedField datetime={data.lastUpdated} />\r\n                    </div>\r\n                  </li>\r\n                </List>\r\n              </Box>\r\n            )}\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('common.button.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('common.button.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles, createStyles } from '@material-ui/core';\r\nimport { EmailAddress } from '_models/User';\r\nimport { MyChip } from './MyChip';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      // justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype AddrBookUserDisplayProps = {\r\n  key: string;\r\n  data: EmailAddress[];\r\n};\r\n\r\nexport function AddrBookUserDisplay({ key, data }: AddrBookUserDisplayProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {data.map((user, i) => (\r\n        <MyChip key={`${key}-${i}`} option={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List, Typography } from '@material-ui/core';\r\n\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomReadFields } from './RoomReadFields';\r\nimport { AddrBookUserDisplay } from '_components/AddrBookUserDisplay';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  // 会議メンバーではない場合、詳細表示NG\r\n  if (!data.isAttendees) {\r\n    return (\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        {t('common.msg.authority-error')}\r\n      </MyDialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          <li key=\"app-time\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n            <div className={classes.field}>{data.apptTime}</div>\r\n          </li>\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>\r\n              <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pt={2}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          {t('visitdialog.notes.reply-status')}\r\n          <UserStatusIconNote />\r\n        </Typography>\r\n        <List disablePadding={true}>\r\n          <li key=\"mailto-required\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-required')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay key=\"mailto-required\" data={data.mailto.required} />\r\n            </div>\r\n          </li>\r\n          <li key=\"mailto-optional\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-optional')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay key=\"mailto-optional\" data={data.mailto.optional} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box px={2} pt={2} style={data.usageRange === 'inside' ? { display: 'none' } : undefined}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n            <div className={classes.field}>{data.visitCompany}</div>\r\n          </li>\r\n          <li key=\"visitor-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n            <div className={classes.field}>{data.visitorName}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box p={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pb={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"datetime\" className={classes.list}>\r\n            <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n            <div className={classes.field}>\r\n              <LastUpdatedField datetime={data.lastUpdated} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </MyDialog>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { AddDefaultType, RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport type DataDialogAction =\r\n  | {\r\n      type: 'inputOpen' | 'readOpen' | 'inputClose' | 'readClose';\r\n    }\r\n  | { type: 'addDataOpen'; addDefault?: AddDefaultType };\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false, addDefault: action.addDefault };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n        addDefault={dataDialogHook.state.addDefault}\r\n      />\r\n      {!!currentRow && <RowDataReadDialog open={dataDialogHook.state.readOpen} onClose={handleReadDialogClose} data={currentRow} />}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\n\r\nconst useStyles = makeVisitorTableStyles(false);\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowDataType[]>(\r\n    `/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n});\r\n\r\ntype MyCalendarProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n};\r\n\r\nfunction MyCalendar({ label, date, onChange }: MyCalendarProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      value={date}\r\n      onChange={onChange}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      size=\"small\"\r\n      className={classes.keyboardDatePicker}\r\n      inputProps={{\r\n        style: {\r\n          width: 85,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { DataDialogAction } from './DataTableBase';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  datePicker: {\r\n    margin: 'auto 0',\r\n  },\r\n  title: {\r\n    margin: 'auto 0.25em',\r\n  },\r\n}));\r\n\r\ntype HeaderActionsProps = {\r\n  title: string;\r\n  subtitle?: string;\r\n  date: Date | null;\r\n  onDateChange: (date: Date | null) => void;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n  actionButtons?: React.ReactNode[];\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { title, subtitle, date, onDateChange, dispatch, actionButtons } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={!!actionButtons ? 6 : 9}>\r\n          <Grid item className={classes.datePicker}>\r\n            <MyCalendar label={t('main.header.picker-label')} date={date} onChange={onDateChange} />\r\n          </Grid>\r\n          <Grid item className={classes.title}>\r\n            <Typography component=\"h5\">{title}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container item justifyContent=\"flex-end\" alignItems=\"center\" spacing={2} xs={12} sm={!!actionButtons ? 6 : 3}>\r\n          {!!actionButtons &&\r\n            actionButtons.map((item, index) => {\r\n              return (\r\n                <Grid item key={`actionButtons-${index}`}>\r\n                  {item}\r\n                </Grid>\r\n              );\r\n            })}\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n              {t('main.header.add-event')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box pt={1}>{subtitle}</Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // isCreatedOnlyの状態\r\n  const [createdOnly, setCreatedOnly] = useState(false);\r\n  useEffect(() => {\r\n    setCreatedOnly(false); // TODO: production.jsの値を反映\r\n  }, []);\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useSelectedDate();\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.visitlist.title')}\r\n            subtitle={t(`main.visitlist.subtitle${createdOnly ? '.created-only' : ''}`)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Tooltip, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { differenceInMinutes, endOfDay, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport _ from 'lodash';\r\nimport clsx from 'clsx';\r\n\r\nimport { Schedule, ScheduleItem } from '_models/Schedule';\r\nimport { UsageRangeForVisitor } from '_models/Room';\r\n\r\nimport { DataDialogAction, DataDialogState, RowDataType } from 'main/DataTableBase';\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype BoxStyle = {\r\n  width: number;\r\n  halfWidth: number;\r\n  scale: number;\r\n  transform: Point;\r\n};\r\n\r\ntype BoxData = {\r\n  x: number;\r\n  width: number;\r\n  className: string;\r\n};\r\n\r\n// 8-20\r\nconst shortStyle: BoxStyle = {\r\n  width: 120,\r\n  halfWidth: 60,\r\n  scale: 2,\r\n  transform: { x: -960, y: 0 },\r\n};\r\n// 0-24\r\nconst longStyle: BoxStyle = {\r\n  width: 60,\r\n  halfWidth: 30,\r\n  scale: 1,\r\n  transform: { x: 0, y: 0 },\r\n};\r\n\r\nconst viewWidth = 60 * 24;\r\nconst viewHeight = 70;\r\nconst viewWidthMargin = 1; // lineの一番両端が身切れして他のlineより細くなる現象を避けるため\r\nconst viewWidthWrap = viewWidth + viewWidthMargin * 2;\r\nconst fontHeight = 30;\r\nconst fontMargin = 5;\r\n\r\nconst timeToPoint = (time: Date, boxStyle: BoxStyle) => {\r\n  const zero = startOfDay(time);\r\n  return differenceInMinutes(time, zero) * boxStyle.scale;\r\n};\r\n\r\nconst pointToTime = (point: number, boxStyle: BoxStyle) => {\r\n  const offset = 0;\r\n  return ((point + offset) / boxStyle.scale) * 60 * 1000;\r\n};\r\n\r\nconst getBoxData = (item: ScheduleItem, boxStyle: BoxStyle, currentDate: Date): BoxData => {\r\n  const start = new Date(item.start);\r\n  const end = new Date(item.end);\r\n  let x = timeToPoint(start, boxStyle);\r\n  let x2 = timeToPoint(end, boxStyle);\r\n  // 日を跨ぐ場合\r\n  if (!isSameDay(start, end)) {\r\n    const startOfCurrent = startOfDay(currentDate);\r\n    const endOfCurrent = endOfDay(currentDate);\r\n    // 翌日に続く\r\n    if (isBefore(endOfCurrent, end)) {\r\n      x2 = timeToPoint(endOfCurrent, boxStyle);\r\n    }\r\n    // 前日から続いている\r\n    if (isAfter(startOfCurrent, start)) {\r\n      x = timeToPoint(startOfCurrent, boxStyle);\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    width: x2 - x,\r\n    className: item.status,\r\n  };\r\n};\r\n\r\nconst calcX = (hour: number, width: number) => (hour + 1) * width + viewWidthMargin;\r\n\r\nconst createTransform = (boxStyle: BoxStyle) => {\r\n  return `translate(${boxStyle.transform.x},${boxStyle.transform.y})`;\r\n};\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    color: theme.palette.text.primary,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      marginBottom: '0.5rem',\r\n      // height: '5vmin',\r\n      '& svg': {\r\n        fontSize: '1.5rem',\r\n        '& line': {\r\n          strokeWidth: 2,\r\n        },\r\n        '& line.hour-line': {\r\n          stroke: theme.palette.grey[400],\r\n        },\r\n        '& line.hour-half-line': {\r\n          stroke: theme.palette.grey[300],\r\n        },\r\n        '& text': {\r\n          fill: theme.palette.grey[400],\r\n        },\r\n        '& text.subject': {\r\n          fill: '#fff',\r\n          fontSize: '1.2rem',\r\n          dominantBaseline: 'central',\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect': {\r\n          strokeWidth: 1,\r\n          fillOpacity: 0.5,\r\n        },\r\n        '& rect.new-event-bar': {\r\n          fillOpacity: 0,\r\n        },\r\n        '& rect.event': {\r\n          stroke: theme.palette.success.main,\r\n          fill: theme.palette.success.light,\r\n          fillOpacity: 0.9,\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect.myOwn': {\r\n          stroke: theme.palette.info.main,\r\n          fill: theme.palette.info.light,\r\n        },\r\n        '& rect.wait': {\r\n          stroke: theme.palette.warning.light,\r\n          fill: theme.palette.warning.main,\r\n        },\r\n        '& rect.busy': {\r\n          stroke: theme.palette.error.light,\r\n          fill: theme.palette.error.main,\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      // color: theme.palette.grey[500],\r\n      fontSize: '1rem',\r\n      paddingBottom: 0,\r\n    },\r\n  })\r\n);\r\n\r\ntype TimeBarProps = {\r\n  // rangesw: BoxStyle;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  schedule: Schedule;\r\n  events: RowDataType[][];\r\n  onClickCallback: (rowData: RowDataType) => void;\r\n  keyLabel: string; //schedule.roomName\r\n  keyValue: string; //schedule.roomEmail\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function TimeBar(props: TimeBarProps) {\r\n  const { dataDialogHook, schedule, events, onClickCallback, keyLabel, keyValue, onTitleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const [boxStyle, setBoxStyle] = useState(shortStyle);\r\n  const [transform, setTransform] = useState(createTransform(boxStyle));\r\n\r\n  // useEffect(() => {\r\n  //   setBoxStyle(rangesw ? longStyle : shortStyle);\r\n  // }, [rangesw]);\r\n\r\n  useEffect(() => {\r\n    setTransform(createTransform(boxStyle));\r\n  }, [boxStyle, events]);\r\n\r\n  const hRatio = 1;\r\n  const rectY = fontHeight + (viewHeight - fontHeight) * (1 - hRatio) + 1;\r\n  const rectHeight = (viewHeight - fontHeight) * hRatio - 1;\r\n  const viewHeightDup = schedule.type === 'free' ? viewHeight + rectHeight * (schedule.scheduleItems.length - 1) + rectHeight : viewHeight;\r\n\r\n  // スケジュール枠の作成\r\n  const createScheduleBox = useCallback(\r\n    (item: ScheduleItem, index: number, timestamp: number, rowIndex: number) => {\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      return (\r\n        <rect\r\n          key={`${keyValue}-sc-${index}`}\r\n          className={boxData.className}\r\n          x={boxData.x}\r\n          y={rectY + rectHeight * rowIndex}\r\n          width={boxData.width}\r\n          height={rectHeight}\r\n          rx={3}\r\n          ry={5}\r\n        ></rect>\r\n      );\r\n    },\r\n    [boxStyle, keyValue, rectY, rectHeight]\r\n  );\r\n\r\n  // イベント枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createEventBox = useCallback(\r\n    (event: RowDataType, index: number, timestamp: number, rowIndex: number) => {\r\n      const item: ScheduleItem = { status: 'event', start: event.startDateTime, end: event.endDateTime };\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      const x = boxData.x;\r\n      const y = rectY + rectHeight * rowIndex;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      const myEvent = event.isAttendees ? 'myOwn' : '';\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${keyValue}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n          onClick={() => {\r\n            onClickCallback(event);\r\n          }}\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={clsx(boxData.className, myEvent)} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, rectY, rectHeight, keyValue, onClickCallback]\r\n  );\r\n\r\n  // 新規作成ボタン(開始時間の指定あり)\r\n  const handleCreateClick = (\r\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\r\n    timestamp: number,\r\n    roomId: string,\r\n    usageRange: UsageRangeForVisitor\r\n  ) => {\r\n    const svg: SVGSVGElement | null = event.currentTarget.closest('svg');\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = event.clientX;\r\n    pt.y = event.clientY;\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) return;\r\n\r\n    const svgP = pt.matrixTransform(ctm.inverse());\r\n    const rectX = svgP.x - boxStyle.transform.x + viewWidthMargin;\r\n    const $time = pointToTime(rectX, boxStyle);\r\n    const time = Math.floor($time / 1000 / 60 / 30) * 1000 * 60 * 30; //TODO: Interval config化？\r\n    const start = new Date(startOfDay(timestamp).getTime() + time);\r\n\r\n    dataDialogHook.dispatch({ type: 'addDataOpen', addDefault: { start: start, roomId: roomId, usageRange: usageRange } });\r\n  };\r\n\r\n  // スケジュール枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectSchedules = useMemo(() => {\r\n    return <>{schedule.scheduleItems.map((row, rowIndex) => row.map((item, index) => createScheduleBox(item, index, schedule.date, rowIndex)))}</>;\r\n  }, [createScheduleBox, schedule]);\r\n\r\n  // イベント枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectEvents = useMemo(() => {\r\n    return <>{events.map((row, rowIndex) => row.map((event, index) => createEventBox(event, index, schedule.date, rowIndex)))}</>;\r\n  }, [createEventBox, events, schedule]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Typography className={classes.title}>{keyLabel}</Typography> */}\r\n      <Button\r\n        color=\"secondary\"\r\n        className={classes.title}\r\n        size=\"small\"\r\n        onClick={() => onTitleClick(schedule.date, schedule.categoryId, schedule.roomId)}\r\n      >\r\n        {keyLabel}\r\n      </Button>\r\n      <div className={classes.container}>\r\n        <svg viewBox={`0 0 ${viewWidthWrap} ${viewHeightDup}`} preserveAspectRatio=\"none\">\r\n          <g transform={transform}>\r\n            <line className=\"hour-line\" x1={0} y1={0} x2={0} y2={viewHeightDup}></line>\r\n            <line className=\"hour-half-line\" x1={boxStyle.halfWidth} y1={fontHeight} x2={boxStyle.halfWidth} y2={viewHeightDup}></line>\r\n            {_.range(0, 24).map(($) => {\r\n              const x = calcX($, boxStyle.width);\r\n              const minX = x + boxStyle.halfWidth;\r\n              const fontX = $ * boxStyle.width + fontMargin;\r\n              return (\r\n                <Fragment key={`fragment-${$}`}>\r\n                  <line key={`hour-line-${$}`} className=\"hour-line\" x1={x} y1={0} x2={x} y2={viewHeightDup}></line>\r\n                  <line key={`hour-half-line-${$}`} className=\"hour-half-line\" x1={minX} y1={fontHeight} x2={minX} y2={viewHeightDup}></line>\r\n                  <text key={`hour-text-${$}`} x={fontX} y={fontHeight - 5}>\r\n                    {$}\r\n                  </text>\r\n                </Fragment>\r\n              );\r\n            })}\r\n            <rect\r\n              className=\"new-event-bar\"\r\n              x={0}\r\n              y={rectY}\r\n              width={calcX(24, boxStyle.width)}\r\n              height={viewHeightDup - rectY}\r\n              onClick={(e) => handleCreateClick(e, schedule.date, schedule.roomId, schedule.usageRange)}\r\n            ></rect>\r\n            {rectSchedules}\r\n            {rectEvents}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { TimeBar } from '../TimeBar';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<TimeBarDataType>(\r\n    `/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${tabKey}`,\r\n    undefined\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={schedule.roomName}\r\n            keyValue={schedule.roomEmail}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, onTitleClick]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { MuiPickersContext } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport { useCallback, useContext, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { TimeBar } from '../TimeBar';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTableWeekly(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<TimeBarDataType>(\r\n    `/event/byroom/weekly?timestamp=${currentDate!.getTime()}&location=${match.params.location}&room=${tabKey}`,\r\n    undefined\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={format(schedule.date, 'yyyy/MM/dd (E)', { locale: muiPickContext?.locale })}\r\n            keyValue={schedule.date.toString()}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, muiPickContext?.locale, onTitleClick]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { cloneElement, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { AppBar, Tab } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nimport { getReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\ninterface TabModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ntype MyTabContextProps<T extends TabModel> = {\r\n  data: Array<T>;\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function MyTabContext<T extends TabModel>(props: MyTabContextProps<T>) {\r\n  const { data, tabPanelContent, selected } = props;\r\n\r\n  // タブパネルとタブリストの描画が揃ってから表示するための制御\r\n  const [activateTab, setActivateTab] = useState(false);\r\n  useEffect(() => setActivateTab(true), []);\r\n\r\n  // タブの状態\r\n  const [tabValue, setTabValue] = useState('');\r\n\r\n  // タブの自動選択\r\n  useEffect(() => {\r\n    if (!!selected) {\r\n      setTabValue(selected);\r\n    } else {\r\n      setTabValue(data[0].id);\r\n    }\r\n  }, [data, selected]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('tabValue', tabValue);\r\n    }\r\n  }, [tabValue]);\r\n  // ================================\r\n\r\n  // タブ切り替えアクション\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // タブリストの表示（不要レンダリングが起きるためメモ化）\r\n  const tabList = useMemo(() => {\r\n    return (\r\n      <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"scrollable\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n        {data?.map((item, index) => (\r\n          <Tab key={`tab-${index}`} label={item.name} value={`${item.id}`} />\r\n        ))}\r\n      </TabList>\r\n    );\r\n  }, [data]);\r\n\r\n  // タブパネルの表示（不要レンダリングが起きるためメモ化）\r\n  const tabPanels = useMemo(() => {\r\n    return (\r\n      <>\r\n        {data?.map((item, index) => {\r\n          return (\r\n            <TabPanel key={`tab-panel-${index}`} value={`${item.id}`}>\r\n              {cloneElement(tabPanelContent, { tabKey: item.id })}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [data, tabPanelContent]);\r\n\r\n  if (!activateTab) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        {tabList}\r\n      </AppBar>\r\n      {tabPanels}\r\n    </TabContext>\r\n  );\r\n}\r\n","import { useRouteMatch } from 'react-router-dom';\r\nimport { LocationParams } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\n\r\ntype CategoryTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function CategoryTabContext(props: CategoryTabContextProps) {\r\n  const { tabPanelContent, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // カテゴリ取得\r\n  const [{ data }] = useLoadData<Category[]>(`/category/choices?location=${match.params.location}`, []);\r\n\r\n  return <>{!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}</>;\r\n}\r\n","import { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Room, RoomType } from '_models/Room';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\n\r\ntype RoomTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n  type?: RoomType;\r\n};\r\n\r\nexport function RoomTabContext(props: RoomTabContextProps) {\r\n  const { tabPanelContent, type, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  const typeQuery = !!type ? `&type=${type}` : '';\r\n\r\n  // カテゴリ取得\r\n  const [{ data }] = useLoadData<Room[]>(`/room/choices?location=${match.params.location}${typeQuery}`, []);\r\n\r\n  return <>{!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}</>;\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { DataTableWeekly } from './DataTableWeekly';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { CategoryTabContext } from '../CategoryTabContext';\r\nimport { RoomTabContext } from 'main/RoomTabContext';\r\n\r\nexport type ByRoomState = {\r\n  weekly: boolean;\r\n  changeTab: string | undefined;\r\n  titleLabel: string;\r\n  subtitleLabel: string;\r\n};\r\n\r\nexport type ByRoomAction = {\r\n  type: 'default' | 'weekly';\r\n  changeTab: string;\r\n};\r\n\r\nexport const byRoomReducer = (state: ByRoomState, action: ByRoomAction) => {\r\n  switch (action.type) {\r\n    case 'default':\r\n      return { weekly: false, changeTab: action.changeTab, titleLabel: 'main.byroom.title', subtitleLabel: 'main.byroom.subtitle' };\r\n    case 'weekly':\r\n      return {\r\n        weekly: true,\r\n        changeTab: action.changeTab,\r\n        titleLabel: 'main.byroom-weekly.title',\r\n        subtitleLabel: 'main.byroom-weekly.subtitle',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useSelectedDate();\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // １週間表示切替えの状態管理\r\n  const [byRoomState, byRoomDispatch] = useReducer(byRoomReducer, {\r\n    weekly: false,\r\n    changeTab: undefined,\r\n    titleLabel: 'main.byroom.title',\r\n    subtitleLabel: 'main.byroom.subtitle',\r\n  });\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      byRoomDispatch({ type: !!getReloadState('weekly') ? 'weekly' : 'default', changeTab: getReloadState('tabValue') });\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('weekly', byRoomState.weekly ? '1' : '');\r\n    }\r\n  }, [byRoomState.weekly]);\r\n  // ================================\r\n\r\n  // デフォルト → １週間表示へ切替えアクション\r\n  const handleDefaultClick = (timestamp: number, _categoryId: string, roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    byRoomDispatch({ type: 'weekly', changeTab: roomId });\r\n  };\r\n\r\n  // １週間 → デフォルト表示へ切替えアクション\r\n  const handleWeeklyClick = (timestamp: number, categoryId: string, _roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    byRoomDispatch({ type: 'default', changeTab: categoryId });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t(byRoomState.titleLabel)}\r\n            subtitle={t(byRoomState.subtitleLabel)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        {\r\n          /* デフォルト表示 */\r\n          !byRoomState.weekly && (\r\n            <CategoryTabContext\r\n              tabPanelContent={\r\n                <DataTable\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  onTitleClick={handleDefaultClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          /* １週間表示 */\r\n          byRoomState.weekly && (\r\n            <RoomTabContext\r\n              tabPanelContent={\r\n                <DataTableWeekly\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  onTitleClick={handleWeeklyClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n              // type=\"rooms\"\r\n            />\r\n          )\r\n        }\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Box, Button, List, makeStyles, TextField } from '@material-ui/core';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport { FrontRowData } from './DataTable';\r\n\r\nimport { RoomReadFields } from 'main/RoomReadFields';\r\nimport { LastUpdatedField } from 'main/LastUpdatedField';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { FrontInputType, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles({\r\n  checkAction: {\r\n    textAlign: 'center',\r\n    marginBottom: '10px',\r\n    '& Button': {\r\n      margin: '0 5%',\r\n      width: '40%',\r\n    },\r\n  },\r\n});\r\n\r\ntype Inputs = {\r\n  mode: 'checkin' | 'checkout';\r\n} & VisitorInfoFront &\r\n  FrontInputType;\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: FrontRowData;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataFrontDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n  const frontClasses = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd HH:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('mode', 'checkin');\r\n    setValue('checkIn', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('mode', 'checkout');\r\n    setValue('checkOut', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData(`/front/${formData.mode}`, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <Box p={2}>\r\n          <form>\r\n            <div className={frontClasses.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  // required: t('common.form.required') as string,\r\n                })}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>{data.apptTime}</div>\r\n            </li>\r\n            <li key=\"check-in\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-in')}</div>\r\n              <div className={classes.field}>{data.checkIn}</div>\r\n            </li>\r\n            <li key=\"check-out\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-out')}</div>\r\n              <div className={classes.field}>{data.checkOut}</div>\r\n            </li>\r\n            {/* <li key=\"event-subject\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n              <div className={classes.field}>{data.subject}</div>\r\n            </li> */}\r\n            <li key=\"visit-company\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n              <div className={classes.field}>{data.visitCompany}</div>\r\n            </li>\r\n            <li key=\"visitor-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n              <div className={classes.field}>{data.visitorName}</div>\r\n            </li>\r\n            <li key=\"comment\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n              <div className={classes.field}>{data.comment}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        {Object.keys(data.resourcies).map((roomId) => {\r\n          return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n        })}\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"reservation-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n              <div className={classes.field}>{data.reservationName}</div>\r\n            </li>\r\n            <li key=\"contact-addr\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n              <div className={classes.field}>{data.contactAddr}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        <Box p={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"datetime\" className={classes.list}>\r\n              <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n              <div className={classes.field}>\r\n                <LastUpdatedField datetime={data.lastUpdated} />\r\n              </div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport { pageingOntions, tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { RowDataFrontDialog } from './RowDataFrontDialog';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { cellStyle, makeVisitorTableStyles, frontCellPadding } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nconst useStyles = makeVisitorTableStyles(true);\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  width?: string;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: FrontRowData) => any;\r\n};\r\n\r\nexport type FrontRowData = RowDataType & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<FrontRowData[]>(\r\n    `/front/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // フロント用ダイアログの状態\r\n  const [frontDialogOpen, setFrontDialogOpen] = useState(false);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<FrontRowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: FrontRowData) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // フロント用ダイアログを開く\r\n  const handleFrontDialogOpen = useCallback((selectedRow: FrontRowData) => {\r\n    setFrontDialogOpen(true);\r\n    setCurrentRow(selectedRow);\r\n  }, []);\r\n  // フロント用ダイアログを閉じる\r\n  const handleFrontDialogClose = async () => {\r\n    setFrontDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    {\r\n      title: t('visittable.header.appt-time'),\r\n      field: 'apptTime',\r\n      render: (rowData) => rowData.apptTime.split(' ')[1],\r\n      width: '95px',\r\n    },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    {\r\n      title: t('visittable.header.tea-supply'),\r\n      field: 'teaSupply',\r\n      render: (rowData) => {\r\n        const roomId = Object.keys(rowData.resourcies)[0]; // TODO:複数会議室未対応\r\n        const strNumOfVisitor = `${t('visitdialog.view.tea-supply.number-of-visitor')}:${rowData.resourcies[roomId].numberOfVisitor}`;\r\n        const strNumOfEmployee = `${t('visitdialog.view.tea-supply.number-of-employee')}:${rowData.resourcies[roomId].numberOfEmployee}`;\r\n        return (\r\n          <>\r\n            {strNumOfVisitor}\r\n            <br />\r\n            {strNumOfEmployee}\r\n          </>\r\n        );\r\n      },\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.visit-company')} / ${t('visittable.header.visitor-name')}`,\r\n      field: 'visitCompany',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.visitCompany}\r\n          <br />\r\n          {rowData.visitorName}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: t('visittable.header.check-in'),\r\n      field: 'checkIn',\r\n      render: (rowData) =>\r\n        rowData.checkIn ? (\r\n          <>\r\n            <span>✓</span>\r\n            <br />\r\n            <span>{rowData.visitorCardNumber}</span>\r\n          </>\r\n        ) : (\r\n          <span></span>\r\n        ),\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: t('visittable.header.check-out'),\r\n      field: 'checkOut',\r\n      render: (rowData) => (rowData.checkOut ? <span>✓</span> : <span></span>),\r\n      width: '50px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.reservation-name')} / ${t('visittable.header.contact-addr')}`,\r\n      field: 'reservationName',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.reservationName}\r\n          <br />\r\n          {rowData.contactAddr}\r\n        </>\r\n      ),\r\n    },\r\n    { title: t('visittable.header.comment'), field: 'comment', width: '70%' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<FrontRowData>[]}\r\n        components={{\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleFrontDialogOpen(selectedRow)}\r\n        actions={[\r\n          {\r\n            icon: () => <BorderColorIcon />,\r\n            tooltip: t('visittable.header.edit-action'),\r\n            onClick: (_, rowData) => !!rowData && handleDialogOpen(rowData as FrontRowData),\r\n          },\r\n        ]}\r\n        localization={{\r\n          header: { actions: '' },\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light, padding: frontCellPadding },\r\n          tableLayout: 'fixed',\r\n          // actionsColumnIndex: -1,\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {currentRow && <RowDataFrontDialog open={frontDialogOpen} onClose={handleFrontDialogClose} data={currentRow} reload={reload} />}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useContext, useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { addWeeks, format, startOfDay } from 'date-fns';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { CSVLink } from 'react-csv';\r\nimport _ from 'lodash';\r\n\r\nimport { Box, Button, Grid, makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfo, VisitorInfoFront, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n  between: { textAlign: 'center' },\r\n});\r\n\r\ntype ExportCsvParams = {\r\n  location: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n};\r\n\r\ntype DataType = VisitorInfo & VisitorInfoReadOnly & VisitorInfoFront;\r\n\r\nconst nameOfCsvHeaders = [\r\n  'apptTime',\r\n  'roomName',\r\n  'teaSupply',\r\n  'numberOfVisitor',\r\n  'numberOfEmployee',\r\n  'visitCompany',\r\n  'visitorName',\r\n  'checkIn',\r\n  'visitorCardNumber',\r\n  'checkOut',\r\n  'reservationName',\r\n  'contactAddr',\r\n  'subject',\r\n  'comment',\r\n] as const;\r\ntype TypeOfCsvHeaders = typeof nameOfCsvHeaders[number];\r\ntype CsvDataType = {\r\n  [P in TypeOfCsvHeaders]: string;\r\n};\r\ntype CsvHeaderType = { label: string; key: keyof CsvDataType };\r\n\r\ntype ExportCsvDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\nexport function ExportCsvDialog(props: ExportCsvDialogProps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  const csvLinkRef = useRef<CSVLink & HTMLAnchorElement & { link: HTMLAnchorElement }>(null);\r\n\r\n  // CSVデータの状態\r\n  const [csvData, setCsvData] = useState<CsvDataType[]>([]);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = useMemo(() => {\r\n    return { location: match.params.location, startDate: new Date(), endDate: addWeeks(new Date(), 1) };\r\n  }, [match.params.location]);\r\n\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<ExportCsvParams>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset(defaultValues);\r\n    }\r\n  }, [defaultValues, open, reset]);\r\n\r\n  // 開始日の変更アクション\r\n  const handleStartDateChange = () => {\r\n    const endDate = addWeeks(getValues('startDate'), 1);\r\n    setValue('endDate', endDate, { shouldDirty: true });\r\n  };\r\n\r\n  // CSV出力アクション\r\n  const handleExportCsv = async () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // CSVヘッダー\r\n  const headers: CsvHeaderType[] = nameOfCsvHeaders.map((value) => {\r\n    return { label: t(`export-csv.file.header.${_.kebabCase(value)}`), key: value };\r\n  });\r\n\r\n  // CSVファイル名\r\n  const filename = `visitor-${format(getValues('startDate'), 'yyyyMMdd')}-${format(getValues('endDate'), 'yyyyMMdd')}.csv`;\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<ExportCsvParams> = async (formData) => {\r\n    try {\r\n      const result = await fetchPostData<ExportCsvParams, ExportCsvParams, DataType[]>('/front/export', {\r\n        inputs: formData,\r\n        dirtyFields: dirtyFields,\r\n      });\r\n      if (result!.success) {\r\n        if (!!result.value) {\r\n          const data = result.value.map((item) => {\r\n            const roomId = Object.keys(item.resourcies)[0]; // TODO:複数会議室未対応\r\n            return {\r\n              apptTime: item.apptTime,\r\n              roomName: item.roomName,\r\n              teaSupply: item.resourcies[roomId].teaSupply ? t('export-csv.file.tea-supply-yes') : t('export-csv.file.tea-supply-no'),\r\n              numberOfVisitor: item.resourcies[roomId].numberOfVisitor.toString(),\r\n              numberOfEmployee: item.resourcies[roomId].numberOfEmployee.toString(),\r\n              visitCompany: item.visitCompany,\r\n              visitorName: item.visitorName,\r\n              checkIn: item.checkIn,\r\n              visitorCardNumber: item.visitorCardNumber,\r\n              checkOut: item.checkOut,\r\n              reservationName: item.reservationName,\r\n              contactAddr: item.contactAddr,\r\n              subject: item.subject,\r\n              comment: item.comment,\r\n            };\r\n          }) as CsvDataType[];\r\n          setCsvData(data);\r\n          csvLinkRef?.current?.link.click();\r\n          snackberContext.dispatch({ type: 'success', message: t('export-csv.msg.export-success') });\r\n        }\r\n      } else {\r\n        // エラーのセット\r\n        snackberContext.dispatch({ type: 'error', message: t('export-csv.msg.export-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 日付ピッカー\r\n  const datePicker = (type: 'start' | 'end') => (\r\n    <Controller\r\n      name={`${type}Date`}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () =>\r\n          startOfDay(getValues('startDate')).getTime() <= startOfDay(getValues('endDate')).getTime() ||\r\n          (t('export-csv.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <KeyboardDatePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            if (type === 'start') handleStartDateChange();\r\n          }}\r\n          format=\"yyyy/MM/dd\"\r\n          label={t(`export-csv.${type}-date`)}\r\n          showTodayButton\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n          size=\"small\"\r\n          className={classes.keyboardDatePicker}\r\n          error={!!errors[`${type}Date`]}\r\n          helperText={errors[`${type}Date`] && errors[`${type}Date`]!.message}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('export-csv.title')}>\r\n        <form>\r\n          <Box px={2} pt={2}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('start')}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} className={classes.between}>\r\n                <ArrowRightAltIcon />\r\n              </Grid>\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('end')}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box p={2}>\r\n            <Button onClick={handleExportCsv} variant=\"contained\" color=\"primary\" fullWidth>\r\n              {t('export-csv.button.export-csv')}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n\r\n        <CSVLink style={{ display: 'none' }} data={csvData} headers={headers} filename={filename} ref={csvLinkRef}>\r\n          {'Export Trigger'}\r\n        </CSVLink>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Paper } from '@material-ui/core';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { ExportCsvDialog } from './ExportCsvDialog';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function Front() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useSelectedDate();\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  //  CSV出力ダイアログの状態\r\n  const [exportCsvOpen, setExportCsvOpen] = useState(false);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  //  CSV出力クリックアクション\r\n  const handleExporCsvClick = () => {\r\n    setExportCsvOpen(true);\r\n  };\r\n  // CSV出力ダイアログ閉じるアクション\r\n  const handleExporCsvClose = () => {\r\n    setExportCsvOpen(false);\r\n  };\r\n\r\n  // CSV出力ボタン\r\n  const csvButton = (\r\n    <Button variant=\"contained\" startIcon={<ArchiveOutlinedIcon />} onClick={handleExporCsvClick}>\r\n      {t('main.header.export-csv')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <BaseTemplate frontMode>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.front.title')}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            dispatch={dataDialogDispatch}\r\n            actionButtons={[csvButton]}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n      <ExportCsvDialog open={exportCsvOpen} onClose={handleExporCsvClose} />\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('common.msg.delete-confirm')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepPartial, Path, PathValue, SubmitHandler, UnpackNestedValue, useForm, FieldValues, FormProvider } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nexport type Mastertype = 'role' | 'location' | 'category' | 'room';\r\n\r\ntype InputMode = { mode: 'ins' | 'upd' | 'del' };\r\nexport type Inputs<RowData> = InputMode & RowData;\r\n\r\ntype DefaultValuesType<RowData> = UnpackNestedValue<DeepPartial<Inputs<RowData>>>;\r\nexport type InputFields<RowData> = {\r\n  type: Mastertype;\r\n  item: React.ReactNode;\r\n  defaultValues: DefaultValuesType<RowData>;\r\n};\r\n\r\n// react-hook-formのsetValue。型定義が長いのでショートカット用\r\ntype RHFSetValueP1<RowData> = Path<Inputs<RowData>>;\r\ntype RHFSetValueP2<RowData> = UnpackNestedValue<PathValue<Inputs<RowData>, Path<Inputs<RowData>>>>;\r\n\r\ntype RowDataInputDialogProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowData | null;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataInputDialog<RowData>(props: RowDataInputDialogProps<RowData>) {\r\n  const { inputFields, open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 削除確認メッセージの状\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const methods = useForm({ defaultValues: { ...inputFields.defaultValues }, reValidateMode: 'onSubmit' });\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    setError,\r\n    formState: { isDirty, isSubmitting, dirtyFields },\r\n  } = methods;\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      const values = Object.keys(inputFields.defaultValues).reduce((newObj: FieldValues, key) => {\r\n        if (key === 'mode') {\r\n          newObj['mode'] = 'upd';\r\n        } else {\r\n          newObj[key] = (data as FieldValues)[key];\r\n        }\r\n        return newObj;\r\n      }, {});\r\n      reset(_.cloneDeep(values as DefaultValuesType<RowData>));\r\n    } else {\r\n      reset(_.cloneDeep(inputFields.defaultValues));\r\n    }\r\n  }, [data, inputFields, open, reset]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode' as RHFSetValueP1<RowData>, 'del' as RHFSetValueP2<RowData>);\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs<RowData>> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = `/${inputFields.type}/create`;\r\n          break;\r\n        case 'upd':\r\n          url = `/${inputFields.type}/update`;\r\n          break;\r\n        case 'del':\r\n          url = `/${inputFields.type}/delete`;\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n        // ロール設定とロケーション設定は更新反映のためにログアウトを促す\r\n        if (inputFields.type === 'role' || inputFields.type === 'location') {\r\n          await new Promise(() =>\r\n            setTimeout(() => {\r\n              snackberContext.dispatch({ type: 'warning', message: t('common.msg.prompt-logout') });\r\n            }, 1500)\r\n          );\r\n        }\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs<RowData> as Path<Inputs<RowData>>;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t(`settings.title.${inputFields.type}`)}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          <FormProvider {...methods}>\r\n            <form>\r\n              <Box p={2}>{inputFields.item}</Box>\r\n              <Box px={2}>\r\n                <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                  <Grid item xs={!data ? 12 : 6}>\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" disabled={!isDirty} startIcon={<SaveIcon />} fullWidth>\r\n                      {t('common.button.save')}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                    <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                      {t('common.button.delete')}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </FormProvider>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { InputFields, RowDataInputDialog } from './RowDataInputDialog';\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n};\r\n\r\nexport type DataDialogAction = {\r\n  type: 'inputOpen' | 'addDataOpen' | 'inputClose';\r\n};\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  currentRow: RowData | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase<RowData>(props: DataTableBaseProps<RowData>) {\r\n  const { inputFields, dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog<RowData>\r\n        inputFields={inputFields}\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase } from './DataTableBase';\r\nimport { InputFields } from './RowDataInputDialog';\r\n\r\nexport type Columns<RowData> = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: RowData) => any;\r\n};\r\n\r\ntype DataTableProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  columns: Columns<RowData>[];\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable<RowData extends object>(props: DataTableProps<RowData>) {\r\n  const { inputFields, columns, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowData[]>(`/${inputFields.type}/list`, []);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowData) => {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase<RowData> inputFields={inputFields} currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { DataDialogAction } from './DataTableBase';\r\nimport { Mastertype } from './RowDataInputDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype HeaderActionsProps = {\r\n  master: Mastertype;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { master, dispatch } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={9}>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            {t(`settings.title.${master}`)}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n            {t('settings.add-master')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { EmailAddress } from './User';\r\n\r\nexport const nameOfRoleType = ['admin', 'front'] as const;\r\nexport type RoleType = typeof nameOfRoleType[number];\r\nexport type Role = {\r\n  id: string;\r\n  name: RoleType;\r\n  members: EmailAddress[];\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { nameOfRoleType } from '_models/Role';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Role>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField\r\n        name={'name'}\r\n        control={control}\r\n        label={t('settings.header.role.name')}\r\n        required\r\n        selectList={nameOfRoleType.map((value) => {\r\n          return { label: t(`settings.view.role.name.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <AddrBookAutoComplete name={'members'} control={control} label={t('settings.header.role.members')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nexport function RoleSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Role>[] = [\r\n    {\r\n      title: t('settings.header.role.name'),\r\n      field: 'name',\r\n      render: (rowData) => t(`settings.view.role.name.${rowData.name}`),\r\n    },\r\n    // { title: t('settings.header.role.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Role> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: 'admin',\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"role\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Role>\r\n            inputFields={{ type: 'role', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Location>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.location.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'url'}\r\n        control={control}\r\n        label={t('settings.header.location.url')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            value: /^[a-z0-9]+$/,\r\n            message: t('settings.form.location.error.url.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.location.sort')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nexport function LocationSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Location>[] = [\r\n    { title: t('settings.header.location.name'), field: 'name' },\r\n    { title: t('settings.header.location.url'), field: 'url' },\r\n    { title: t('settings.header.location.sort'), field: 'sort' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Location> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    url: '',\r\n    sort: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"location\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Location>\r\n            inputFields={{ type: 'location', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Category>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // メンバー表示の制御用に限定公開スイッチを監視\r\n  const isLimitedPublic = useWatch({\r\n    control,\r\n    name: 'limitedPublic',\r\n  });\r\n\r\n  //メンバー表示の状態\r\n  const [showMembers, setShowMembers] = useState(false);\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    setShowMembers(isLimitedPublic);\r\n    if (!isLimitedPublic) {\r\n      setValue('members', [], { shouldDirty: true });\r\n    }\r\n  }, [isLimitedPublic, setValue]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.category.name')} required errors={errors} />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.category.sort')} errors={errors} />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'limitedPublic'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.limited-public')}\r\n      />\r\n      <AddrBookAutoComplete\r\n        name={'members'}\r\n        control={control}\r\n        label={t('settings.header.category.members')}\r\n        errors={errors}\r\n        style={!showMembers ? { display: 'none' } : undefined}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nexport function CategorySettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Category>[] = [\r\n    { title: t('settings.header.category.name'), field: 'name' },\r\n    { title: t('settings.header.category.sort'), field: 'sort' },\r\n    { title: t('settings.header.category.limited-public'), field: 'limitedPublic', type: 'boolean' },\r\n    // { title: t('settings.header.category.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Category> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    sort: '',\r\n    limitedPublic: false,\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"category\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Category>\r\n            inputFields={{ type: 'category', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { nameOfRoomType, nameOfUsageRange, Room } from '_models/Room';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\ntype DataInputsProps = {\r\n  locations: Location[] | undefined;\r\n  categories: Category[] | undefined;\r\n};\r\n\r\nexport function DataInputs({ locations, categories }: DataInputsProps) {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Room>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用にタイプ選択を監視\r\n  const typeWatch = useWatch({ control, name: 'type' });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (typeWatch === 'free') {\r\n      setValue('teaSupply', false, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    } else {\r\n      setDisabledTeaSupply(false);\r\n    }\r\n  }, [setValue, typeWatch]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.room.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'email'}\r\n        control={control}\r\n        label={t('settings.header.room.email')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            // eslint-disable-next-line no-useless-escape\r\n            value: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n            message: t('settings.form.room.error.email.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.room.sort')} errors={errors} />\r\n      <ControllerTextField\r\n        name={'usageRange'}\r\n        control={control}\r\n        label={t('settings.header.room.usage-range')}\r\n        required\r\n        selectList={nameOfUsageRange.map((value) => {\r\n          return { label: t(`settings.view.room.usage-range.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'type'}\r\n        control={control}\r\n        label={t('settings.header.room.type')}\r\n        required\r\n        selectList={nameOfRoomType.map((value) => {\r\n          return { label: t(`settings.view.room.type.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'teaSupply'}\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n            )}\r\n          />\r\n        }\r\n        label={t('settings.header.room.tea-supply')}\r\n        style={disabledTeaSupply ? { display: 'none' } : undefined}\r\n      />\r\n      <ControllerTextField\r\n        name={'location'}\r\n        control={control}\r\n        label={t('settings.header.room.location')}\r\n        required\r\n        selectList={locations?.map((location) => {\r\n          return { label: location.name, value: location.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'category'}\r\n        control={control}\r\n        label={t('settings.header.room.category')}\r\n        required\r\n        selectList={categories?.map((category) => {\r\n          return { label: category.name, value: category.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Room } from '_models/Room';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nexport function RoomSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ロケーションデータ取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  // カテゴリデータ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  const columns: Columns<Room>[] = [\r\n    { title: t('settings.header.room.name'), field: 'name' },\r\n    // { title: t('settings.header.room.email'), field: 'email' },\r\n    { title: t('settings.header.room.sort'), field: 'sort' },\r\n    {\r\n      title: t('settings.header.room.usage-range'),\r\n      field: 'usageRange',\r\n      render: (rowData) => t(`settings.view.room.usage-range.${rowData.usageRange}`),\r\n    },\r\n    { title: t('settings.header.room.type'), field: 'type', render: (rowData) => t(`settings.view.room.type.${rowData.type}`) },\r\n    { title: t('settings.header.room.tea-supply'), field: 'teaSupply', type: 'boolean' },\r\n    {\r\n      title: t('settings.header.room.location'),\r\n      field: 'location',\r\n      render: (rowData) => {\r\n        const target = locations?.find((location) => location.id === rowData.location);\r\n        return target?.name;\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.category'),\r\n      field: 'category',\r\n      render: (rowData) => {\r\n        const target = categories?.find((category) => category.id === rowData.category);\r\n        return target?.name;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Room> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    usageRange: 'none',\r\n    type: 'rooms',\r\n    sort: '',\r\n    teaSupply: false,\r\n    location: '',\r\n    category: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"room\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Room>\r\n            inputFields={{ type: 'room', item: <DataInputs locations={locations} categories={categories} />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { SignIn } from 'login';\r\nimport { AuthorizeWrapper } from 'login/Authorize';\r\nimport { VisitList } from 'main/visitList';\r\nimport { ByRoom } from 'main/byRoom';\r\nimport { Front } from 'main/front';\r\nimport { RoleSettings } from 'master/role';\r\nimport { LocationSettings } from 'master/location';\r\nimport { CategorySettings } from 'master/category';\r\nimport { RoomSettings } from 'master/room';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main\" component={VisitList} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/front\" component={Front} />\r\n        <Route exact path=\"/:location?/settings/role\" component={RoleSettings} />\r\n        <Route exact path=\"/:location?/settings/location\" component={LocationSettings} />\r\n        <Route exact path=\"/:location?/settings/category\" component={CategorySettings} />\r\n        <Route exact path=\"/:location?/settings/room\" component={RoomSettings} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/:location?/\" to=\"/:location?/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    // wait: true,\r\n    useSuspense: false,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}