{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_components/Spinner.tsx","_styles/LoginStyles.ts","_utils/Http.ts","_utils/SessionStrage.ts","login/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Authorize.tsx","_utils/useLoadData.ts","_components/MyLocation.tsx","_components/BaseTemplate.tsx","_utils/useSelectedDate.ts","_utils/MaterialTableIcons.tsx","_utils/UseDataTable.ts","_styles/VisitorTableStyle.ts","_styles/TableTheme.ts","_models/Room.ts","_utils/FetchPostData.ts","_components/ControllerTextField.tsx","_components/UserStatusIcon.tsx","_components/MyChip.tsx","_components/AddrBookAutoComplete.tsx","_components/MyDialog.tsx","_models/User.ts","_components/UserStatusIconNote.tsx","_components/MyTimePicker.tsx","_components/MyConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/ControllerDateTimePicker.tsx","main/ReservationNameField.tsx","main/LastUpdatedField.tsx","_models/PatternedRecurrence.ts","_components/MyCalendar.tsx","_components/MyCalendarNoKeyboad.tsx","main/DateTimePickerFields.tsx","main/RecurrenceInfo.tsx","main/RecurrenceFields.tsx","main/VisitCompanyInputFields.tsx","main/TeamsOnlineChip.tsx","main/RowDataInputDialog.tsx","_components/AddrBookUserDisplay.tsx","main/RowDataReadDialog.tsx","main/RecurrenceConfirmDialog.tsx","main/DataTableBase.tsx","main/EventTypeIcon.tsx","main/visitList/DataTable.tsx","main/HeaderActions.tsx","main/visitList/index.tsx","main/TimeBar.tsx","main/TimeBarRangeToggle.tsx","main/byRoom/DataTable.tsx","main/byRoom/DataTableWeekly.tsx","_components/MyTabContext.tsx","main/CategoryTabContext.tsx","main/RoomTabContext.tsx","main/byRoom/index.tsx","main/front/RowDataFrontDialog.tsx","main/front/DataTable.tsx","main/front/ExportCsvDialog.tsx","main/front/index.tsx","master/RowDataInputDialog.tsx","master/DataTableBase.tsx","master/DataTable.tsx","master/HeaderActions.tsx","_models/Role.ts","master/role/DataInputs.tsx","master/role/index.tsx","master/location/DataInputs.tsx","master/location/index.tsx","master/category/DataInputs.tsx","master/category/index.tsx","master/room/DataInputs.tsx","master/room/index.tsx","master/ResetCache.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["defaultPrimary","light","main","dark","contrastText","theme","createTheme","palette","primary","secondary","amber","typography","button","textTransform","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","zIndex","Spinner","classes","Backdrop","className","open","CircularProgress","makeLoginStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","ABORT_REQUEST_CONTROLLERS","Map","http","request","a","fetch","response","json","parsedBody","ok","console","error","body","Error","statusText","get","path","signalKey","undefined","args","method","signal","abortAndGetSignalSafe","Request","post","JSON","stringify","abortRequestSafe","key","reason","abort","newController","AbortController","set","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","reload_key","saveReloadState","item","value","states","parse","getItem","getReloadState","reloadFlg_key","getReloadStateFlg","removeReloadStateFlg","removeItem","removeSessionStrage","SignIn","t","useTranslation","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","log","Container","component","maxWidth","Avatar","LockOutlined","process","Button","onClick","fullWidth","Box","mt","Alert","elevation","mySnackberReducer","state","action","type","severity","message","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","Provider","AuthorizeWrapper","Authorize","snackberContext","useContext","errMsg","setErrMsg","useEffect","sendAuthCode","search","first","topPage","setTimeout","replace","history","back","useLoadData","initUrl","initialData","setUrl","data","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","MyLocation","locations","useHistory","selected","setSelected","length","FormControl","size","Select","style","onChange","event","target","push","map","MenuItem","name","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","link","textDecoration","nested","paddingLeft","SessionStrageContext","BaseTemplate","adminMode","frontMode","menuOpen","setOpen","settingsOpen","setSettingsOpen","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","initialState","signedIn","email","isAdmin","isFront","contactAddr","userStorage","checkAuth","conditionalChildren","AppBar","clsx","Toolbar","IconButton","edge","noWrap","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","Drawer","Divider","List","to","ListItem","Tooltip","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","pt","useSelectedDate","selectedDate","setSelectedDate","weekly","setWeekly","count","setCount","getTime","toString","date","addDays","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","pageingOntions","paging","pageSize","pageSizeOptions","UseDataTable","dataDialogHook","currentRow","setCurrentRow","handleDialogOpen","selectedRow","isAuthor","seriesMasterId","handleRecConfClose","isCancel","master","frontCellPadding","makeVisitorTableStyles","cellPadding","cellApptTime","cellRoomName","cellTeaSupply","cellRoomStatus","cellReservationName","cellVisitCompany","cellSubject","cellContactAddr","cellCheckIn","overflowWrap","cellCheckOut","cellComment","declinedApptTime","declinedRoomName","wordBreak","border","i18next","cellStyle","field","rowData","charAt","toUpperCase","slice","roomStatus","tableTheme","grey","MuiTableRow","MuiTable","borderCollapse","makeTableDialogStyle","list","borderTop","boxSizing","flexBasis","borderLeft","borderBottom","borderRight","fieldSlim","bottomLine","nameOfRoomType","nameOfUsageRangeForVisitor","nameOfUsageRange","fetchPostData","formData","Promise","resolve","reject","ControllerTextField","control","label","required","selectList","multiline","disabled","validation","errors","rules","render","TextField","select","helperText","option","index","iconFontSize","UserStatusIcon","status","useTheme","text","warning","success","MyChip","other","Chip","icon","address","createFilter","createFilterOptions","AddrBookAutoComplete","filter","setFilter","addressbook","addrLoding","addrError","loading","setLoading","onChangeHandle","Autocomplete","multiple","limitTags","onOpen","options","filterOptions","filtered","inputValue","noOptionsText","getOptionLabel","renderTags","tagValue","getTagProps","filterSelectedOptions","getOptionSelected","renderInput","InputProps","endAdornment","ev","_","closeButton","right","top","MyDialog","Dialog","DialogTitle","DialogContent","dividers","DialogActions","nameOfUserStatus","UserStatusIconNote","kebabCase","timerSelectRoot","timerSelect","colon","change5MinuteIntervals","Math","ceil","calcStartTime","start","addMinutes","calcEndTimeFromStartTime","startTimeBufferMinute","startOfDay","getMonth","getDate","hoursList","Array","i","minutesList","MyTimePicker","Grid","getHours","e","Number","getMinutes","inputProps","MyConfirmDialog","DialogContentText","autoFocus","roomComment","lineHeight","RoomInputFields","setValue","getValues","clearErrors","rooms","roomsLoading","roomsError","roomsReload","roomId","disabledVisitor","disabledRoom","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","shouldDirty","disabledTeaMember","setDisabledTeaMember","teaWatch","setRoomComment","comment","getNestedError","px","InputAdornment","validate","xs","sm","FormControlLabel","Switch","checked","opacity","min","textAlign","useRowDataDialogStyles","strRoomStatus","RoomReadFields","hiddenTeaSupply","disablePadding","roomName","numberOfTeaSupply","teaDetails","ControllerDateTimePicker","handleDateTimeChange","DateTimePicker","ampm","format","disablePast","minutesStep","ReservationNameField","flexWrap","verticalAlign","LastUpdatedField","datetime","muiPickContext","MuiPickersContext","locale","nameOfRecurrencePatternType","nameOfDayOfWeek","nameOfWeekIndex","nameOfRecurrenceRangeType","keyboardDatePicker","MyCalendar","showTodayButton","KeyboardButtonProps","autoComplete","invalidDateMessage","FormHelperText","minDateMessage","maxDateMessage","datePicker","MyCalendarNoKeyboad","DatePicker","time","timeBetween","DateTimePickerFields","end","onDateChange","onStartChange","onEndChange","RecurrenceInfo","recurrence","daysOfWeek","pattern","week","join","dayOfMonth","month","patternType","detail","num","interval","every","apptTime","range","startDate","endDate","inputInterval","inputDayOfMonth","initCheckBoxWeek","reduce","newObj","getDefaultValues","startTime","endTime","checkBoxWeek","cloneDeep","getDay","addMonths","numberOfOccurrences","defaultInputError","RecurrenceFields","activeRoomSelect","activeSearchButton","confOpen","setConfOpen","inputValues","setInputValues","defaultValues","handleOpen","handleConfirmOk","iCalUId","checkInstances","isIncludesException","handleOk","errorMsg","newEndDate","addYears","Object","keys","strDate","handleCancel","patternTypeList","dayOfWeekList","weekIndexList","monthList","WeekCheckBox","useMemo","FormGroup","row","Checkbox","values","WeekSelectBox","IndexSelectBox","DayOfMonthText","max","MonthSelectBox","startIcon","renderToString","minRows","py","md","p","AlertTitle","VisitCompanyInputFields","remove","visitCompany","rep","TeamsOnlineChip","formAction","note","usageGuide","inputformTheme","MuiOutlinedInput","adornedEnd","ADD_ROOM_KEY","FETCH_ROOMS_SELECT","usage","usageRange","mode","subject","visitorId","numberOfVisitor","numberOfEmployee","mailto","authors","optional","resourcies","roomForEdit","reservationInfo","withTeams","cloneDeepWithoutFalse","obj","withoutFalse","transform","isObject","isEmpty","RowDataInputDialog","addDefault","sessionStrageContext","delConfOpen","setDelConfOpen","useForm","reValidateMode","handleSubmit","reset","trigger","setError","formState","isDirty","isSubmitting","dirtyFields","startDateTime","endDateTime","hiddenRooms","setHiddenRooms","usageRangeWatch","defaultRoomsUrl","buildRoomsUrl","setDisabledVisitor","startTimeWatch","endTimeWatch","useFieldArray","visitCompanyFields","fields","visitCompanyAppend","append","visitCompanyRemove","visitCompanyWatch","onSubmit","inputs","r","handleSearch","handleStartTimeChange","handleEndTimeChange","removeVisitorCompany","ThemeProvider","isMSMultipleLocations","reservationName","reservationStatus","pb","isChangedByRooms","lastUpdated","deleteOk","eventType","AddrBookUserDisplay","propsKey","RowDataReadDialog","isAttendees","gutterBottom","co","RecurrenceConfirmDialog","answer","setAnswer","handleOkClose","handleCancelClose","RadioGroup","Radio","dataDialogReducer","inputOpen","readOpen","recConfOpen","DataTableBase","onRecConfClose","handleInputDialogClose","handleReadDialogClose","EventTypeIcon","visitCompanies","DataTable","currentDate","columns","customSort","b","components","Cell","columnDef","onRowClick","showTitle","headerStyle","tableLayout","icons","arrowLeft","arrowRight","arrowIcon","HeaderActions","subtitle","onDatePrev","onDateNext","actionButtons","VisitList","createdOnly","setCreatedOnly","handleDateChange","handleDatePrev","handleDateNext","dataDialogState","dataDialogDispatch","Paper","square","shortStyle","halfWidth","scale","x","y","longStyle","fontHeight","timeToPoint","boxStyle","zero","differenceInMinutes","getBoxData","x2","isSameDay","startOfCurrent","endOfCurrent","endOfDay","isBefore","isAfter","calcX","hour","createTransform","HtmlTooltip","withStyles","pxToRem","strokeWidth","stroke","fill","dominantBaseline","cursor","fillOpacity","info","strokeDasharray","strokeOpacity","TimeBar","rangeToggle","schedule","events","lrooms","onClickCallback","keyLabel","keyValue","onTitleClick","setBoxStyle","setTransform","rectY","rectHeight","viewHeightDup","scheduleItems","createScheduleBox","timestamp","rowIndex","boxData","rx","ry","createEventBox","cleaningTime","myEvent","viewBox","createLroomsBox","rectSchedules","rectEvents","rectLrooms","categoryId","viewWidth","preserveAspectRatio","x1","y1","y2","$","minX","fontX","svg","closest","createSVGPoint","clientX","clientY","ctm","getScreenCTM","$time","point","pointToTime","matrixTransform","inverse","floor","handleCreateClick","RangeToggleGroup","ToggleButtonGroup","RangeToggle","ToggleButton","TimeBarRangeToggle","onChangeRangeToggle","justify","exclusive","tabKey","timeBars","schedules","sIdx","eventsIndex","eventIndex","lroomsIndex","roomEmail","DataTableWeekly","MyTabContext","tabPanelContent","activateTab","setActivateTab","tabValue","setTabValue","handleTabChange","newValue","tabList","TabList","indicatorColor","textColor","Tab","tabPanels","TabPanel","cloneElement","TabContext","CategoryTabContext","RoomTabContext","byRoomReducer","changeTab","titleLabel","subtitleLabel","ByRoom","byRoomState","byRoomDispatch","setRangeToggle","handleRangeToggleChange","_categoryId","_roomId","checkAction","RowDataFrontDialog","frontClasses","register","checkIn","checkOut","visitorCardNumber","frontDialogOpen","setFrontDialogOpen","fronCurrentRow","setFronCurrentRow","handleFrontDialogClose","split","strNumOfTeaSupply","strNumOfVisitor","strNumOfEmployee","aRoomId","bRoomId","handleFrontDialogOpen","actions","localization","header","between","nameOfCsvHeaders","ExportCsvDialog","csvLinkRef","useRef","csvData","setCsvData","filename","setFilename","addWeeks","handleExportCsv","headers","apptDate","apptStartTime","apptEndTime","reservationDepEn","department","reservationDepJa","officeLocation","current","click","handleStartDateChange","Front","exportCsvOpen","setExportCsvOpen","csvButton","inputFields","methods","actionButtonArea","nameOfRoleType","DataInputs","useFormContext","RoleSettings","members","LocationSettings","sort","isLimitedPublic","showMembers","setShowMembers","CategorySettings","limitedPublic","disabledByRoom","Accordion","boxShadow","expanded","MuiAccordion","AccordionSummary","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","categories","typeWatch","outside","inside","noReservationsWatch","category","expandIcon","reservationPeriod","RoomSettings","fieldTeaSupply","sorting","find","noReservations","cleaningOption","onlyDuringWorkHours","displayLivenessRooms","ResetCache","handleExecClick","confirm","alert","Routes","exact","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.825dd7c1.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\n// export const defaultPrimary = purple;\r\nexport const defaultPrimary = {\r\n  light: '#336bbd',\r\n  main: '#0046AD',\r\n  dark: '#003179',\r\n  contrastText: '#fff',\r\n};\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: defaultPrimary,\r\n    secondary: amber,\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version 2.0.0 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","export type PostDataResult<T, U> = {\r\n  success: boolean;\r\n  value?: U;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\ntype ServerErrorType = { body: string };\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T & ServerErrorType;\r\n}\r\n\r\nconst ABORT_REQUEST_CONTROLLERS = new Map();\r\n\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    console.error('Server Error: ', response.parsedBody?.body);\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(\r\n  path: string,\r\n  signalKey: string | undefined = undefined,\r\n  args: RequestInit = { method: 'get', signal: !!signalKey ? abortAndGetSignalSafe(signalKey) : null }\r\n): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport function abortRequestSafe(key: string, reason = 'CANCELLED') {\r\n  ABORT_REQUEST_CONTROLLERS.get(key)?.abort?.(reason);\r\n}\r\n\r\nfunction abortAndGetSignalSafe(key: string) {\r\n  abortRequestSafe(key); // abort previous request, if any\r\n  const newController = new AbortController();\r\n  ABORT_REQUEST_CONTROLLERS.set(key, newController);\r\n  return newController.signal;\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n/**\r\n * reload用stage情報を格納します\r\n */\r\nconst reload_key = 'liveness-visitor-reload';\r\nexport const initReloadState = () => {\r\n  sessionStorage.setItem(reload_key, `{}`);\r\n};\r\nexport const saveReloadState = (item: string, value: string) => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  states[item] = value;\r\n  sessionStorage.setItem(reload_key, JSON.stringify(states));\r\n};\r\nexport const getReloadState = (item: string): string => {\r\n  const states = JSON.parse(sessionStorage.getItem(reload_key)!);\r\n  return states[item];\r\n};\r\nexport const removeReloadState = () => {\r\n  sessionStorage.removeItem(reload_key);\r\n};\r\n/**\r\n * reload用stageを保持するか否かのフラグ\r\n */\r\nconst reloadFlg_key = 'liveness-visitor-reload-flg';\r\nexport const setReloadStateFlg = () => {\r\n  sessionStorage.setItem(reloadFlg_key, '1');\r\n};\r\nexport const getReloadStateFlg = () => {\r\n  return sessionStorage.getItem(reloadFlg_key);\r\n};\r\nexport const removeReloadStateFlg = () => {\r\n  sessionStorage.removeItem(reloadFlg_key);\r\n};\r\n/**\r\n * SessionStrageの一括削除\r\n */\r\nexport const removeSessionStrage = () => {\r\n  removeUserInfo();\r\n  removeReloadState();\r\n  removeReloadStateFlg();\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoding(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {process.env.REACT_APP_SYSTEM_NAME}\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n  topPage: string | undefined;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  // スピナーの状態\r\n  const [errMsg, setErrMsg] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') });\r\n          }\r\n          // ロケーションを取得\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              // throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          // urlを設定\r\n          let url = `/${location}/main`;\r\n          if (result.parsedBody && result.parsedBody.topPage) {\r\n            url = `${url}/${result.parsedBody.topPage}`;\r\n          }\r\n\r\n          // ロケーション設定が未だの場合\r\n          if (location === 'undefined') {\r\n            url = '/settings/location';\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(url);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoding(false);\r\n        setErrMsg(true);\r\n        setTimeout(() => {\r\n          window.history.back();\r\n        }, 5000);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {process.env.REACT_APP_SYSTEM_NAME}\r\n        </Typography>\r\n      </div>\r\n      {errMsg && (\r\n        <Box mt={3}>\r\n          <Alert severity=\"error\">\r\n            {t('common.msg.login-failed')}\r\n            <br />\r\n            {t('common.msg.too_many_requests')}\r\n            <br />\r\n            {t('common.msg.back_login')}\r\n          </Alert>\r\n        </Box>\r\n      )}\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @param signalKey fetchキャンセル用の一意キー。指定がない場合は通常処理\r\n * @returns\r\n */\r\nexport function useLoadData<T>(initUrl: string, initialData: T | undefined, signalKey?: string) {\r\n  //URLの状態\r\n  const [url, setUrl] = useState(initUrl);\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // ローディング解除\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, [data]);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    if (!url) return; // urlがない場合は処理しない\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url, signalKey);\r\n      // console.log(url); // TODO: debug\r\n      // console.log('get', result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    // setIsLoading(false);// useEffectによる制御に変更\r\n  }, [url, signalKey]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload, setUrl] as const;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setSelected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getReloadStateFlg, getUserInfo, initReloadState, removeSessionStrage, saveUserInfo, setReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { MySnackberProvider } from './MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 230;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n    nested: {\r\n      // paddingLeft: theme.spacing(4),\r\n      paddingLeft: theme.spacing(10),\r\n    },\r\n  });\r\n});\r\n\r\ntype UserStorageState = { signedIn: boolean } & User;\r\ntype UserStorageAction = { type: 'signedIn'; user: User } | { type: 'signedOut' };\r\n\r\nexport type SessionStrageContextType = {\r\n  userStorage: UserStorageState;\r\n  dispatch: React.Dispatch<UserStorageAction>;\r\n};\r\n\r\nexport const SessionStrageContext = createContext({} as SessionStrageContextType);\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  adminMode?: true;\r\n  frontMode?: true;\r\n  menuOpen?: true;\r\n};\r\n\r\nconst BaseTemplate = ({ children, adminMode, frontMode, menuOpen }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(menuOpen ? true : false);\r\n\r\n  // 左メニュー：設定の詳細開閉\r\n  const [settingsOpen, setSettingsOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setSettingsOpen(false);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n    }\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ログアウトアクション\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeSessionStrage(); //sessionStrageから情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // ストレージの状態初期値\r\n  const initialState: UserStorageState = {\r\n    signedIn: false,\r\n    email: '',\r\n    name: '',\r\n    isAdmin: false,\r\n    isFront: false,\r\n    contactAddr: undefined,\r\n  };\r\n  // ストレージの状態設定\r\n  const userStorageReducer = (state: UserStorageState, action: UserStorageAction) => {\r\n    switch (action.type) {\r\n      case 'signedIn':\r\n        return {\r\n          signedIn: true,\r\n          email: action.user.email,\r\n          name: action.user.name,\r\n          isAdmin: action.user.isAdmin,\r\n          isFront: action.user.isFront,\r\n          contactAddr: action.user.contactAddr,\r\n        };\r\n      case 'signedOut':\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  // ストレージの状態管理\r\n  const [userStorage, dispatch] = useReducer(userStorageReducer, initialState);\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        dispatch({ type: 'signedIn', user: user });\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          dispatch({ type: 'signedIn', user: user });\r\n        } else {\r\n          removeSessionStrage();\r\n          dispatch({ type: 'signedOut' });\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeSessionStrage();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    setReloadStateFlg(); // リフレッシュ後にstateを復元できるようフラグをONにする\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの初期化\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) initReloadState();\r\n  }, []);\r\n  // ================================\r\n\r\n  // 権限制御をつけてchildrenを表示する\r\n  let conditionalChildren = children;\r\n  const error = <>{t('common.msg.authority-error')}</>;\r\n  if (adminMode && !userStorage.isAdmin) {\r\n    conditionalChildren = error; // 管理者Roleエラー\r\n  }\r\n  if (frontMode && !userStorage.isFront) {\r\n    conditionalChildren = error; // フロントRoleエラー\r\n  }\r\n\r\n  if (!userStorage.signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <SessionStrageContext.Provider value={{ userStorage, dispatch }}>\r\n      <MySnackberProvider>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n            <Toolbar className={classes.toolbar}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                {process.env.REACT_APP_SYSTEM_NAME}\r\n              </Typography>\r\n              <div>\r\n                <MyLocation></MyLocation>\r\n              </div>\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleAccountMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={accountIconOpen}\r\n                  onClose={handleMenuClose}\r\n                >\r\n                  <MenuItem onClick={handleMenuClose}>{userStorage.email}</MenuItem>\r\n                  <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n            }}\r\n            open={open}\r\n          >\r\n            <div className={classes.drawerCloseIcon}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                    <ListItemIcon>\r\n                      <FaceIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.created-visit-info')} />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                    <ListItemIcon>\r\n                      <MeetingRoomIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n                </ListItem>\r\n              </Link>\r\n              {userStorage.isFront && (\r\n                <Link to={`/${match.params.location}/front`} className={classes.link}>\r\n                  <ListItem button>\r\n                    <Tooltip title={t('main.menu.front') as string}>\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                    </Tooltip>\r\n                    <ListItemText primary={t('main.menu.front')} />\r\n                  </ListItem>\r\n                </Link>\r\n              )}\r\n              {userStorage.isAdmin && (\r\n                <>\r\n                  <ListItem button onClick={handleSettingsClick}>\r\n                    <ListItemIcon>\r\n                      <SettingsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={t('main.menu.settings')} />\r\n                    {settingsOpen ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItem>\r\n                  <Collapse in={settingsOpen} timeout=\"auto\" unmountOnExit>\r\n                    <Link to={`/${match.params.location}/settings/role`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.role')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/location`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.location')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/category`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.category')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/room`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.room')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                    <Link to={`/${match.params.location}/settings/resetcache`} className={classes.link}>\r\n                      <ListItem button className={classes.nested}>\r\n                        <ListItemText primary={t('main.menu.settings.reset-cache')} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  </Collapse>\r\n                </>\r\n              )}\r\n              <ListItem button onClick={refreshPage}>\r\n                <Tooltip title={t('main.menu.refresh') as string}>\r\n                  <ListItemIcon>\r\n                    <RefreshIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.refresh')} />\r\n              </ListItem>\r\n            </List>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n              {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n              {conditionalChildren}\r\n              <Box pt={4}>\r\n                <Copyright />\r\n              </Box>\r\n            </Container>\r\n          </main>\r\n        </div>\r\n      </MySnackberProvider>\r\n    </SessionStrageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { addDays } from 'date-fns';\r\nimport { useEffect, useState } from 'react';\r\nimport { getReloadStateFlg, saveReloadState } from './SessionStrage';\r\n\r\n/**\r\n * カレンダー選択用カスタムフック\r\n */\r\nexport function useSelectedDate() {\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  // 矢印カウンターの状態\r\n  const [weekly, setWeekly] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('selectedDate', selectedDate!.getTime().toString());\r\n    }\r\n  }, [selectedDate]);\r\n  // ================================\r\n\r\n  useEffect(() => {\r\n    if (weekly) {\r\n      setCount(7);\r\n    } else {\r\n      setCount(1);\r\n    }\r\n  }, [weekly]);\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    if (!date) return;\r\n    setSelectedDate(date);\r\n  };\r\n  const handleDatePrev = () => {\r\n    setSelectedDate((date) => (!!date ? addDays(date!, count * -1) : date));\r\n  };\r\n  const handleDateNext = () => {\r\n    setSelectedDate((date) => (!!date ? addDays(date!, count) : date));\r\n  };\r\n\r\n  return [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext, setWeekly] as const;\r\n}\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n/**\r\n * ページ設定共通用\r\n */\r\nexport const pageingOntions = {\r\n  paging: true,\r\n  pageSize: 10, // make initial page size\r\n  // emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n  pageSizeOptions: [5, 10, 20, 50], // rows selection options\r\n};\r\n","import { useCallback, useState } from 'react';\r\n\r\nimport { DataDialogAction, DataDialogState, RowDataType } from '../main/DataTableBase';\r\n\r\ntype DataTableProps = {\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function UseDataTable<T extends RowDataType>(props: DataTableProps) {\r\n  const { dataDialogHook } = props;\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<T | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: T) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      if (!!selectedRow.seriesMasterId) {\r\n        // 定期イベントの場合は先に確認ダイアログを表示\r\n        dataDialogHook.dispatch({ type: 'recConfOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // 定期イベント確認メッセージを閉じる\r\n  const handleRecConfClose = useCallback(\r\n    (isCancel: boolean, master?: T) => {\r\n      if (isCancel) {\r\n        dataDialogHook.dispatch({ type: 'recConfCancel' });\r\n        return;\r\n      }\r\n      if (master) {\r\n        setCurrentRow(master);\r\n      }\r\n      dataDialogHook.dispatch({ type: 'recConfClose' });\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  return [{ currentRow }, setCurrentRow, handleDialogOpen, handleRecConfClose] as const;\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\nimport { FrontRowData } from 'main/front/DataTable';\r\nimport { RowDataType } from 'main/DataTableBase';\r\n\r\nexport const frontCellPadding = '12px 6px';\r\n\r\nexport const makeVisitorTableStyles = (isFront: boolean) => {\r\n  const cellPadding = isFront ? frontCellPadding : '';\r\n  return makeStyles(() => ({\r\n    cellApptTime: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellTeaSupply: {\r\n      padding: cellPadding,\r\n    },\r\n    cellRoomStatus: {\r\n      padding: cellPadding,\r\n    },\r\n    cellReservationName: {\r\n      padding: cellPadding,\r\n    },\r\n    cellVisitCompany: {\r\n      padding: cellPadding,\r\n    },\r\n    cellSubject: {\r\n      padding: cellPadding,\r\n    },\r\n    cellContactAddr: {\r\n      padding: cellPadding,\r\n    },\r\n    cellCheckIn: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellCheckOut: {\r\n      padding: cellPadding,\r\n      // textAlign: 'center',\r\n      overflowWrap: 'break-word',\r\n    },\r\n    cellComment: {\r\n      padding: cellPadding,\r\n    },\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  }));\r\n};\r\n\r\nexport const cellStyle = (field: String, rowData: RowDataType | FrontRowData, classes: ClassNameMap<string>) => {\r\n  const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n  return clsx(\r\n    classes[`cell${className}` as keyof ClassNameMap],\r\n    rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n  );\r\n};\r\n","import { createTheme, makeStyles } from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { defaultPrimary } from './Theme';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const makeTableDialogStyle = () => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n  return makeStyles((tableTheme) => ({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child > div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    fieldSlim: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.2em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    bottomLine: {\r\n      borderBottom: border,\r\n    },\r\n  }));\r\n};\r\n","export const nameOfRoomType = ['rooms', 'free'] as const;\r\nexport type RoomType = (typeof nameOfRoomType)[number];\r\n\r\nexport const nameOfUsageRangeForVisitor = ['outside', 'inside'] as const;\r\nexport type UsageRangeForVisitor = (typeof nameOfUsageRangeForVisitor)[number];\r\nexport const nameOfUsageRange = ['none', ...nameOfUsageRangeForVisitor] as const;\r\nexport type UsageRange = (typeof nameOfUsageRange)[number];\r\n\r\nexport type Room = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  sort: string;\r\n  usageRange: UsageRange;\r\n  type: RoomType;\r\n  teaSupply: { outside: boolean; inside: boolean };\r\n  comment: string;\r\n  cleaningOption: boolean;\r\n  noReservations?: boolean; // add ver.1.4.0\r\n  reservationPeriod?: number; // add ver.1.0.6\r\n  onlyDuringWorkHours?: boolean; // add ver.1.3.0\r\n  displayLivenessRooms?: boolean; // add ver.1.3.0\r\n  location: string;\r\n  category: string;\r\n};\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T, U> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<U>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T, U, P>(url: string, formData: FormDataType<T, U>) {\r\n  let response: HttpResponse<PostDataResult<T, P>>;\r\n  try {\r\n    // console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T, P>>(url, formData);\r\n    // console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path, RegisterOptions } from 'react-hook-form';\r\n\r\ntype ControllerTextFieldProps<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  required?: true | boolean;\r\n  validation?: RegisterOptions;\r\n  multiline?: true | boolean;\r\n  disabled?: true | boolean;\r\n  selectList?: SelectOption[];\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n};\r\nexport type SelectOption = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nexport function ControllerTextField<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: ControllerTextFieldProps<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, required, selectList, multiline, disabled, validation, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const rules: RegisterOptions = { required: required ? (t('common.form.required') as string) : false, ...validation };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          disabled={disabled}\r\n          multiline={multiline}\r\n          select={!!selectList}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        >\r\n          {!!selectList &&\r\n            selectList.map((option, index) => (\r\n              <MenuItem key={`${name}-${index}`} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTheme } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype UserStatusIconProps = {\r\n  status: UserStatus;\r\n};\r\n\r\nconst iconFontSize = '1.3em';\r\n\r\nexport const UserStatusIcon = (props: UserStatusIconProps) => {\r\n  const { status } = props;\r\n\r\n  const theme = useTheme();\r\n\r\n  // console.log('icon', status); //TODO:入力系の時重複レンダリングが発生。要調査\r\n\r\n  if (status === 'none') {\r\n    return <HelpOutlineIcon style={{ color: theme.palette.text.secondary, fontSize: iconFontSize }} />;\r\n  } else if (status === 'tentativelyAccepted') {\r\n    return <DoneIcon style={{ color: theme.palette.warning.main, fontSize: iconFontSize }} />;\r\n  } else if (status === 'accepted') {\r\n    return <DoneIcon style={{ color: theme.palette.success.main, fontSize: iconFontSize }} />;\r\n  } else {\r\n    return <CloseIcon style={{ color: theme.palette.error.main, fontSize: iconFontSize }} />;\r\n  }\r\n};\r\n","import { Chip } from '@material-ui/core';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\ntype MyChipProps = {\r\n  option: EmailAddress;\r\n  [x: string]: any;\r\n};\r\n\r\nexport const MyChip = (props: MyChipProps) => {\r\n  const { option, ...other } = props;\r\n\r\n  return (\r\n    <Chip\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      icon={!!option.status ? UserStatusIcon({ status: option.status }) : undefined}\r\n      label={option.name}\r\n      title={option.address}\r\n      style={{ fontSize: '0.9em' }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path } from 'react-hook-form';\r\n\r\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab';\r\nimport { CircularProgress, TextField } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyChip } from './MyChip';\r\n\r\nconst createFilter = createFilterOptions<EmailAddress>();\r\n\r\ntype AddrBookAutoCompleteType<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n};\r\n\r\nexport function AddrBookAutoComplete<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: AddrBookAutoCompleteType<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, errors, disabled, style } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: addrLoding, isError: addrError }, , setUrl] = useLoadData<EmailAddress[]>('', []);\r\n  useEffect(() => {\r\n    if (!!filter) {\r\n      setUrl(`/user/addressbook?filter=${filter}`);\r\n    } else {\r\n      setUrl(``);\r\n    }\r\n  }, [filter, setUrl]);\r\n\r\n  // アドレス帳検索のローディング状態\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (addrLoding && !addrError) {\r\n      setLoading(true);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [addrError, addrLoding]);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    if (value.length > 2) setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          style={style}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={!!addressbook && !!filter ? addressbook : []}\r\n          filterOptions={(options, params) => {\r\n            const filtered = createFilter(options, params) as EmailAddress[];\r\n            if (params.inputValue !== '') {\r\n              filtered.push({\r\n                name: params.inputValue,\r\n                address: params.inputValue,\r\n              });\r\n            }\r\n            return filtered;\r\n          }}\r\n          noOptionsText={t('auto-complete.no-options-text')}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) => tagValue.map((option, index) => <MyChip option={option} {...getTagProps({ index })} />)}\r\n          filterSelectedOptions\r\n          getOptionSelected={(option, value) => option.address === value.address}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={label}\r\n              error={!!errors[name]}\r\n              helperText={errors[name] && (errors[name] as FieldError).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, makeStyles, createStyles, IconButton } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1.5),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(0.75),\r\n      top: theme.spacing(0.75),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype MyDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MyDialog(props: MyDialogProps) {\r\n  const { open, onClose, title, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const handleCancel = (_event: MouseEventHandler, reason: string) => {\r\n    if (reason && reason === 'backdropClick') return;\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleCancel} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.root}>\r\n          {title}\r\n          <IconButton className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions style={{ display: 'none' }}>\r\n          <Button onClick={onClose}>{t('common.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","export type User = {\r\n  email: string;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  isFront: boolean;\r\n  contactAddr: string | undefined; // 予約入力画面の連絡先デフォルト値（任意）\r\n};\r\n\r\nexport const nameOfUserStatus = ['none', 'tentativelyAccepted', 'accepted', 'declined'] as const;\r\nexport type UserStatus = typeof nameOfUserStatus[number];\r\n\r\nexport type EmailAddress = {\r\n  name: string;\r\n  address: string;\r\n  status?: UserStatus;\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Chip } from '@material-ui/core';\r\nimport _ from 'lodash';\r\n\r\nimport { nameOfUserStatus } from '_models/User';\r\nimport { UserStatusIcon } from './UserStatusIcon';\r\n\r\nexport const UserStatusIconNote = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {nameOfUserStatus.map((status, index) => (\r\n        <Chip\r\n          key={index}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          icon={UserStatusIcon({ status: status })}\r\n          label={t(`visitdialog.notes.user-status-${_.kebabCase(status)}`)}\r\n          style={{ fontSize: '0.9em', marginLeft: '5px', border: 'none' }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { Grid, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport { addMinutes, startOfDay } from 'date-fns';\r\n\r\nconst useStyles = makeStyles({\r\n  timerSelectRoot: {\r\n    '& svg': { display: 'none' },\r\n  },\r\n  timerSelect: {\r\n    paddingRight: '15px !important',\r\n  },\r\n  colon: { margin: 'auto 3px' },\r\n});\r\n\r\nexport const startTimeBufferMinute = 0;\r\nexport const endTimeBufferMinute = 30; //TODO: Interval config化？\r\nexport const change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\nexport const calcStartTime = (start: Date) => addMinutes(change5MinuteIntervals(start), startTimeBufferMinute);\r\nexport const calcEndTimeFromStartTime = (start: Date) => {\r\n  let result = addMinutes(change5MinuteIntervals(start), startTimeBufferMinute + endTimeBufferMinute);\r\n  if (startOfDay(start).getTime() !== startOfDay(result).getTime()) {\r\n    // endTimeBufferMinuteを加算して日を跨ぐ状態なら強制的に23:55にする\r\n    result = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 55); //TODO: Interval config化？\r\n  }\r\n  return result;\r\n};\r\n\r\nconst hoursList = [...Array(24)]\r\n  .map((_, i) => i)\r\n  .map((value) => {\r\n    return { label: value, value: value };\r\n  });\r\n\r\nconst minutesList = [...Array(12)]\r\n  .map((_, i) => i * 5)\r\n  .map((value) => {\r\n    return { label: value, value: value };\r\n  });\r\n\r\ntype MyTimePickerProps = {\r\n  selected: Date;\r\n  onChange: (date: Date) => void;\r\n  disabled: boolean | undefined;\r\n  error: boolean;\r\n};\r\n\r\nfunction MyTimePicker(props: MyTimePickerProps) {\r\n  const { selected, onChange, disabled, error } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item>\r\n        <TextField\r\n          className={classes.timerSelectRoot}\r\n          select\r\n          disabled={disabled}\r\n          value={selected.getHours()}\r\n          onChange={(e) => {\r\n            onChange(new Date(selected.getFullYear(), selected.getMonth(), selected.getDate(), Number(e.target.value), selected.getMinutes()));\r\n          }}\r\n          inputProps={{ className: classes.timerSelect }}\r\n          error={error}\r\n        >\r\n          {hoursList.map((option, index) => (\r\n            <MenuItem key={`hour-${index}`} value={option.value}>\r\n              {('00' + Number(option.label)).slice(-2)}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item className={classes.colon}>\r\n        :\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          className={classes.timerSelectRoot}\r\n          select\r\n          disabled={disabled}\r\n          value={selected.getMinutes()}\r\n          onChange={(e) => {\r\n            onChange(new Date(selected.getFullYear(), selected.getMonth(), selected.getDate(), selected.getHours(), Number(e.target.value)));\r\n          }}\r\n          inputProps={{ className: classes.timerSelect }}\r\n          error={error}\r\n        >\r\n          {!disabled &&\r\n            minutesList.map((option, index) => (\r\n              <MenuItem key={`minute-${index}`} value={option.value}>\r\n                {('00' + Number(option.label)).slice(-2)}\r\n              </MenuItem>\r\n            ))}\r\n          {!!disabled && (\r\n            <MenuItem key={`minute-disabled`} value={selected.getMinutes()}>\r\n              {('00' + Number(selected.getMinutes())).slice(-2)}\r\n            </MenuItem>\r\n          )}\r\n        </TextField>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MyTimePicker;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype MyConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (ok: boolean) => void;\r\n  title?: string;\r\n  message: string | React.ReactNode;\r\n  color?: 'inherit' | 'default' | 'primary' | 'secondary';\r\n};\r\n\r\nexport function MyConfirmDialog(props: MyConfirmDialogPorps) {\r\n  const { open, onClose, title, message, color } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {!!title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{message}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color={color}>\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color={color} autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Control,\r\n  Controller,\r\n  DeepMap,\r\n  DeepPartial,\r\n  FieldError,\r\n  UseFormClearErrors,\r\n  UseFormGetValues,\r\n  UseFormSetValue,\r\n  useWatch,\r\n} from 'react-hook-form';\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\nconst useStyles = makeStyles({\r\n  roomComment: {\r\n    whiteSpace: 'pre-line',\r\n    fontSize: '0.75rem',\r\n    lineHeight: '1rem',\r\n    padding: '0 5px 5px 5px',\r\n  },\r\n});\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  clearErrors: UseFormClearErrors<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomsLoading: boolean;\r\n  roomsError: boolean;\r\n  roomsReload: () => void;\r\n  roomId: string;\r\n  disabledVisitor: boolean;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, getValues, clearErrors, rooms, roomsLoading, roomsError, roomsReload, roomId, disabledVisitor, disabledRoom, errors } =\r\n    props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply[getValues('usageRange')]);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [getValues, roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      clearErrors([`resourcies.${roomId}.numberOfTeaSupply`, `resourcies.${roomId}.teaDetails`]);\r\n      setValue(`resourcies.${roomId}.numberOfTeaSupply`, 0, { shouldDirty: true });\r\n      setValue(`resourcies.${roomId}.teaDetails`, '', { shouldDirty: true });\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId, clearErrors]);\r\n\r\n  //会議室の説明文\r\n  const [roomComment, setRoomComment] = useState('');\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const room = rooms.filter((room) => room.id === roomWatch && !!room.comment)[0];\r\n      const comment = !!room ? room.comment : '';\r\n      setRoomComment(comment);\r\n    } else {\r\n      setRoomComment('');\r\n    }\r\n  }, [roomWatch, rooms]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (roomsLoading && roomsError) {\r\n    return (\r\n      <Box px={2}>\r\n        <TextField\r\n          label={t(`visittable.header.room-name`)}\r\n          value={t('common.msg.fetch-failed')}\r\n          disabled\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Button color=\"primary\" onClick={roomsReload}>\r\n                  retry\r\n                </Button>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (roomsLoading) {\r\n    return (\r\n      <Box px={2}>\r\n        <TextField\r\n          label={t(`visittable.header.room-name`)}\r\n          value={t('visitdialog.notes.loading-rooms')}\r\n          disabled\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CircularProgress color=\"inherit\" style={{ padding: 10 }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!roomsLoading && rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{\r\n          required: t('common.form.required') as string,\r\n          // 何らかの挙動で選択リストから消えた会議室を選択している場合のエラー処理\r\n          validate: (roomId) => (rooms!.some((room) => room.id === roomId) ? undefined : (t('visitdialog.form.error.room-not-covered') as string)),\r\n        }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <MenuItem key={option.id} value={option.id}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n      <Typography component=\"div\" className={classes.roomComment}>\r\n        {roomComment}\r\n      </Typography>\r\n\r\n      <Grid container spacing={1} style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item xs={5} sm={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2} sm={4} style={disabledVisitor ? { opacity: 0 } : undefined}></Grid>\r\n\r\n        <Grid item xs={5} sm={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfTeaSupply`}\r\n            control={control}\r\n            rules={{\r\n              required: t('common.form.required') as string,\r\n              validate: () =>\r\n                (getValues(`resourcies.${roomId}.teaSupply`) && getValues(`resourcies.${roomId}.numberOfTeaSupply`) > 0) ||\r\n                (!getValues(`resourcies.${roomId}.teaSupply`) && getValues(`resourcies.${roomId}.numberOfTeaSupply`) === 0) ||\r\n                (t('visitdialog.form.error.number-of-tea-supply') as string),\r\n            }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-tea-supply')}\r\n                error={!!getNestedError('numberOfTeaSupply')}\r\n                helperText={!!getNestedError('numberOfTeaSupply') && getNestedError('numberOfTeaSupply').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Controller\r\n          name={`resourcies.${roomId}.teaDetails`}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              style={disabledTeaMember ? { display: 'none' } : undefined}\r\n              multiline\r\n              {...field}\r\n              disabled={disabledTeaMember}\r\n              label={t('visittable.header.tea-details')}\r\n              error={!!getNestedError('teaDetails')}\r\n              helperText={!!getNestedError('teaDetails') && getNestedError('teaDetails').message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>{data.roomName}</div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                {data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}\r\n              </div>\r\n              <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                {t('visittable.header.number-of-tea-supply')}\r\n              </div>\r\n              <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                {data.numberOfTeaSupply}\r\n              </div>\r\n            </li>\r\n            {data.teaSupply && (\r\n              <li key=\"tea-details\" className={classes.list}>\r\n                <div className={classes.title}>{t('visittable.header.tea-details')}</div>\r\n                <div className={classes.field}>{data.teaDetails}</div>\r\n              </li>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { UserStatus } from '_models/User';\r\n\r\ntype ReservationNameFieldProps = {\r\n  name: string;\r\n  status: UserStatus;\r\n};\r\n\r\nfunction ReservationNameField(props: ReservationNameFieldProps) {\r\n  const { name, status } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {name}\r\n      {status === 'declined' && (\r\n        <div\r\n          style={{\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            color: 'red',\r\n            verticalAlign: 'bottom',\r\n            marginLeft: 15,\r\n            fontSize: '0.95em',\r\n          }}\r\n        >\r\n          <ErrorOutlineIcon fontSize=\"small\" style={{ marginRight: 3 }} />\r\n          {t('visitdialog.notes.reservation-status-declined')}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReservationNameField;\r\n","import { useContext } from 'react';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\n\r\ntype LastUpdatedFieldProps = {\r\n  datetime: number;\r\n};\r\n\r\nexport const LastUpdatedField = (props: LastUpdatedFieldProps) => {\r\n  const { datetime } = props;\r\n\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  return <>{format(datetime, 'yyyy/MM/dd HH:mm:ss', { locale: muiPickContext?.locale })}</>;\r\n};\r\n","export type PatternedRecurrence = {\r\n  pattern: RecurrencePattern & RecurrencePatternReadOnly;\r\n  range: RecurrenceRange & RecurrenceRangeReadOnly;\r\n};\r\n\r\nexport type PatternedRecurrenceInput = {\r\n  pattern: RecurrencePattern;\r\n  range: RecurrenceRange;\r\n  message?: string; // server側で返されるRecurrenceに関連するgraphAPIエラー\r\n};\r\n\r\nexport const nameOfRecurrencePatternType = ['daily', 'weekly', 'absoluteMonthly', 'relativeMonthly', 'absoluteYearly', 'relativeYearly'] as const;\r\nexport type RecurrencePatternType = typeof nameOfRecurrencePatternType[number];\r\n\r\nexport const nameOfDayOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'] as const;\r\nexport type DayOfWeek = typeof nameOfDayOfWeek[number];\r\n\r\nexport const nameOfWeekIndex = ['first', 'second', 'third', 'fourth', 'last'] as const;\r\nexport type WeekIndex = typeof nameOfWeekIndex[number];\r\n\r\nexport type RecurrencePattern = {\r\n  type: RecurrencePatternType;\r\n  interval: number;\r\n  daysOfWeek?: DayOfWeek[]; // weekly, relativeMonthly, relativeYearly\r\n  dayOfMonth?: number; // absoluteMonthly, absoluteYearly\r\n  index?: WeekIndex; // relativeMonthly, relativeYearly\r\n  month?: number; // absoluteYearly, relativeYearly\r\n};\r\ntype RecurrencePatternReadOnly = {\r\n  firstDayOfWeek?: DayOfWeek; //weekly\r\n};\r\n\r\n// export const nameOfRecurrenceRangeType = ['endDate', 'noEnd', 'numbered'] as const;//TODO: noEnd未対応（最大５年問題）\r\nexport const nameOfRecurrenceRangeType = ['endDate', 'numbered'] as const;\r\nexport type RecurrenceRangeType = typeof nameOfRecurrenceRangeType[number];\r\n\r\nexport type RecurrenceRange = {\r\n  type: RecurrenceRangeType;\r\n  startDate: string;\r\n  endDate?: string;\r\n  numberOfOccurrences?: number;\r\n};\r\ntype RecurrenceRangeReadOnly = {};\r\n","import { FormHelperText, makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n    width: 'fit-content',\r\n  },\r\n  helperText: { marginLeft: 0, marginRight: 0, textAlign: 'center' },\r\n});\r\n\r\ntype MyCalendarProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n  disablePast?: boolean;\r\n  error?: boolean;\r\n};\r\n\r\nfunction MyCalendar({ label, date, onChange, disablePast, error }: MyCalendarProps) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      disablePast={disablePast}\r\n      value={date}\r\n      onChange={onChange}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      size=\"small\"\r\n      className={classes.keyboardDatePicker}\r\n      inputProps={{\r\n        style: {\r\n          width: 90,\r\n        },\r\n        autoComplete: 'off',\r\n      }}\r\n      error={error}\r\n      invalidDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-date')}\r\n        </FormHelperText>\r\n      }\r\n      minDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-min-date')}\r\n        </FormHelperText>\r\n      }\r\n      maxDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-max-date')}\r\n        </FormHelperText>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import { FormHelperText, makeStyles } from '@material-ui/core';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  datePicker: {\r\n    width: 'fit-content',\r\n    marginRight: 20,\r\n  },\r\n  helperText: { marginLeft: 0, marginRight: 0, textAlign: 'center' },\r\n});\r\n\r\ntype MyCalendarNoKeyboadProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n  disablePast?: boolean;\r\n  disabled?: boolean;\r\n  error?: boolean;\r\n};\r\n\r\nfunction MyCalendarNoKeyboad({ label, date, onChange, disablePast, disabled, error }: MyCalendarNoKeyboadProps) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <DatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      disablePast={disablePast}\r\n      disabled={disabled}\r\n      value={date}\r\n      onChange={onChange}\r\n      size=\"small\"\r\n      className={classes.datePicker}\r\n      error={error}\r\n      invalidDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-date')}\r\n        </FormHelperText>\r\n      }\r\n      minDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-min-date')}\r\n        </FormHelperText>\r\n      }\r\n      maxDateMessage={\r\n        <FormHelperText className={classes.helperText} error>\r\n          {t('common.error.Invalid-max-date')}\r\n        </FormHelperText>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendarNoKeyboad;\r\n","import { FormHelperText, Grid, makeStyles } from '@material-ui/core';\r\nimport MyTimePicker from '_components/MyTimePicker';\r\nimport MyCalendarNoKeyboad from '_components/MyCalendarNoKeyboad';\r\n\r\nconst useStyles = makeStyles({\r\n  time: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n  },\r\n  timeBetween: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    marginTop: -5,\r\n  },\r\n});\r\n\r\ntype DateTimePickerFieldsProps = {\r\n  label: string;\r\n  start: Date;\r\n  end: Date;\r\n  onDateChange: (date: Date) => void;\r\n  onStartChange: (date: Date) => void;\r\n  onEndChange: (date: Date) => void;\r\n  disablePast?: boolean;\r\n  disabled?: boolean;\r\n  errMsg?: string[];\r\n};\r\n\r\nexport function DateTimePickerFields(props: DateTimePickerFieldsProps) {\r\n  const { label, start, end, onDateChange, onStartChange, onEndChange, disablePast, disabled, errMsg } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    if (!date) return;\r\n    onDateChange(date);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item container>\r\n        <Grid item xs={12} sm={5}>\r\n          <MyCalendarNoKeyboad\r\n            label={label}\r\n            date={start}\r\n            disablePast={disablePast}\r\n            disabled={disabled}\r\n            onChange={handleDateChange}\r\n            error={!!errMsg}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={7}>\r\n          <Grid item className={classes.time}>\r\n            <MyTimePicker selected={start} onChange={onStartChange} disabled={disabled} error={!!errMsg}></MyTimePicker>\r\n          </Grid>\r\n          <Grid item className={classes.timeBetween}>\r\n            -\r\n          </Grid>\r\n          <Grid item className={classes.time}>\r\n            <MyTimePicker selected={end} onChange={onEndChange} disabled={disabled} error={!!errMsg}></MyTimePicker>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {!!errMsg && (\r\n        <Grid item xs={12}>\r\n          <FormHelperText className={classes.error} error>\r\n            {errMsg}\r\n          </FormHelperText>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport format from 'date-fns/format';\r\n\r\nimport { PatternedRecurrenceInput } from '_models/PatternedRecurrence';\r\n\r\ntype RecurrenceInfoProps = { recurrence: PatternedRecurrenceInput; start: Date; end: Date };\r\n\r\nexport const RecurrenceInfo = (props: RecurrenceInfoProps) => {\r\n  const { recurrence, start, end } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 曜日\r\n  const daysOfWeek = recurrence.pattern.daysOfWeek?.map((week) => t(`recurrence-dialog.pattern.day-of-week.${week}`)).join(', ');\r\n  // 日付\r\n  const dayOfMonth = recurrence.pattern.dayOfMonth?.toString() + t(`recurrence-info.pattern.day-of-month`);\r\n  // 週数\r\n  const index = t(`recurrence-dialog.pattern.index.${recurrence.pattern.index}`);\r\n  // 月\r\n  const month = t(`recurrence-dialog.pattern.month.${recurrence.pattern.month}`);\r\n\r\n  let patternType = '';\r\n  let detail = '';\r\n  switch (recurrence.pattern.type) {\r\n    case 'daily':\r\n      patternType = 'day';\r\n      break;\r\n    case 'weekly':\r\n      patternType = 'week';\r\n      detail = ' ' + daysOfWeek!;\r\n      break;\r\n    case 'absoluteMonthly':\r\n      patternType = 'month';\r\n      detail = ' ' + dayOfMonth;\r\n      break;\r\n    case 'relativeMonthly':\r\n      patternType = 'month';\r\n      detail = ' ' + index + daysOfWeek!;\r\n      break;\r\n    case 'absoluteYearly':\r\n      patternType = 'year';\r\n      detail = ' ' + month + dayOfMonth;\r\n      break;\r\n    case 'relativeYearly':\r\n      patternType = 'year';\r\n      detail = ' ' + month + index + daysOfWeek!;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  // 間隔\r\n  const num = recurrence.pattern.interval === 1 ? '' : recurrence.pattern.interval.toString();\r\n  const every = recurrence.pattern.interval === 1 ? 'every-' : '';\r\n  const interval = num + t(`recurrence-info.pattern.interval.${every + patternType}`);\r\n\r\n  const pattern = interval + detail;\r\n  const apptTime = format(start, 'HH:mm') + '-' + format(end, 'HH:mm');\r\n\r\n  const range = recurrence.range.startDate + t(`recurrence-info.range.to`) + recurrence.range.endDate + t(`recurrence-info.range.valid-from`);\r\n\r\n  return <>{pattern + ' ' + apptTime + '  ' + range}</>;\r\n};\r\n","import { MouseEventHandler, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepMap, DeepPartial, FieldError, UseFormClearErrors, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\r\n\r\nimport { addMonths, addYears, format, startOfDay } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  createStyles,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nimport {\r\n  DayOfWeek,\r\n  nameOfDayOfWeek,\r\n  nameOfRecurrencePatternType,\r\n  nameOfRecurrenceRangeType,\r\n  nameOfWeekIndex,\r\n  PatternedRecurrenceInput,\r\n  RecurrencePattern,\r\n  RecurrencePatternType,\r\n  RecurrenceRange,\r\n  RecurrenceRangeType,\r\n  WeekIndex,\r\n} from '_models/PatternedRecurrence';\r\n\r\nimport { get } from '_utils/Http';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { calcEndTimeFromStartTime } from '_components/MyTimePicker';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { DateTimePickerFields } from './DateTimePickerFields';\r\nimport { RecurrenceInfo } from './RecurrenceInfo';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1.5),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(0.75),\r\n      top: theme.spacing(0.75),\r\n      color: theme.palette.grey[500],\r\n    },\r\n    inputInterval: {\r\n      width: 70,\r\n    },\r\n    inputDayOfMonth: {\r\n      width: 70,\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    error: {\r\n      margin: '-2px 10px',\r\n      lineHeight: '1.4em',\r\n    },\r\n  })\r\n);\r\n\r\ntype CheckInstances = { isIncludesException: boolean };\r\n\r\ntype InputValuesType = {\r\n  startTime: Date;\r\n  endTime: Date;\r\n  pattern: {\r\n    type: RecurrencePatternType;\r\n    interval: number;\r\n    daysOfWeek: CheckBoxWeek;\r\n    dayOfMonth: number;\r\n    index: WeekIndex;\r\n    month: number;\r\n  };\r\n  range: {\r\n    type: RecurrenceRangeType;\r\n    // startDate: Date;\r\n    endDate: Date;\r\n    numberOfOccurrences: number;\r\n  };\r\n};\r\ntype CheckBoxWeek = { [K in DayOfWeek]: boolean };\r\n\r\ntype InputErrorType = {\r\n  startTime: string[] | undefined;\r\n  endTime: string[] | undefined;\r\n  pattern: {\r\n    type: string[] | undefined;\r\n    interval: string[] | undefined;\r\n    daysOfWeek: string[] | undefined;\r\n    dayOfMonth: string[] | undefined;\r\n    index: string[] | undefined;\r\n    month: string[] | undefined;\r\n  };\r\n  range: {\r\n    type: string[] | undefined;\r\n    // startDate: string[] | undefined;\r\n    endDate: string[] | undefined;\r\n    numberOfOccurrences: string[] | undefined;\r\n  };\r\n};\r\n\r\nconst initCheckBoxWeek = nameOfDayOfWeek.reduce((newObj, week) => {\r\n  newObj[week] = false;\r\n  return newObj;\r\n}, {} as CheckBoxWeek);\r\n\r\nconst endDateAddAmount = 1;\r\nconst maxRepeatYear = 5;\r\n\r\nconst getDefaultValues = (startTime: Date, endTime: Date) => {\r\n  const checkBoxWeek = _.cloneDeep(initCheckBoxWeek);\r\n  const week = nameOfDayOfWeek[new Date().getDay()];\r\n  checkBoxWeek[week] = true;\r\n  return {\r\n    startTime: startTime,\r\n    endTime: endTime,\r\n    pattern: {\r\n      type: nameOfRecurrencePatternType[0] as RecurrencePatternType,\r\n      interval: 1,\r\n      daysOfWeek: checkBoxWeek,\r\n      dayOfMonth: 1,\r\n      index: nameOfWeekIndex[0] as WeekIndex,\r\n      month: 1,\r\n    },\r\n    range: {\r\n      type: nameOfRecurrenceRangeType[0] as RecurrenceRangeType,\r\n      // startDate: startOfDay(startTime),\r\n      endDate: addMonths(startOfDay(startTime), endDateAddAmount),\r\n      numberOfOccurrences: 1,\r\n    },\r\n  } as InputValuesType;\r\n};\r\n\r\nconst defaultInputError = {\r\n  pattern: {\r\n    type: undefined,\r\n    interval: undefined,\r\n    daysOfWeek: undefined,\r\n    dayOfMonth: undefined,\r\n    index: undefined,\r\n    month: undefined,\r\n  },\r\n  range: {\r\n    type: undefined,\r\n    // startDate: undefined,\r\n    endDate: undefined,\r\n    numberOfOccurrences: undefined,\r\n  },\r\n} as InputErrorType;\r\n\r\ntype RecurrenceFieldsProps = {\r\n  activeRoomSelect: () => void;\r\n  activeSearchButton: () => void;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  clearErrors: UseFormClearErrors<Inputs>;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RecurrenceFields(props: RecurrenceFieldsProps) {\r\n  const { activeRoomSelect, activeSearchButton, getValues, setValue, clearErrors, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const classes = useStyles();\r\n\r\n  // ダイアログの状態\r\n  const [open, setOpen] = useState(false);\r\n  // 確認ダイアログの状態\r\n  const [confOpen, setConfOpen] = useState(false);\r\n\r\n  // 入力値の状態\r\n  const [inputValues, setInputValues] = useState<InputValuesType>(_.cloneDeep(getDefaultValues(getValues('startTime'), getValues('endTime'))));\r\n  // エラー値の状態\r\n  const [errMsg, setErrMsg] = useState<InputErrorType>(_.cloneDeep(defaultInputError));\r\n\r\n  // 初期値設定\r\n  useEffect(() => {\r\n    const defaultValues = { ...getDefaultValues(getValues('startTime'), getValues('endTime')) };\r\n    if (open) {\r\n      if (!!getValues('recurrence')) {\r\n        // recurrenceオブジェクトから取得\r\n        setInputValues({\r\n          startTime: getValues('startTime'),\r\n          endTime: getValues('endTime'),\r\n          pattern: {\r\n            type: getValues('recurrence')!.pattern.type,\r\n            interval: getValues('recurrence')!.pattern.interval,\r\n            daysOfWeek:\r\n              !!getValues('recurrence')!.pattern.daysOfWeek && getValues('recurrence')!.pattern.daysOfWeek!.length > 0\r\n                ? nameOfDayOfWeek.reduce((newObj, week) => {\r\n                    newObj[week] = getValues('recurrence')!.pattern.daysOfWeek!.filter((value) => value === week).length > 0;\r\n                    return newObj;\r\n                  }, {} as CheckBoxWeek)\r\n                : defaultValues.pattern.daysOfWeek,\r\n            dayOfMonth: (!!getValues('recurrence')!.pattern.dayOfMonth\r\n              ? getValues('recurrence')!.pattern.dayOfMonth\r\n              : defaultValues.pattern.dayOfMonth) as number,\r\n            index: (!!getValues('recurrence')!.pattern.index ? getValues('recurrence')!.pattern.index : defaultValues.pattern.index) as WeekIndex,\r\n            month: (!!getValues('recurrence')!.pattern.month ? getValues('recurrence')!.pattern.month : defaultValues.pattern.month) as number,\r\n          },\r\n          range: {\r\n            type: getValues('recurrence')!.range.type,\r\n            // startDate: new Date(getValues('recurrence')!.range.startDate),\r\n            endDate: getValues('recurrence')!.range.endDate ? new Date(getValues('recurrence')!.range.endDate!) : defaultValues.range.endDate,\r\n            numberOfOccurrences: getValues('recurrence')!.range.numberOfOccurrences\r\n              ? getValues('recurrence')!.range.numberOfOccurrences!\r\n              : defaultValues.range.numberOfOccurrences,\r\n          },\r\n        });\r\n      } else {\r\n        setInputValues(_.cloneDeep(defaultValues));\r\n      }\r\n    } else {\r\n      setInputValues(_.cloneDeep(defaultValues));\r\n    }\r\n    setErrMsg(_.cloneDeep(defaultInputError));\r\n  }, [getValues, open]);\r\n\r\n  // dialogOpen\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  // dialogClose\r\n  const handleClose = (_event: MouseEventHandler, reason: string) => {\r\n    if (reason && reason === 'backdropClick') return;\r\n    handleCancel();\r\n  };\r\n\r\n  // confirmDialogClose\r\n  const handleConfClose = (ok: boolean) => {\r\n    setConfOpen(false);\r\n    if (ok) {\r\n      handleOk(); // OKアクション実行\r\n    }\r\n  };\r\n  // OKアクションの前に確認\r\n  const handleConfirmOk = async () => {\r\n    try {\r\n      const iCalUId = getValues('iCalUId');\r\n      if (!!iCalUId) {\r\n        const result = await get<CheckInstances>(`/event/checkinstances/${iCalUId}`);\r\n        const checkInstances = result.parsedBody;\r\n        // exceptionの予定を含む場合\r\n        if (checkInstances?.isIncludesException) {\r\n          setConfOpen(true); // 確認メッセージへ\r\n          return;\r\n        }\r\n      }\r\n      handleOk(); // OKアクション実行\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // OKアクション\r\n  const handleOk = () => {\r\n    // 入力チェック\r\n    let isError = false;\r\n    const errorMsg = _.cloneDeep(defaultInputError);\r\n\r\n    const startDate = startOfDay(inputValues.startTime);\r\n    const newEndDate = addYears(startDate, maxRepeatYear);\r\n\r\n    // 開始日時のチェック\r\n    if (inputValues.startTime.getTime() > inputValues.endTime.getTime()) {\r\n      //時刻の大小関係エラー\r\n      errorMsg.startTime = [`${t('recurrence-dialog.error.event-time')}`];\r\n      isError = true;\r\n    }\r\n    // 終了日のチェック\r\n    if (startDate.getTime() > inputValues.range.endDate.getTime()) {\r\n      //日にちの大小関係エラー\r\n      errorMsg.range.endDate = [`${t('recurrence-dialog.error.range.end-date')}`];\r\n      isError = true;\r\n    } else if (newEndDate.getTime() < inputValues.range.endDate.getTime()) {\r\n      //最長予約年数チェック\r\n      errorMsg.range.endDate = [`${t('recurrence-dialog.error.range.end-date.max')}`];\r\n      isError = true;\r\n    }\r\n    setErrMsg(errorMsg);\r\n\r\n    if (isError) return;\r\n\r\n    // 曜日チェックボックスの値をRecurrenceオブジェクト用に加工する\r\n    const daysOfWeek = Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek]) as DayOfWeek[];\r\n    if (daysOfWeek.length === 0) {\r\n      // 曜日チェックボックスが未選択だった場合、今日の曜日をセット\r\n      daysOfWeek.push(nameOfDayOfWeek[new Date().getDay()]);\r\n    }\r\n\r\n    let pattern = { type: inputValues.pattern.type, interval: inputValues.pattern.interval } as RecurrencePattern;\r\n    switch (inputValues.pattern.type) {\r\n      case 'daily':\r\n        break;\r\n      case 'weekly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        break;\r\n      case 'absoluteMonthly':\r\n        pattern.dayOfMonth = inputValues.pattern.dayOfMonth;\r\n        break;\r\n      case 'relativeMonthly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        pattern.index = inputValues.pattern.index;\r\n        break;\r\n      case 'absoluteYearly':\r\n        pattern.dayOfMonth = inputValues.pattern.dayOfMonth;\r\n        pattern.month = inputValues.pattern.month;\r\n        break;\r\n      case 'relativeYearly':\r\n        pattern.daysOfWeek = daysOfWeek;\r\n        pattern.index = inputValues.pattern.index;\r\n        pattern.month = inputValues.pattern.month;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let range = { type: inputValues.range.type, startDate: strDate(startDate) } as RecurrenceRange;\r\n    switch (inputValues.range.type) {\r\n      case 'endDate':\r\n        range.endDate = strDate(inputValues.range.endDate);\r\n        break;\r\n      // case 'noEnd'://TODO: noEnd未対応（最大５年問題）\r\n      //   break;\r\n      case 'numbered':\r\n        range.numberOfOccurrences = inputValues.range.numberOfOccurrences;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    clearErrors(['recurrence', 'startTime', 'endTime']);\r\n    setValue('recurrence', { pattern: pattern, range: range } as PatternedRecurrenceInput, { shouldDirty: true });\r\n    setValue('startTime', inputValues.startTime, { shouldDirty: true });\r\n    setValue('endTime', inputValues.endTime, { shouldDirty: true });\r\n\r\n    activeRoomSelect();\r\n    setOpen(false);\r\n  };\r\n\r\n  // Cancelアクション\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // 解除アクション\r\n  const handleRelease = () => {\r\n    clearErrors('recurrence');\r\n    setValue('recurrence', undefined, { shouldDirty: true });\r\n    activeSearchButton();\r\n    setOpen(false);\r\n  };\r\n\r\n  // 開始日変更アクション\r\n  const handleDateChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      return {\r\n        ...values,\r\n        startTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), values.startTime.getHours(), values.startTime.getMinutes()),\r\n        endTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), values.endTime.getHours(), values.endTime.getMinutes()),\r\n      };\r\n    });\r\n  };\r\n  // 開始時刻変更アクション\r\n  const handleStartChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      const start = new Date(\r\n        values.startTime.getFullYear(),\r\n        values.startTime.getMonth(),\r\n        values.startTime.getDate(),\r\n        date.getHours(),\r\n        date.getMinutes()\r\n      );\r\n      const end = calcEndTimeFromStartTime(start);\r\n      return { ...values, startTime: start, endTime: end };\r\n    });\r\n  };\r\n  // 終了時刻変更アクション\r\n  const handleEndChange = (date: Date) => {\r\n    setInputValues((values) => {\r\n      return {\r\n        ...values,\r\n        endTime: new Date(values.endTime.getFullYear(), values.endTime.getMonth(), values.endTime.getDate(), date.getHours(), date.getMinutes()),\r\n      };\r\n    });\r\n  };\r\n\r\n  const strDate = (date: Date): string => format(date, 'yyyy-MM-dd', { locale: muiPickContext?.locale });\r\n\r\n  const patternTypeList = nameOfRecurrencePatternType.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.type.${value}`), value: value };\r\n  });\r\n  const dayOfWeekList = nameOfDayOfWeek.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.day-of-week.${value}`), value: value };\r\n  });\r\n  const weekIndexList = nameOfWeekIndex.map((value) => {\r\n    return { label: t(`recurrence-dialog.pattern.index.${value}`), value: value };\r\n  });\r\n  const monthList = [...Array(12)]\r\n    .map((_, i) => i + 1)\r\n    .map((value) => {\r\n      return { label: t(`recurrence-dialog.pattern.month.${value}`), value: value };\r\n    });\r\n\r\n  // 曜日チェックボックス\r\n  const WeekCheckBox = useMemo(() => {\r\n    return (\r\n      <FormGroup row>\r\n        {nameOfDayOfWeek.map((week, index) => {\r\n          return (\r\n            <FormControlLabel\r\n              key={index}\r\n              control={\r\n                <Checkbox\r\n                  checked={inputValues.pattern.daysOfWeek[week]}\r\n                  onChange={(e) => {\r\n                    setInputValues((values) => {\r\n                      return {\r\n                        ...values,\r\n                        pattern: {\r\n                          ...values.pattern,\r\n                          daysOfWeek: { ...values.pattern.daysOfWeek, [e.target.name as DayOfWeek]: e.target.checked },\r\n                        },\r\n                      };\r\n                    });\r\n                  }}\r\n                  name={week}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={t(`recurrence-dialog.pattern.day-of-week.${week}`)}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    );\r\n  }, [inputValues, t]);\r\n\r\n  // 曜日セレクトボックス\r\n  const WeekSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.days-of-week')}\r\n        select={true}\r\n        value={\r\n          Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek]).length > 0\r\n            ? Object.keys(inputValues.pattern.daysOfWeek).filter((week) => inputValues.pattern.daysOfWeek[week as DayOfWeek])\r\n            : nameOfDayOfWeek[0]\r\n        }\r\n        onChange={(e) => {\r\n          const value = _.cloneDeep(initCheckBoxWeek);\r\n          value[e.target.value as DayOfWeek] = true;\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, daysOfWeek: _.cloneDeep(value) } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.daysOfWeek}\r\n        helperText={errMsg.pattern.daysOfWeek}\r\n      >\r\n        {dayOfWeekList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [dayOfWeekList, errMsg.pattern.daysOfWeek, inputValues, t]);\r\n\r\n  // 週数セレクトボックス\r\n  const IndexSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.index')}\r\n        select={true}\r\n        value={inputValues.pattern.index}\r\n        onChange={(e) => {\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, index: e.target.value as WeekIndex } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.index}\r\n        helperText={errMsg.pattern.index}\r\n      >\r\n        {weekIndexList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [errMsg.pattern.index, inputValues, t, weekIndexList]);\r\n\r\n  // 日付インプットフィールド\r\n  const DayOfMonthText = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        className={classes.inputDayOfMonth}\r\n        label={t('recurrence-dialog.header.pattern.day-of-month')}\r\n        type=\"number\"\r\n        inputProps={{ min: 1, max: 31, style: { textAlign: 'right' } }}\r\n        value={inputValues.pattern.dayOfMonth}\r\n        onChange={(e) => {\r\n          let num = Number(e.target.value);\r\n          if (num < 1) num = 1;\r\n          if (num > 31) num = 31;\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, dayOfMonth: num } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.dayOfMonth}\r\n        helperText={errMsg.pattern.dayOfMonth}\r\n      ></TextField>\r\n    );\r\n  }, [classes.inputDayOfMonth, errMsg.pattern.dayOfMonth, inputValues, t]);\r\n\r\n  // 月セレクトボックス\r\n  const MonthSelectBox = useMemo(() => {\r\n    return (\r\n      <TextField\r\n        label={t('recurrence-dialog.header.pattern.month')}\r\n        select={true}\r\n        value={inputValues.pattern.month}\r\n        onChange={(e) => {\r\n          setInputValues((values) => {\r\n            return { ...values, pattern: { ...values.pattern, month: Number(e.target.value) } };\r\n          });\r\n        }}\r\n        error={!!errMsg.pattern.month}\r\n        helperText={errMsg.pattern.month}\r\n      >\r\n        {monthList.map((option, index) => (\r\n          <MenuItem key={index} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }, [errMsg.pattern.month, inputValues, t, monthList]);\r\n\r\n  return (\r\n    <>\r\n      {!getValues('recurrence') && (\r\n        <Button size=\"small\" color=\"primary\" startIcon={<LoopIcon />} onClick={handleOpen}>\r\n          {t('visitdialog.button.set-recurrence')}\r\n        </Button>\r\n      )}\r\n      {!!getValues('recurrence') && (\r\n        <>\r\n          <TextField\r\n            label={t('visitdialog.notes.recurrence-info')}\r\n            value={renderToString(\r\n              <RecurrenceInfo recurrence={getValues('recurrence')!} start={getValues('startTime')} end={getValues('endTime')}></RecurrenceInfo>\r\n            )}\r\n            multiline\r\n            disabled\r\n            inputProps={{ minRows: 1 }}\r\n            error={!!errors.recurrence}\r\n          ></TextField>\r\n          {!!errors.recurrence && (\r\n            <FormHelperText error className={classes.error}>\r\n              {errors.recurrence.message}\r\n            </FormHelperText>\r\n          )}\r\n          <Button size=\"small\" color=\"primary\" startIcon={<LoopIcon />} onClick={handleOpen}>\r\n            {t('visitdialog.button.edit-recurrence')}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle className={classes.root}>\r\n          {t('recurrence-dialog.title')}\r\n          <IconButton className={classes.closeButton} onClick={handleCancel}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Box px={2} py={1}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={10}>\r\n                <DateTimePickerFields\r\n                  label={t('recurrence-dialog.header.appt-date-time')}\r\n                  start={inputValues.startTime}\r\n                  end={inputValues.endTime}\r\n                  onDateChange={handleDateChange}\r\n                  onStartChange={handleStartChange}\r\n                  onEndChange={handleEndChange}\r\n                  disablePast={getValues('mode') === 'ins'}\r\n                  errMsg={errMsg.startTime ? errMsg.startTime : undefined}\r\n                ></DateTimePickerFields>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <Box px={2} py={1}>\r\n            <TextField\r\n              label={t('recurrence-dialog.header.pattern.type')}\r\n              select={true}\r\n              value={inputValues.pattern.type}\r\n              onChange={(e) => {\r\n                const defaultValues = { ...getDefaultValues(getValues('startTime'), getValues('endTime')) };\r\n                defaultValues.pattern.type = e.target.value as RecurrencePatternType;\r\n                setInputValues((values) => {\r\n                  return { ...values, pattern: { ...defaultValues.pattern } }; // patternの中身は全置換え(リセット)\r\n                });\r\n              }}\r\n              error={!!errMsg.pattern.type}\r\n              helperText={errMsg.pattern.type}\r\n            >\r\n              {patternTypeList.map((option, index) => (\r\n                <MenuItem key={index} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} md={4} container spacing={1} alignItems=\"center\">\r\n                <Grid item>\r\n                  <TextField\r\n                    className={classes.inputInterval}\r\n                    label={t('recurrence-dialog.header.pattern.interval')}\r\n                    type=\"number\"\r\n                    inputProps={{ min: 1, style: { textAlign: 'right' } }}\r\n                    value={inputValues.pattern.interval}\r\n                    onChange={(e) => {\r\n                      const num = Number(e.target.value) > 0 ? Number(e.target.value) : 1;\r\n                      setInputValues((values) => {\r\n                        return { ...values, pattern: { ...values.pattern, interval: num } };\r\n                      });\r\n                    }}\r\n                    error={!!errMsg.pattern.interval}\r\n                    helperText={errMsg.pattern.interval}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>{t(`recurrence-dialog.label.pattern.interval.${inputValues.pattern.type}`)}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'weekly' ? undefined : { display: 'none' }}>\r\n                <FormControl error={!!errMsg.pattern.daysOfWeek}>\r\n                  {WeekCheckBox}\r\n                  {!!errMsg.pattern.daysOfWeek && <FormHelperText error>{errMsg.pattern.daysOfWeek}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'absoluteMonthly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{DayOfMonthText}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.absolute`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'relativeMonthly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{IndexSelectBox}</Grid>\r\n                  <Grid item>{WeekSelectBox}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.relative`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'absoluteYearly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{MonthSelectBox}</Grid>\r\n                  <Grid item>{DayOfMonthText}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.absolute`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={inputValues.pattern.type === 'relativeYearly' ? undefined : { display: 'none' }}>\r\n                <Grid item container spacing={1} alignItems=\"center\">\r\n                  <Grid item>{MonthSelectBox}</Grid>\r\n                  <Grid item>{IndexSelectBox}</Grid>\r\n                  <Grid item>{WeekSelectBox}</Grid>\r\n                  <Grid item>\r\n                    <Typography>{t(`recurrence-dialog.label.pattern.day-of-month.relative`)}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <Box px={2} py={1}>\r\n            <Grid container spacing={2}>\r\n              <Grid item className={classes.datePicker}>\r\n                <MyCalendar\r\n                  label={t('recurrence-dialog.header.range.end-date')}\r\n                  date={inputValues.range.endDate}\r\n                  disablePast={getValues('mode') === 'ins'}\r\n                  onChange={(e) => {\r\n                    if (!e) return;\r\n                    setInputValues((values) => {\r\n                      return { ...values, range: { ...values.range, endDate: e } };\r\n                    });\r\n                  }}\r\n                  error={!!errMsg.range.endDate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {!!errMsg.range.endDate && <FormHelperText error>{errMsg.range.endDate}</FormHelperText>}\r\n          </Box>\r\n\r\n          <Box p={2}>\r\n            <Grid container justifyContent=\"space-between\" spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleConfirmOk}>\r\n                  {t('common.button.ok')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleCancel}>\r\n                  {t('common.button.cancel')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleRelease} disabled={getValues('recurrence') === undefined}>\r\n                  {t('recurrence-dialog.button.release-recurrence')}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <MyConfirmDialog\r\n        open={confOpen}\r\n        onClose={handleConfClose}\r\n        message={\r\n          <Alert severity=\"warning\" variant=\"outlined\">\r\n            <AlertTitle>Warning</AlertTitle>\r\n            {t('recurrence-dialog.confirm-message-1')}\r\n            <br />\r\n            {t('recurrence-dialog.confirm-message-2')}\r\n          </Alert>\r\n        }\r\n      ></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Grid, IconButton, TextField } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype VisitCompanyInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  index: number;\r\n  remove: (index: number) => void;\r\n  disabledVisitor: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function VisitCompanyInputFields(props: VisitCompanyInputFieldsProps) {\r\n  const { control, index, remove, disabledVisitor, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={6}>\r\n        <Controller\r\n          name={`visitCompany.${index}.name`}\r\n          control={control}\r\n          rules={{ required: !disabledVisitor ? (t('common.form.required') as string) : false }}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.visit-company-name')}\r\n              disabled={disabledVisitor}\r\n              error={!!errors?.visitCompany?.[index]?.name}\r\n              helperText={errors?.visitCompany?.[index]?.name && errors?.visitCompany?.[index]?.name?.message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <Controller\r\n          name={`visitCompany.${index}.rep`}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              label={t('visittable.header.visit-company-rep')}\r\n              disabled={disabledVisitor}\r\n              error={!!errors?.visitCompany?.[index]?.rep}\r\n              helperText={errors?.visitCompany?.[index]?.rep && errors?.visitCompany?.[index]?.rep?.message}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1} style={{ margin: 'auto', marginLeft: '-7px' }}>\r\n        <IconButton onClick={() => remove(index)} color=\"primary\" aria-label={t('common.button.delete')} component=\"span\" disabled={index === 0}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Chip } from '@material-ui/core';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\n\r\nexport const TeamsOnlineChip = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Chip\r\n      size=\"small\"\r\n      icon={<VoiceChatIcon style={{ color: 'white' }} />}\r\n      label={t('visitdialog.form.with-teams')}\r\n      style={{ color: 'white', backgroundColor: '#6e75c9' }}\r\n    />\r\n  );\r\n};\r\n","import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Controller, SubmitHandler, useFieldArray, useForm, useWatch } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List, Typography, TextField, FormControlLabel, Switch } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { nameOfUsageRangeForVisitor, Room, UsageRangeForVisitor } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\nimport { PatternedRecurrenceInput } from '_models/PatternedRecurrence';\r\nimport { User } from '_models/User';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { tableTheme, makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\nimport { calcEndTimeFromStartTime, calcStartTime } from '_components/MyTimePicker';\r\nimport { SessionStrageContext } from '_components/BaseTemplate';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\nimport { RecurrenceFields } from './RecurrenceFields';\r\nimport { DateTimePickerFields } from './DateTimePickerFields';\r\nimport { VisitCompanyInputFields } from './VisitCompanyInputFields';\r\nimport { abortRequestSafe } from '_utils/Http';\r\nimport { TeamsOnlineChip } from './TeamsOnlineChip';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      marginTop: 0,\r\n    },\r\n    usageGuide: {\r\n      marginTop: '5px',\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 2,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      adornedEnd: {\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n\r\nconst FETCH_ROOMS_SELECT = 'FETCH_INPUT_DIALOG_ROOMS_SELECT';\r\n\r\nexport type AddDefaultType = {\r\n  start: Date;\r\n  roomId: string;\r\n  usageRange: UsageRangeForVisitor;\r\n};\r\n\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (user: User, start?: Date, roomId?: string, usage?: UsageRangeForVisitor) => {\r\n  const startDate = start ? start : new Date();\r\n  const room = roomId ? roomId : '';\r\n  const usageRange = usage ? usage : 'outside';\r\n  const contactAddr = !!user.contactAddr ? user.contactAddr : '';\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: usageRange === 'outside' ? [{ name: '', rep: '' }] : [],\r\n    numberOfVisitor: 0,\r\n    numberOfEmployee: 0,\r\n    mailto: { authors: [], required: [], optional: [] },\r\n    usageRange: usageRange,\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: room,\r\n        teaSupply: false,\r\n        numberOfTeaSupply: 0,\r\n        teaDetails: '',\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: contactAddr,\r\n    startTime: calcStartTime(startDate),\r\n    endTime: calcEndTimeFromStartTime(startDate),\r\n    seriesMasterId: undefined,\r\n    recurrence: undefined,\r\n    reservationInfo: undefined,\r\n    withTeams: false,\r\n  } as Inputs;\r\n};\r\n\r\n// useFieldArray使用により、dirtyFields内にfalseの場合もマークアップされるようになった為trueのみに絞り込む\r\nconst cloneDeepWithoutFalse = (obj: any) => {\r\n  // falseを排除したdirtyFieldsを作成\r\n  const withoutFalse = _.transform(obj, (result: any, value, key) => {\r\n    if (value === false) return;\r\n    result[key] = _.isObject(value) ? cloneDeepWithoutFalse(value) : value;\r\n  });\r\n  // ↑から空の配列やオブジェクトを排除\r\n  return _.transform(withoutFalse, (result: any, value, key) => {\r\n    if (value !== true && _.isEmpty(value)) return; // isEmptyにtrueが含まれるらしいので別途条件に追加\r\n    result[key] = _.isObject(value) ? cloneDeepWithoutFalse(value) : value;\r\n  });\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload, addDefault } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const sessionStrageContext = useContext(SessionStrageContext); // sessionStrage取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = useMemo(() => getDefaultValues(sessionStrageContext.userStorage), [sessionStrageContext.userStorage]);\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    clearErrors,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        numberOfVisitor: data.numberOfVisitor,\r\n        numberOfEmployee: data.numberOfEmployee,\r\n        mailto: data.mailto,\r\n        usageRange: data.usageRange,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfTeaSupply: data.resourcies[room].numberOfTeaSupply,\r\n            teaDetails: data.resourcies[room].teaDetails,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n        seriesMasterId: data.seriesMasterId,\r\n        recurrence: !!data.recurrence\r\n          ? ({\r\n              pattern: {\r\n                type: data.recurrence.pattern.type,\r\n                interval: data.recurrence.pattern.interval,\r\n                daysOfWeek: data.recurrence.pattern.daysOfWeek,\r\n                dayOfMonth: data.recurrence.pattern.dayOfMonth,\r\n                index: data.recurrence.pattern.index,\r\n                month: data.recurrence.pattern.month,\r\n              },\r\n              range: {\r\n                type: data.recurrence.range.type,\r\n                startDate: data.recurrence.range.startDate,\r\n                endDate: data.recurrence.range.endDate,\r\n              },\r\n            } as PatternedRecurrenceInput)\r\n          : undefined,\r\n        reservationInfo: data.reservationInfo,\r\n        withTeams: data.withTeams,\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues(sessionStrageContext.userStorage, addDefault?.start, addDefault?.roomId, addDefault?.usageRange)));\r\n    }\r\n  }, [data, open, reset, addDefault, sessionStrageContext.userStorage]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 利用範囲選択を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [{ data: rooms, isLoading: roomsLoading, isError: roomsError }, roomsReload, setUrl] = useLoadData<Room[]>('', [], FETCH_ROOMS_SELECT);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      // 更新時、会議室変更は出来ないためデフォルト値\r\n      setUrl(defaultRoomsUrl);\r\n    } else if (!!getValues('recurrence')) {\r\n      setUrl(defaultRoomsUrl + `&usagerange=${getValues('usageRange')}`);\r\n    } else {\r\n      setUrl(\r\n        defaultRoomsUrl +\r\n          `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}` +\r\n          `&usagerange=${getValues('usageRange')}`\r\n      );\r\n    }\r\n  }, [defaultRoomsUrl, getValues, setUrl]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n    return () => {\r\n      abortRequestSafe(FETCH_ROOMS_SELECT, 'OPTIONAL_REASON'); // manual abort\r\n    };\r\n  }, [buildRoomsUrl, open, usageRangeWatch]); // 利用範囲変更時もリセット対象\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 来訪情報の制御状態\r\n  const [disabledVisitor, setDisabledVisitor] = useState(false);\r\n\r\n  // 利用範囲のエフェクト（来訪情報の制御）\r\n  useEffect(() => {\r\n    // 社内会議\r\n    if (usageRangeWatch === 'inside') {\r\n      clearErrors(['visitCompany', 'numberOfVisitor']);\r\n      setValue('visitCompany', [], { shouldDirty: true });\r\n      setValue('numberOfVisitor', 0, { shouldDirty: true });\r\n      setDisabledVisitor(true);\r\n    } else {\r\n      // 社外会議\r\n      clearErrors('visitCompany');\r\n      setValue('visitCompany', [{ name: '', rep: '' }], { shouldDirty: true });\r\n      setDisabledVisitor(false);\r\n    }\r\n  }, [clearErrors, setValue, usageRangeWatch]);\r\n\r\n  // 予約日時を監視\r\n  const startTimeWatch = useWatch({ control, name: 'startTime' });\r\n  const endTimeWatch = useWatch({ control, name: 'endTime' });\r\n\r\n  // 来訪社/代表者フィールドの配列管理\r\n  const { fields: visitCompanyFields, append: visitCompanyAppend, remove: visitCompanyRemove } = useFieldArray({ control, name: 'visitCompany' });\r\n  const visitCompanyWatch = useWatch({ control, name: 'visitCompany' });\r\n\r\n  // ::アクション処理 start-->\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: cloneDeepWithoutFalse(dirtyFields) });\r\n      if (result!.success) {\r\n        await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベントが反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化\r\n  const activeSearchButton = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n  // 開始日時の変更アクション\r\n  const handleStartTimeChange = () => {\r\n    const endTime = calcEndTimeFromStartTime(getValues('startTime'));\r\n    setValue('endTime', endTime, { shouldDirty: true });\r\n    activeSearchButton();\r\n  };\r\n  // 終了日時の変更アクション\r\n  const handleEndTimeChange = () => {\r\n    activeSearchButton();\r\n  };\r\n\r\n  // 予約日の変更アクション(DateTimePicker用)\r\n  const handleDateChange = (date: Date) => {\r\n    setValue(\r\n      'startTime',\r\n      new Date(date.getFullYear(), date.getMonth(), date.getDate(), getValues('startTime').getHours(), getValues('startTime').getMinutes()),\r\n      { shouldDirty: true }\r\n    );\r\n    handleStartTimeChange();\r\n  };\r\n  //  開始時間の変更アクション(DateTimePicker用)\r\n  const handleStartChange = (date: Date) => {\r\n    setValue('startTime', date, { shouldDirty: true });\r\n    handleStartTimeChange();\r\n  };\r\n  //  終了時間の変更アクション(DateTimePicker用)\r\n  const handleEndChange = (date: Date) => {\r\n    setValue('endTime', date, { shouldDirty: true });\r\n    handleEndTimeChange();\r\n  };\r\n\r\n  // 会議室選択活性化 (定期イベント用)\r\n  const activeRoomSelect = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    setHiddenRooms(false);\r\n    buildRoomsUrl();\r\n  };\r\n\r\n  // 来訪社追加アクション\r\n  const appendVisitorCompany = () => {\r\n    visitCompanyAppend({ name: '', rep: '' });\r\n  };\r\n  // 来訪社削除アクション\r\n  const removeVisitorCompany = (index: number) => {\r\n    visitCompanyRemove(index);\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              <List disablePadding={true}>\r\n                {(() => {\r\n                  if (data.isMSMultipleLocations) {\r\n                    /* mode=upd & 複数会議室 */\r\n                    return (\r\n                      <li className={classes.bottomLine}>\r\n                        <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>\r\n                      </li>\r\n                    );\r\n                  } else {\r\n                    /* mode=upd & 単一会議室 */\r\n                    return (\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                })()}\r\n                <li key=\"reservation-name\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n                  <div className={classes.field}>\r\n                    <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n                  </div>\r\n                </li>\r\n              </List>\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2} pb={0}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              {!!data && (\r\n                <Typography variant=\"caption\" display=\"block\" className={classes.usageGuide}>\r\n                  {t('visitdialog.notes.reply-status')}\r\n                  <UserStatusIconNote />\r\n                </Typography>\r\n              )}\r\n\r\n              <AddrBookAutoComplete\r\n                name={'mailto.authors'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-authors')}\r\n                errors={errors}\r\n                disabled={true}\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.required'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-required')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.optional'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-optional')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n\r\n              <Box py={1} style={!!data ? { display: 'none' } : undefined}>\r\n                <ControllerTextField\r\n                  name={'usageRange'}\r\n                  control={control}\r\n                  label={t('visittable.header.usage-range')}\r\n                  required\r\n                  selectList={nameOfUsageRangeForVisitor.map((value) => {\r\n                    return { label: t(`visitdialog.view.usage-range.${value}`), value: value };\r\n                  })}\r\n                  disabled={!!data}\r\n                  errors={errors}\r\n                />\r\n              </Box>\r\n\r\n              <Grid container spacing={1} style={!!getValues('recurrence') ? { display: 'none' } : undefined}>\r\n                <Grid item xs={5} style={{ display: 'none' }}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleStartTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5} style={{ display: 'none' }}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleEndTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                  <DateTimePickerFields\r\n                    label={t('visittable.header.appt-date-time')}\r\n                    start={startTimeWatch}\r\n                    end={endTimeWatch}\r\n                    onDateChange={handleDateChange}\r\n                    onStartChange={handleStartChange}\r\n                    onEndChange={handleEndChange}\r\n                    disablePast={!data}\r\n                    disabled={data?.isChangedByRooms}\r\n                    errMsg={errors['startTime']?.message ? [errors['startTime']?.message] : undefined}\r\n                  ></DateTimePickerFields>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} style={{ margin: 'auto' }}>\r\n                  <Button\r\n                    onClick={handleSearch}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={data?.isMSMultipleLocations || !hiddenRooms}\r\n                    style={getValues('mode') === 'upd' ? { display: 'none' } : undefined}\r\n                  >\r\n                    {t('common.button.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {!data?.seriesMasterId && sessionStrageContext.userStorage.isFront && (\r\n                <Grid>\r\n                  <RecurrenceFields\r\n                    activeRoomSelect={activeRoomSelect}\r\n                    activeSearchButton={activeSearchButton}\r\n                    getValues={getValues}\r\n                    setValue={setValue}\r\n                    clearErrors={clearErrors}\r\n                    errors={errors}\r\n                  ></RecurrenceFields>\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && (\r\n                <RoomInputFields\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  getValues={getValues}\r\n                  clearErrors={clearErrors}\r\n                  rooms={rooms}\r\n                  roomsLoading={roomsLoading}\r\n                  roomsError={roomsError}\r\n                  roomsReload={roomsReload}\r\n                  roomId={ADD_ROOM_KEY}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              )\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      getValues={getValues}\r\n                      clearErrors={clearErrors}\r\n                      rooms={rooms}\r\n                      roomsLoading={roomsLoading}\r\n                      roomsError={roomsError}\r\n                      roomsReload={roomsReload}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      disabledVisitor={data.usageRange === 'inside'}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box px={2} pt={1} style={disabledVisitor ? { display: 'none' } : undefined}>\r\n              {visitCompanyFields.map((field, index) => (\r\n                <VisitCompanyInputFields\r\n                  key={field.id}\r\n                  control={control}\r\n                  index={index}\r\n                  remove={removeVisitorCompany}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              ))}\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={4} style={disabledVisitor ? { opacity: 0 } : { margin: 'auto' }}>\r\n                  <Button\r\n                    onClick={appendVisitorCompany}\r\n                    startIcon={<AddCircleOutlineIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={visitCompanyWatch.length > 2} // 最大３社まで\r\n                  >\r\n                    {t('visitdialog.button.add-visitor')}\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} sm={4} style={disabledVisitor ? { opacity: 0 } : undefined}>\r\n                  <Controller\r\n                    name={`numberOfVisitor`}\r\n                    control={control}\r\n                    rules={{\r\n                      required: t('common.form.required') as string,\r\n                      validate: () =>\r\n                        (getValues(`usageRange`) === 'outside' && getValues(`numberOfVisitor`) > 0) ||\r\n                        (getValues(`usageRange`) === 'inside' && getValues(`numberOfVisitor`) === 0) ||\r\n                        (t('visitdialog.form.error.number-of-visitor') as string),\r\n                    }}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        type=\"number\"\r\n                        inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                        {...field}\r\n                        disabled={disabledVisitor}\r\n                        label={t('visittable.header.number-of-visitor')}\r\n                        error={!!errors.numberOfVisitor}\r\n                        helperText={!!errors.numberOfVisitor && errors.numberOfVisitor.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} sm={4}>\r\n                  <Controller\r\n                    name={`numberOfEmployee`}\r\n                    control={control}\r\n                    rules={{\r\n                      required: t('common.form.required') as string,\r\n                      validate: () => getValues(`numberOfEmployee`) > 0 || (t('visitdialog.form.error.number-of-employee') as string),\r\n                    }}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        type=\"number\"\r\n                        inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                        {...field}\r\n                        label={t('visittable.header.number-of-employee')}\r\n                        error={!!errors.numberOfEmployee}\r\n                        helperText={!!errors.numberOfEmployee && errors.numberOfEmployee.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              {!data?.withTeams && (\r\n                <FormControlLabel\r\n                  control={\r\n                    <Controller\r\n                      name={`withTeams`}\r\n                      control={control}\r\n                      render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n                    />\r\n                  }\r\n                  label={t('visittable.header.with-teams')}\r\n                />\r\n              )}\r\n              {data?.withTeams && (\r\n                <div style={{ padding: '10px 5px' }}>\r\n                  <TeamsOnlineChip />\r\n                </div>\r\n              )}\r\n            </Box>\r\n\r\n            <Box p={2} paddingTop={0}>\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} required errors={errors} />\r\n            </Box>\r\n\r\n            {!!data && (\r\n              <Box px={2}>\r\n                <List disablePadding={true}>\r\n                  <li key=\"datetime\" className={classes.list}>\r\n                    <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n                    <div className={classes.field}>\r\n                      <LastUpdatedField datetime={data.lastUpdated} />\r\n                    </div>\r\n                  </li>\r\n                  <li key=\"info\" className={classes.list} style={{ display: 'none' }}>\r\n                    <div className={classes.title}>reservationInfo</div>\r\n                    <div className={classes.field}>{JSON.stringify(data.reservationInfo)}</div>\r\n                  </li>\r\n                </List>\r\n              </Box>\r\n            )}\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms || roomsLoading}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('visitdialog.button.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('visitdialog.button.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <MyConfirmDialog\r\n        open={delConfOpen}\r\n        onClose={handleDelConfClose}\r\n        // title={t('visitorinfoform.delete-confirm-title')}\r\n        message={\r\n          data?.eventType === 'seriesMaster' ? t('visitorinfoform.delete-confirm-message.series-master') : t('visitorinfoform.delete-confirm-message')\r\n        }\r\n        color=\"secondary\"\r\n      ></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles, createStyles } from '@material-ui/core';\r\nimport { EmailAddress } from '_models/User';\r\nimport { MyChip } from './MyChip';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      // justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype AddrBookUserDisplayProps = {\r\n  propsKey: string;\r\n  data: EmailAddress[];\r\n};\r\n\r\nexport function AddrBookUserDisplay({ propsKey, data }: AddrBookUserDisplayProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {data.map((user, i) => (\r\n        <MyChip key={`${propsKey}-${i}`} option={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List, Typography } from '@material-ui/core';\r\n\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomReadFields } from './RoomReadFields';\r\nimport { AddrBookUserDisplay } from '_components/AddrBookUserDisplay';\r\nimport { UserStatusIconNote } from '_components/UserStatusIconNote';\r\nimport ReservationNameField from './ReservationNameField';\r\nimport { LastUpdatedField } from './LastUpdatedField';\r\nimport { RecurrenceInfo } from './RecurrenceInfo';\r\nimport { TeamsOnlineChip } from './TeamsOnlineChip';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  // 会議メンバーではない場合、詳細表示NG\r\n  if (!data.isAttendees) {\r\n    return (\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        {t('common.msg.authority-error')}\r\n      </MyDialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          {!data?.recurrence && (\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>\r\n                {data.apptTime}\r\n                {data?.withTeams && (\r\n                  <span style={{ paddingLeft: 10 }}>\r\n                    <TeamsOnlineChip />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </li>\r\n          )}\r\n          {!!data?.recurrence && (\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visitdialog.notes.recurrence-info')}</div>\r\n              <div className={classes.field}>\r\n                <RecurrenceInfo\r\n                  recurrence={data?.recurrence}\r\n                  start={new Date(data?.startDateTime)}\r\n                  end={new Date(data?.endDateTime)}\r\n                ></RecurrenceInfo>\r\n              </div>\r\n            </li>\r\n          )}\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>\r\n              <ReservationNameField name={data.reservationName} status={data.reservationStatus} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pt={2}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          {t('visitdialog.notes.reply-status')}\r\n          <UserStatusIconNote />\r\n        </Typography>\r\n        <List disablePadding={true}>\r\n          <li key=\"mailto-required\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-required')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay propsKey=\"mailto-required\" data={data.mailto.required} />\r\n            </div>\r\n          </li>\r\n          <li key=\"mailto-optional\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-optional')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay propsKey=\"mailto-optional\" data={data.mailto.optional} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box px={2} pt={2} style={data.usageRange === 'inside' ? { display: 'none' } : undefined}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>\r\n              {t('visittable.header.visit-company-name')} /<br />\r\n              {t('visittable.header.visit-company-rep')}\r\n            </div>\r\n            <div className={classes.field}>\r\n              {data.visitCompany.map((co, index) => (\r\n                <>\r\n                  {!!index && <br />}\r\n                  <span>{`${co.name} / ${co.rep}`}</span>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </li>\r\n\r\n          <li key=\"number-of-visitor\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n            <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n              {data.numberOfVisitor}\r\n            </div>\r\n            <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n              {t('visittable.header.number-of-employee')}\r\n            </div>\r\n            <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n              {data.numberOfEmployee}\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box p={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pb={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"datetime\" className={classes.list}>\r\n            <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n            <div className={classes.field}>\r\n              <LastUpdatedField datetime={data.lastUpdated} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </MyDialog>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { RowDataType } from './DataTableBase';\r\nimport { get } from '_utils/Http';\r\n\r\ntype AnswerType = 'instances' | 'master';\r\n\r\ntype RecurrenceConfirmDialogProps = {\r\n  open: boolean;\r\n  seriesMasterId: string;\r\n  onClose: (isCancel: boolean, master?: RowDataType) => void;\r\n};\r\n\r\nexport function RecurrenceConfirmDialog(props: RecurrenceConfirmDialogProps) {\r\n  const { open, seriesMasterId, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const [answer, setAnswer] = useState<AnswerType>('instances');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAnswer(event.target.value as AnswerType);\r\n  };\r\n\r\n  const handleOkClose = async () => {\r\n    if (answer === 'master') {\r\n      const result = await get<RowDataType>(`/event/visitInfo/${seriesMasterId}`);\r\n      // console.log('seriesMaster', result.parsedBody); // TODO: debug\r\n      onClose(false, result.parsedBody);\r\n    } else {\r\n      onClose(false);\r\n    }\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleCancelClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.recurrence-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.recurrence-confirm-message')}</DialogContentText>\r\n          <Box>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={answer} onChange={handleChange}>\r\n              <FormControlLabel value=\"instances\" control={<Radio />} label={t('visitorinfoform.recurrence-radio-instances')} />\r\n              <FormControlLabel value=\"master\" control={<Radio />} label={t('visitorinfoform.recurrence-radio-master')} />\r\n            </RadioGroup>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { AddDefaultType, RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\nimport { RecurrenceConfirmDialog } from './RecurrenceConfirmDialog';\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n  addDefault?: AddDefaultType;\r\n  recConfOpen?: boolean;\r\n};\r\n\r\nexport type DataDialogAction =\r\n  | {\r\n      type: 'inputOpen' | 'readOpen' | 'inputClose' | 'readClose' | 'recConfOpen' | 'recConfClose' | 'recConfCancel';\r\n    }\r\n  | { type: 'addDataOpen'; addDefault?: AddDefaultType };\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false, addDefault: action.addDefault };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    case 'recConfOpen':\r\n      return { ...state, recConfOpen: true };\r\n    case 'recConfClose':\r\n      return { ...state, recConfOpen: false };\r\n    case 'recConfCancel':\r\n      return { ...state, recConfOpen: false, inputOpen: false, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n  onRecConfClose?: (isCancel: boolean, master?: RowDataType) => void;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children, onRecConfClose } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen && !dataDialogHook.state.recConfOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n        addDefault={dataDialogHook.state.addDefault}\r\n      />\r\n      {!!currentRow && (\r\n        <RowDataReadDialog\r\n          open={dataDialogHook.state.readOpen && !dataDialogHook.state.recConfOpen}\r\n          onClose={handleReadDialogClose}\r\n          data={currentRow}\r\n        />\r\n      )}\r\n      {!!currentRow && !!currentRow.seriesMasterId && !!onRecConfClose && (\r\n        <RecurrenceConfirmDialog open={!!dataDialogHook.state.recConfOpen} seriesMasterId={currentRow.seriesMasterId} onClose={onRecConfClose} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import SyncIcon from '@material-ui/icons/Sync';\r\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled';\r\n\r\nimport { GraphApiEventType } from '_models/VisitorInfo';\r\n\r\ntype EventTypeIconProps = {\r\n  type: GraphApiEventType;\r\n};\r\n\r\nconst style = { fontSize: '1.2em', marginLeft: '3px', marginRight: '3px', verticalAlign: 'text-bottom', color: 'gray' };\r\n\r\nexport const EventTypeIcon = (props: EventTypeIconProps) => {\r\n  const { type } = props;\r\n\r\n  switch (type) {\r\n    case 'occurrence':\r\n      return <SyncIcon style={style} />;\r\n    case 'exception':\r\n      return <SyncDisabledIcon style={style} />;\r\n    case 'seriesMaster':\r\n    case 'singleInstance':\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitCompany } from '_models/VisitorInfo';\r\n\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { EventTypeIcon } from '../EventTypeIcon';\r\n\r\nconst useStyles = makeVisitorTableStyles(false);\r\n\r\nconst visitCompanies = (rowData: RowDataType) => rowData.visitCompany.map((co: VisitCompany) => `${co.name}`).join(', ');\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  render?: (rowData: RowDataType) => any;\r\n  customSort?: (a: RowDataType, b: RowDataType) => number;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<RowDataType[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`);\r\n  }, [currentDate, match.params.location, setUrl]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  const columns: Columns[] = [\r\n    {\r\n      title: t('visittable.header.appt-time'),\r\n      field: 'apptTime',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.apptTime}\r\n          <EventTypeIcon type={rowData.eventType} />\r\n        </>\r\n      ),\r\n    },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n    {\r\n      title: t('visittable.header.visit-company-name'),\r\n      field: 'visitCompany',\r\n      render: (rowData) => visitCompanies(rowData),\r\n      customSort: (a, b) => (visitCompanies(a) < visitCompanies(b) ? -1 : 1),\r\n    },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Grid, IconButton, makeStyles } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRIghtIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { DataDialogAction } from './DataTableBase';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  arrowLeft: {\r\n    paddingTop: 7,\r\n    marginRight: -5,\r\n  },\r\n  arrowRight: {\r\n    paddingTop: 7,\r\n    marginLeft: -5,\r\n  },\r\n  arrowIcon: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  datePicker: {\r\n    margin: 'auto 0',\r\n  },\r\n  title: {\r\n    margin: 'auto 0.25em',\r\n  },\r\n}));\r\n\r\ntype HeaderActionsProps = {\r\n  title: string;\r\n  subtitle?: string;\r\n  date: Date | null;\r\n  onDateChange: (date: Date | null) => void;\r\n  onDatePrev: () => void;\r\n  onDateNext: () => void;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n  actionButtons?: React.ReactNode[];\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { subtitle, date, onDateChange, onDatePrev, onDateNext, dispatch, actionButtons } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container alignItems=\"center\" item xs={12} sm={!!actionButtons ? 6 : 9}>\r\n          <Grid item className={classes.arrowLeft}>\r\n            <IconButton className={classes.arrowIcon} onClick={onDatePrev}>\r\n              <ArrowLeftIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item className={classes.datePicker}>\r\n            <MyCalendar label={t('main.header.picker-label')} date={date} onChange={onDateChange} />\r\n          </Grid>\r\n          <Grid item className={classes.arrowRight} onClick={onDateNext}>\r\n            <IconButton className={classes.arrowIcon}>\r\n              <ArrowRIghtIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Grid>\r\n          {/* <Grid item className={classes.title}>\r\n            <Typography component=\"h5\">{title}</Typography>\r\n          </Grid> */}\r\n        </Grid>\r\n\r\n        <Grid container item justifyContent=\"flex-end\" alignItems=\"center\" spacing={2} xs={12} sm={!!actionButtons ? 6 : 3}>\r\n          {!!actionButtons &&\r\n            actionButtons.map((item, index) => {\r\n              return (\r\n                <Grid item key={`actionButtons-${index}`}>\r\n                  {item}\r\n                </Grid>\r\n              );\r\n            })}\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n              {t('main.header.add-event')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box pt={1}>{subtitle}</Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // isCreatedOnlyの状態\r\n  const [createdOnly, setCreatedOnly] = useState(false);\r\n  useEffect(() => {\r\n    setCreatedOnly(false); // TODO: production.jsの値を反映\r\n  }, []);\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.visitlist.title')}\r\n            subtitle={t(`main.visitlist.subtitle${createdOnly ? '.created-only' : ''}`)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Tooltip, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { differenceInMinutes, endOfDay, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport _ from 'lodash';\r\nimport clsx from 'clsx';\r\n\r\nimport { Schedule, ScheduleItem } from '_models/Schedule';\r\nimport { UsageRangeForVisitor } from '_models/Room';\r\nimport { LroomsType } from '_models/Lrooms';\r\n\r\nimport { DataDialogAction, DataDialogState, RowDataType } from 'main/DataTableBase';\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport type BoxStyleType = 'short' | 'long';\r\n\r\ntype BoxStyle = {\r\n  width: number;\r\n  halfWidth: number;\r\n  scale: number;\r\n  transform: Point;\r\n};\r\n\r\ntype BoxData = {\r\n  x: number;\r\n  width: number;\r\n  className: string;\r\n};\r\n\r\n// 8-20\r\nconst shortStyle: BoxStyle = {\r\n  width: 120,\r\n  halfWidth: 60,\r\n  scale: 2,\r\n  transform: { x: -960, y: 0 },\r\n};\r\n// 0-24\r\nconst longStyle: BoxStyle = {\r\n  width: 60,\r\n  halfWidth: 30,\r\n  scale: 1,\r\n  transform: { x: 0, y: 0 },\r\n};\r\n\r\nconst viewWidth = 60 * 24;\r\nconst viewHeight = 70;\r\nconst viewWidthMargin = 1; // lineの一番両端が身切れして他のlineより細くなる現象を避けるため\r\nconst viewWidthWrap = viewWidth + viewWidthMargin * 2;\r\nconst fontHeight = 30;\r\nconst fontMargin = 5;\r\n\r\nconst timeToPoint = (time: Date, boxStyle: BoxStyle) => {\r\n  const zero = startOfDay(time);\r\n  return differenceInMinutes(time, zero) * boxStyle.scale;\r\n};\r\n\r\nconst pointToTime = (point: number, boxStyle: BoxStyle) => {\r\n  const offset = 0;\r\n  return ((point + offset) / boxStyle.scale) * 60 * 1000;\r\n};\r\n\r\nconst getBoxData = (item: ScheduleItem, boxStyle: BoxStyle, currentDate: Date): BoxData => {\r\n  const start = new Date(item.start);\r\n  const end = new Date(item.end);\r\n  let x = timeToPoint(start, boxStyle);\r\n  let x2 = timeToPoint(end, boxStyle);\r\n  // 日を跨ぐ場合\r\n  if (!isSameDay(start, end)) {\r\n    const startOfCurrent = startOfDay(currentDate);\r\n    const endOfCurrent = endOfDay(currentDate);\r\n    // 翌日に続く\r\n    if (isBefore(endOfCurrent, end)) {\r\n      x2 = timeToPoint(endOfCurrent, boxStyle);\r\n    }\r\n    // 前日から続いている\r\n    if (isAfter(startOfCurrent, start)) {\r\n      x = timeToPoint(startOfCurrent, boxStyle);\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    width: x2 - x,\r\n    className: item.status,\r\n  };\r\n};\r\n\r\nconst calcX = (hour: number, width: number) => (hour + 1) * width + viewWidthMargin;\r\n\r\nconst createTransform = (boxStyle: BoxStyle) => {\r\n  return `translate(${boxStyle.transform.x},${boxStyle.transform.y})`;\r\n};\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    color: theme.palette.text.primary,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      marginBottom: '0.5rem',\r\n      // height: '5vmin',\r\n      '& svg': {\r\n        fontSize: '1.5rem',\r\n        '& line': {\r\n          strokeWidth: 2,\r\n        },\r\n        '& line.hour-line': {\r\n          stroke: theme.palette.grey[400],\r\n        },\r\n        '& line.hour-half-line': {\r\n          stroke: theme.palette.grey[300],\r\n        },\r\n        '& text': {\r\n          fill: theme.palette.grey[400],\r\n        },\r\n        '& text.subject': {\r\n          fill: '#fff',\r\n          fontSize: '1.2rem',\r\n          dominantBaseline: 'central',\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect': {\r\n          strokeWidth: 1,\r\n          fillOpacity: 0.5,\r\n        },\r\n        '& rect.new-event-bar': {\r\n          fillOpacity: 0,\r\n        },\r\n        '& rect.event': {\r\n          stroke: theme.palette.success.main,\r\n          fill: theme.palette.success.light,\r\n          fillOpacity: 0.9,\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect.myOwn': {\r\n          stroke: theme.palette.info.main,\r\n          fill: theme.palette.info.light,\r\n        },\r\n        '& rect.myOwnPending': {\r\n          stroke: theme.palette.info.main,\r\n          fill: theme.palette.info.light,\r\n          strokeWidth: 10,\r\n          strokeDasharray: 5,\r\n          strokeOpacity: 0.8,\r\n        },\r\n        '& rect.wait': {\r\n          stroke: theme.palette.warning.light,\r\n          fill: theme.palette.warning.main,\r\n        },\r\n        '& rect.busy': {\r\n          stroke: theme.palette.error.light,\r\n          fill: theme.palette.error.main,\r\n        },\r\n        '& rect.lrooms': {\r\n          cursor: 'pointer',\r\n          fillOpacity: 0.1,\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      // color: theme.palette.grey[500],\r\n      fontSize: '1rem',\r\n      paddingBottom: 0,\r\n    },\r\n  })\r\n);\r\n\r\ntype TimeBarProps = {\r\n  rangeToggle: BoxStyleType;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  schedule: Schedule;\r\n  events: RowDataType[][];\r\n  lrooms: LroomsType[][];\r\n  onClickCallback: (rowData: RowDataType) => void;\r\n  keyLabel: string; //schedule.roomName\r\n  keyValue: string; //schedule.roomEmail\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function TimeBar(props: TimeBarProps) {\r\n  const { rangeToggle, dataDialogHook, schedule, events, lrooms, onClickCallback, keyLabel, keyValue, onTitleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const [boxStyle, setBoxStyle] = useState(shortStyle);\r\n  const [transform, setTransform] = useState(createTransform(boxStyle));\r\n\r\n  useEffect(() => {\r\n    setBoxStyle(rangeToggle === 'short' ? shortStyle : longStyle);\r\n  }, [rangeToggle]);\r\n\r\n  useEffect(() => {\r\n    setTransform(createTransform(boxStyle));\r\n  }, [boxStyle, events]);\r\n\r\n  const hRatio = 1;\r\n  const rectY = fontHeight + (viewHeight - fontHeight) * (1 - hRatio) + 1;\r\n  const rectHeight = (viewHeight - fontHeight) * hRatio - 1;\r\n  const viewHeightDup = schedule.type === 'free' ? viewHeight + rectHeight * (schedule.scheduleItems.length - 1) + rectHeight : viewHeight;\r\n\r\n  // スケジュール枠の作成\r\n  const createScheduleBox = useCallback(\r\n    (item: ScheduleItem, index: number, timestamp: number, rowIndex: number) => {\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      return (\r\n        <rect\r\n          key={`${keyValue}-sc-${index}`}\r\n          className={boxData.className}\r\n          x={boxData.x}\r\n          y={rectY + rectHeight * rowIndex}\r\n          width={boxData.width}\r\n          height={rectHeight}\r\n          rx={3}\r\n          ry={5}\r\n        ></rect>\r\n      );\r\n    },\r\n    [boxStyle, keyValue, rectY, rectHeight]\r\n  );\r\n\r\n  // イベント枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createEventBox = useCallback(\r\n    (event: RowDataType, index: number, timestamp: number, rowIndex: number) => {\r\n      const item: ScheduleItem = { status: 'event', start: event.startDateTime, end: event.endDateTime + event.cleaningTime };\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      const x = boxData.x;\r\n      const y = rectY + rectHeight * rowIndex;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      const myEvent = event.isAttendees ? `myOwn${event.roomStatus !== 'accepted' ? 'Pending' : ''}` : '';\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${keyValue}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n          onClick={() => {\r\n            onClickCallback(event);\r\n          }}\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={clsx(boxData.className, myEvent)} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, rectY, rectHeight, keyValue, onClickCallback]\r\n  );\r\n\r\n  // LivnessRooms枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createLroomsBox = useCallback(\r\n    (event: LroomsType, index: number, timestamp: number, rowIndex: number) => {\r\n      const item: ScheduleItem = { status: 'busy', start: event.startDateTime, end: event.endDateTime };\r\n      const boxData = getBoxData(item, boxStyle, new Date(timestamp));\r\n      const x = boxData.x;\r\n      const y = rectY + rectHeight * rowIndex;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${keyValue}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={clsx(boxData.className, 'lrooms')} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, rectY, rectHeight, keyValue]\r\n  );\r\n\r\n  // 新規作成ボタン(開始時間の指定あり)\r\n  const handleCreateClick = (\r\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\r\n    timestamp: number,\r\n    roomId: string,\r\n    usageRange: UsageRangeForVisitor\r\n  ) => {\r\n    const svg: SVGSVGElement | null = event.currentTarget.closest('svg');\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = event.clientX;\r\n    pt.y = event.clientY;\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) return;\r\n\r\n    const svgP = pt.matrixTransform(ctm.inverse());\r\n    const rectX = svgP.x - boxStyle.transform.x + viewWidthMargin;\r\n    const $time = pointToTime(rectX, boxStyle);\r\n    const time = Math.floor($time / 1000 / 60 / 30) * 1000 * 60 * 30; //TODO: Interval config化？\r\n    const start = new Date(startOfDay(timestamp).getTime() + time);\r\n\r\n    dataDialogHook.dispatch({ type: 'addDataOpen', addDefault: { start: start, roomId: roomId, usageRange: usageRange } });\r\n  };\r\n\r\n  // スケジュール枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectSchedules = useMemo(() => {\r\n    return <>{schedule.scheduleItems.map((row, rowIndex) => row.map((item, index) => createScheduleBox(item, index, schedule.date, rowIndex)))}</>;\r\n  }, [createScheduleBox, schedule]);\r\n\r\n  // イベント枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectEvents = useMemo(() => {\r\n    return <>{events.map((row, rowIndex) => row.map((event, index) => createEventBox(event, index, schedule.date, rowIndex)))}</>;\r\n  }, [createEventBox, events, schedule]);\r\n\r\n  // LivnessRooms枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectLrooms = useMemo(() => {\r\n    return <>{lrooms.map((row, rowIndex) => row.map((event, index) => createLroomsBox(event, index, schedule.date, rowIndex)))}</>;\r\n  }, [createLroomsBox, lrooms, schedule]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Typography className={classes.title}>{keyLabel}</Typography> */}\r\n      <Button\r\n        color=\"secondary\"\r\n        className={classes.title}\r\n        size=\"small\"\r\n        onClick={() => onTitleClick(schedule.date, schedule.categoryId, schedule.roomId)}\r\n      >\r\n        {keyLabel}\r\n      </Button>\r\n      <div className={classes.container}>\r\n        <svg viewBox={`0 0 ${viewWidthWrap} ${viewHeightDup}`} preserveAspectRatio=\"none\">\r\n          <g transform={transform}>\r\n            <line className=\"hour-line\" x1={0} y1={0} x2={0} y2={viewHeightDup}></line>\r\n            <line className=\"hour-half-line\" x1={boxStyle.halfWidth} y1={fontHeight} x2={boxStyle.halfWidth} y2={viewHeightDup}></line>\r\n            {_.range(0, 24).map(($) => {\r\n              const x = calcX($, boxStyle.width);\r\n              const minX = x + boxStyle.halfWidth;\r\n              const fontX = $ * boxStyle.width + fontMargin;\r\n              return (\r\n                <Fragment key={`fragment-${$}`}>\r\n                  <line key={`hour-line-${$}`} className=\"hour-line\" x1={x} y1={0} x2={x} y2={viewHeightDup}></line>\r\n                  <line key={`hour-half-line-${$}`} className=\"hour-half-line\" x1={minX} y1={fontHeight} x2={minX} y2={viewHeightDup}></line>\r\n                  <text key={`hour-text-${$}`} x={fontX} y={fontHeight - 5}>\r\n                    {$}\r\n                  </text>\r\n                </Fragment>\r\n              );\r\n            })}\r\n            <rect\r\n              className=\"new-event-bar\"\r\n              x={0}\r\n              y={rectY}\r\n              width={calcX(24, boxStyle.width)}\r\n              height={viewHeightDup - rectY}\r\n              onClick={(e) => handleCreateClick(e, schedule.date, schedule.roomId, schedule.usageRange)}\r\n            ></rect>\r\n            {rectSchedules}\r\n            {rectEvents}\r\n            {rectLrooms}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Grid, withStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport { BoxStyleType } from './TimeBar';\r\n\r\nconst RangeToggleGroup = withStyles(() => ({\r\n  root: {},\r\n}))(ToggleButtonGroup);\r\n\r\nconst RangeToggle = withStyles(() => ({\r\n  root: {\r\n    fontSize: '1.1em',\r\n    padding: '2px 10px',\r\n    '&$selected': {\r\n      backgroundColor: grey[300],\r\n      color: grey[600],\r\n      '&:hover': {\r\n        backgroundColor: grey[100],\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n}))(ToggleButton);\r\n\r\ntype TimeBarRangeToggleProps = {\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n};\r\n\r\nexport function TimeBarRangeToggle(props: TimeBarRangeToggleProps) {\r\n  const { rangeToggle, onChangeRangeToggle } = props;\r\n\r\n  const handleChange = (_event: React.MouseEvent<HTMLElement>, value: BoxStyleType) => {\r\n    if (!value) return;\r\n    onChangeRangeToggle(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"flex-end\">\r\n      <Grid item xs={12} style={{ textAlign: 'right' }}>\r\n        <RangeToggleGroup size=\"small\" value={rangeToggle} exclusive onChange={handleChange}>\r\n          <RangeToggle value=\"short\">\r\n            <>8-20</>\r\n          </RangeToggle>\r\n          <RangeToggle value=\"long\">\r\n            <>1Day</>\r\n          </RangeToggle>\r\n        </RangeToggleGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\nimport { LroomsType } from '_models/Lrooms';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { BoxStyleType, TimeBar } from '../TimeBar';\r\nimport { TimeBarRangeToggle } from 'main/TimeBarRangeToggle';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  lrooms: LroomsType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, rangeToggle, onChangeRangeToggle, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<TimeBarDataType>('', undefined);\r\n  useEffect(() => {\r\n    setUrl(`/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${tabKey}`);\r\n  }, [currentDate, match.params.location, setUrl, tabKey]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            rangeToggle={rangeToggle}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            lrooms={schedule.lroomsIndex.map((row) => row.map((lroomsIndex) => data!.lrooms[lroomsIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={schedule.roomName}\r\n            keyValue={schedule.roomEmail}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, onTitleClick, rangeToggle]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <TimeBarRangeToggle rangeToggle={rangeToggle} onChangeRangeToggle={onChangeRangeToggle} />\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { MuiPickersContext } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport { useContext, useEffect, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\nimport { LroomsType } from '_models/Lrooms';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { BoxStyleType, TimeBar } from '../TimeBar';\r\nimport { TimeBarRangeToggle } from 'main/TimeBarRangeToggle';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n  lrooms: LroomsType[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  tabKey: string;\r\n  rangeToggle: BoxStyleType;\r\n  onChangeRangeToggle: (value: BoxStyleType) => void;\r\n  onTitleClick: (timestamp: number, categoryId: string, roomId: string) => void;\r\n};\r\n\r\nexport function DataTableWeekly(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, tabKey, rangeToggle, onChangeRangeToggle, onTitleClick } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<TimeBarDataType>('', undefined);\r\n  useEffect(() => {\r\n    setUrl(`/event/byroom/weekly?timestamp=${currentDate!.getTime()}&location=${match.params.location}&room=${tabKey}`);\r\n  }, [currentDate, match.params.location, setUrl, tabKey]);\r\n\r\n  // 選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            rangeToggle={rangeToggle}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={schedule.eventsIndex.map((row) => row.map((eventIndex) => data!.events[eventIndex]))}\r\n            lrooms={schedule.lroomsIndex.map((row) => row.map((lroomsIndex) => data!.lrooms[lroomsIndex]))}\r\n            onClickCallback={handleDialogOpen}\r\n            keyLabel={format(schedule.date, 'yyyy/MM/dd (E)', { locale: muiPickContext?.locale })}\r\n            keyValue={schedule.date.toString()}\r\n            onTitleClick={onTitleClick}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [data, dataDialogHook, handleDialogOpen, muiPickContext?.locale, onTitleClick, rangeToggle]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <TimeBarRangeToggle rangeToggle={rangeToggle} onChangeRangeToggle={onChangeRangeToggle} />\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { cloneElement, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { AppBar, Tab } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nimport { getReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\ninterface TabModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ntype MyTabContextProps<T extends TabModel> = {\r\n  data: Array<T>;\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function MyTabContext<T extends TabModel>(props: MyTabContextProps<T>) {\r\n  const { data, tabPanelContent, selected } = props;\r\n\r\n  // タブパネルとタブリストの描画が揃ってから表示するための制御\r\n  const [activateTab, setActivateTab] = useState(false);\r\n  useEffect(() => setActivateTab(true), []);\r\n\r\n  // タブの状態\r\n  const [tabValue, setTabValue] = useState('');\r\n\r\n  // タブの自動選択\r\n  useEffect(() => {\r\n    if (!!selected) {\r\n      setTabValue(selected);\r\n    } else {\r\n      setTabValue(data[0].id);\r\n    }\r\n  }, [data, selected]);\r\n\r\n  // ================================\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('tabValue', tabValue);\r\n    }\r\n  }, [tabValue]);\r\n  // ================================\r\n\r\n  // タブ切り替えアクション\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // タブリストの表示（不要レンダリングが起きるためメモ化）\r\n  const tabList = useMemo(() => {\r\n    return (\r\n      <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"scrollable\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n        {data?.map((item, index) => (\r\n          <Tab key={`tab-${index}`} label={item.name} value={`${item.id}`} />\r\n        ))}\r\n      </TabList>\r\n    );\r\n  }, [data]);\r\n\r\n  // タブパネルの表示（不要レンダリングが起きるためメモ化）\r\n  const tabPanels = useMemo(() => {\r\n    return (\r\n      <>\r\n        {data?.map((item, index) => {\r\n          return (\r\n            <TabPanel key={`tab-panel-${index}`} value={`${item.id}`}>\r\n              {cloneElement(tabPanelContent, { tabKey: item.id })}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [data, tabPanelContent]);\r\n\r\n  if (!activateTab) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        {tabList}\r\n      </AppBar>\r\n      {tabPanels}\r\n    </TabContext>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { LocationParams } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\ntype CategoryTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function CategoryTabContext(props: CategoryTabContextProps) {\r\n  const { tabPanelContent, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // カテゴリ取得\r\n  const [{ data, isLoading }, , setUrl] = useLoadData<Category[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/category/choices?location=${match.params.location}&tab=byroom`);\r\n  }, [match.params.location, setUrl]);\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      {!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Room } from '_models/Room';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { MyTabContext } from '_components/MyTabContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\ntype RoomTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n  selected?: string;\r\n};\r\n\r\nexport function RoomTabContext(props: RoomTabContextProps) {\r\n  const { tabPanelContent, selected } = props;\r\n\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // カテゴリ取得\r\n  const [{ data, isLoading }, , setUrl] = useLoadData<Room[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/room/choices?location=${match.params.location}&samecategory=${selected}`);\r\n  }, [match.params.location, selected, setUrl]);\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      {!!data?.length && <MyTabContext data={data} tabPanelContent={tabPanelContent} selected={selected} />}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg, saveReloadState } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { DataTableWeekly } from './DataTableWeekly';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { CategoryTabContext } from '../CategoryTabContext';\r\nimport { RoomTabContext } from 'main/RoomTabContext';\r\nimport { BoxStyleType } from 'main/TimeBar';\r\n\r\nexport type ByRoomState = {\r\n  weekly: boolean;\r\n  changeTab: string | undefined;\r\n  titleLabel: string;\r\n  subtitleLabel: string;\r\n};\r\n\r\nexport type ByRoomAction = {\r\n  type: 'default' | 'weekly';\r\n  changeTab: string;\r\n};\r\n\r\nexport const byRoomReducer = (state: ByRoomState, action: ByRoomAction) => {\r\n  switch (action.type) {\r\n    case 'default':\r\n      return { weekly: false, changeTab: action.changeTab, titleLabel: 'main.byroom.title', subtitleLabel: 'main.byroom.subtitle' };\r\n    case 'weekly':\r\n      return {\r\n        weekly: true,\r\n        changeTab: action.changeTab,\r\n        titleLabel: 'main.byroom-weekly.title',\r\n        subtitleLabel: 'main.byroom-weekly.subtitle',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext, setWeekly] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // １週間表示切替えの状態管理\r\n  const [byRoomState, byRoomDispatch] = useReducer(byRoomReducer, {\r\n    weekly: false,\r\n    changeTab: undefined,\r\n    titleLabel: 'main.byroom.title',\r\n    subtitleLabel: 'main.byroom.subtitle',\r\n  });\r\n\r\n  // タイムバー表示範囲の状態\r\n  const [rangeToggle, setRangeToggle] = useState<BoxStyleType>('short');\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      byRoomDispatch({ type: !!getReloadState('weekly') ? 'weekly' : 'default', changeTab: getReloadState('tabValue') });\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ReloadStateStrageの設定\r\n  useEffect(() => {\r\n    if (!getReloadStateFlg()) {\r\n      saveReloadState('weekly', byRoomState.weekly ? '1' : '');\r\n    }\r\n  }, [byRoomState.weekly]);\r\n  // ================================\r\n\r\n  // タイムバー表示範囲の切替えアクション\r\n  const handleRangeToggleChange = (value: BoxStyleType) => {\r\n    setRangeToggle(value);\r\n  };\r\n\r\n  // デフォルト → １週間表示へ切替えアクション\r\n  const handleDefaultClick = (timestamp: number, _categoryId: string, roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    setWeekly(true);\r\n    byRoomDispatch({ type: 'weekly', changeTab: roomId });\r\n  };\r\n\r\n  // １週間 → デフォルト表示へ切替えアクション\r\n  const handleWeeklyClick = (timestamp: number, categoryId: string, _roomId: string) => {\r\n    setSelectedDate(new Date(timestamp));\r\n    setWeekly(false);\r\n    byRoomDispatch({ type: 'default', changeTab: categoryId });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t(byRoomState.titleLabel)}\r\n            subtitle={t(byRoomState.subtitleLabel)}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        {\r\n          /* デフォルト表示 */\r\n          !byRoomState.weekly && (\r\n            <CategoryTabContext\r\n              tabPanelContent={\r\n                <DataTable\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  rangeToggle={rangeToggle}\r\n                  onChangeRangeToggle={handleRangeToggleChange}\r\n                  onTitleClick={handleDefaultClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          /* １週間表示 */\r\n          byRoomState.weekly && (\r\n            <RoomTabContext\r\n              tabPanelContent={\r\n                <DataTableWeekly\r\n                  currentDate={selectedDate!}\r\n                  dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n                  tabKey=\"dummyId\"\r\n                  rangeToggle={rangeToggle}\r\n                  onChangeRangeToggle={handleRangeToggleChange}\r\n                  onTitleClick={handleWeeklyClick}\r\n                />\r\n              }\r\n              selected={byRoomState.changeTab}\r\n            />\r\n          )\r\n        }\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Box, Button, List, makeStyles, TextField } from '@material-ui/core';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport { FrontRowData } from './DataTable';\r\n\r\nimport { RoomReadFields } from 'main/RoomReadFields';\r\nimport { LastUpdatedField } from 'main/LastUpdatedField';\r\nimport { TeamsOnlineChip } from 'main/TeamsOnlineChip';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { FrontInputType, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles({\r\n  checkAction: {\r\n    textAlign: 'center',\r\n    marginBottom: '10px',\r\n    '& Button': {\r\n      margin: '0 5%',\r\n      width: '40%',\r\n    },\r\n  },\r\n});\r\n\r\ntype Inputs = {\r\n  mode: 'checkin' | 'checkout';\r\n} & VisitorInfoFront &\r\n  FrontInputType;\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: FrontRowData;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataFrontDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n  const frontClasses = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        iCalUId: data.iCalUId,\r\n        seriesMasterId: data.seriesMasterId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd HH:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('mode', 'checkin');\r\n    setValue('checkIn', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('mode', 'checkout');\r\n    setValue('checkOut', timestamp(), { shouldDirty: true });\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData(`/front/${formData.mode}`, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <Box p={2}>\r\n          <form>\r\n            <div className={frontClasses.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  // required: t('common.form.required') as string,\r\n                })}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>\r\n                {data.apptTime}\r\n                {data?.withTeams && (\r\n                  <span style={{ paddingLeft: 10 }}>\r\n                    <TeamsOnlineChip />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li key=\"check-in\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-in')}</div>\r\n              <div className={classes.field}>{data.checkIn}</div>\r\n            </li>\r\n            <li key=\"check-out\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-out')}</div>\r\n              <div className={classes.field}>{data.checkOut}</div>\r\n            </li>\r\n            {/* <li key=\"event-subject\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n              <div className={classes.field}>{data.subject}</div>\r\n            </li> */}\r\n            <li key=\"visit-company\" className={classes.list}>\r\n              <div className={classes.title}>\r\n                {t('visittable.header.visit-company-name')} /<br />\r\n                {t('visittable.header.visit-company-rep')}\r\n              </div>\r\n              <div className={classes.field}>\r\n                {data.visitCompany.map((co, index) => (\r\n                  <>\r\n                    {!!index && <br />}\r\n                    <span>{`${co.name} / ${co.rep}`}</span>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </li>\r\n            <li key=\"number-of-visitor\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n              <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                {data.numberOfVisitor}\r\n              </div>\r\n              <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                {t('visittable.header.number-of-employee')}\r\n              </div>\r\n              <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                {data.numberOfEmployee}\r\n              </div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"comment\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n              <div className={classes.field}>{data.comment}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        {Object.keys(data.resourcies).map((roomId) => {\r\n          return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n        })}\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"reservation-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n              <div className={classes.field}>{data.reservationName}</div>\r\n            </li>\r\n            <li key=\"contact-addr\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n              <div className={classes.field}>{data.contactAddr}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        <Box p={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"datetime\" className={classes.list}>\r\n              <div className={classes.title}>{t('visitdialog.header.last-updated')}</div>\r\n              <div className={classes.field}>\r\n                <LastUpdatedField datetime={data.lastUpdated} />\r\n              </div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport { pageingOntions, tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { UseDataTable } from '_utils/UseDataTable';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { RowDataFrontDialog } from './RowDataFrontDialog';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitCompany, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { cellStyle, makeVisitorTableStyles, frontCellPadding } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nconst useStyles = makeVisitorTableStyles(true);\r\nconst visitCompanies = (rowData: FrontRowData) => rowData.visitCompany.map((co: VisitCompany) => `${co.name} / ${co.rep}`).join(', ');\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  width?: string;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: FrontRowData) => any;\r\n  customSort?: (a: FrontRowData, b: FrontRowData) => number;\r\n};\r\n\r\nexport type FrontRowData = RowDataType & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<FrontRowData[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/front/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`);\r\n  }, [currentDate, match.params.location, setUrl]);\r\n\r\n  // フロント用ダイアログの状態\r\n  const [frontDialogOpen, setFrontDialogOpen] = useState(false);\r\n\r\n  // 編集用選択行の状態\r\n  const [{ currentRow }, , handleDialogOpen, handleRecConfClose] = UseDataTable({ dataDialogHook: dataDialogHook });\r\n  // フロント用選択行の状態\r\n  const [fronCurrentRow, setFronCurrentRow] = useState<FrontRowData | null>(null);\r\n\r\n  // フロント用ダイアログを開く\r\n  const handleFrontDialogOpen = (selectedRow: FrontRowData) => {\r\n    setFrontDialogOpen(true);\r\n    setFronCurrentRow(selectedRow);\r\n  };\r\n  // フロント用ダイアログを閉じる\r\n  const handleFrontDialogClose = async () => {\r\n    setFrontDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    {\r\n      title: t('visittable.header.appt-time'),\r\n      field: 'apptTime',\r\n      render: (rowData) => rowData.apptTime.split(' ')[1],\r\n      width: '95px',\r\n    },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    {\r\n      title: t('visittable.header.number-of-people'),\r\n      field: 'teaSupply',\r\n      render: (rowData) => {\r\n        const roomId = Object.keys(rowData.resourcies)[0]; // TODO:複数会議室未対応\r\n        const strNumOfTeaSupply = `${t('visitdialog.view.tea-supply.number-of-tea-supply')}:${rowData.resourcies[roomId].numberOfTeaSupply}`;\r\n\r\n        const strNumOfVisitor = `${t('visitdialog.view.tea-supply.number-of-visitor')}:${rowData.numberOfVisitor}`;\r\n        const strNumOfEmployee = `${t('visitdialog.view.tea-supply.number-of-employee')}:${rowData.numberOfEmployee}`;\r\n\r\n        return (\r\n          <>\r\n            <span style={rowData.resourcies[roomId].teaSupply ? { color: 'red' } : undefined}>{strNumOfTeaSupply}</span>\r\n            <br />\r\n            {strNumOfVisitor}\r\n            <br />\r\n            {strNumOfEmployee}\r\n          </>\r\n        );\r\n      },\r\n      customSort: (a, b) => {\r\n        const aRoomId = Object.keys(a.resourcies)[0]; // TODO:複数会議室未対応\r\n        const bRoomId = Object.keys(b.resourcies)[0]; // TODO:複数会議室未対応\r\n        return a.resourcies[aRoomId].numberOfTeaSupply - b.resourcies[bRoomId].numberOfTeaSupply;\r\n      },\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.visit-company-name')} / ${t('visittable.header.visit-company-rep')}`,\r\n      field: 'visitCompany',\r\n      render: (rowData) =>\r\n        rowData.visitCompany.map((co, index) => (\r\n          <>\r\n            {!!index && <br />}\r\n            <span>{`${co.name} / ${co.rep}`}</span>\r\n          </>\r\n        )),\r\n      customSort: (a, b) => (visitCompanies(a) < visitCompanies(b) ? -1 : 1),\r\n    },\r\n    {\r\n      title: t('visittable.header.check-in'),\r\n      field: 'checkIn',\r\n      render: (rowData) =>\r\n        rowData.checkIn ? (\r\n          <>\r\n            <span>✓</span>\r\n            <br />\r\n            <span>{rowData.visitorCardNumber}</span>\r\n          </>\r\n        ) : (\r\n          <span></span>\r\n        ),\r\n      width: '70px',\r\n    },\r\n    {\r\n      title: t('visittable.header.check-out'),\r\n      field: 'checkOut',\r\n      render: (rowData) => (rowData.checkOut ? <span>✓</span> : <span></span>),\r\n      width: '50px',\r\n    },\r\n    {\r\n      title: `${t('visittable.header.reservation-name')} / ${t('visittable.header.contact-addr')}`,\r\n      field: 'reservationName',\r\n      render: (rowData) => (\r\n        <>\r\n          {rowData.reservationName}\r\n          <br />\r\n          {rowData.contactAddr}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: `${t('visittable.header.tea-details')} / ${t('visittable.header.comment')}`,\r\n      field: 'comment',\r\n      render: (rowData) => {\r\n        const roomId = Object.keys(rowData.resourcies)[0]; // TODO:複数会議室未対応\r\n        const teaDetails = !!rowData.resourcies[roomId].teaDetails ? (\r\n          <>\r\n            <span style={{ color: 'red' }}>{rowData.resourcies[roomId].teaDetails}</span>\r\n            <br />\r\n          </>\r\n        ) : undefined;\r\n        return (\r\n          <>\r\n            {teaDetails}\r\n            {rowData.comment}\r\n          </>\r\n        );\r\n      },\r\n      width: '70%',\r\n    },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload} onRecConfClose={handleRecConfClose}>\r\n      <MaterialTable\r\n        columns={columns as Column<FrontRowData>[]}\r\n        components={{\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleFrontDialogOpen(selectedRow)}\r\n        actions={[\r\n          {\r\n            icon: () => <BorderColorIcon />,\r\n            tooltip: t('visittable.header.edit-action'),\r\n            onClick: (_, rowData) => !!rowData && handleDialogOpen(rowData as FrontRowData),\r\n          },\r\n        ]}\r\n        localization={{\r\n          header: { actions: '' },\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light, padding: frontCellPadding },\r\n          tableLayout: 'fixed',\r\n          // actionsColumnIndex: -1,\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {fronCurrentRow && <RowDataFrontDialog open={frontDialogOpen} onClose={handleFrontDialogClose} data={fronCurrentRow} reload={reload} />}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useContext, useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { addWeeks, format, startOfDay } from 'date-fns';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { CSVLink } from 'react-csv';\r\nimport _ from 'lodash';\r\n\r\nimport { Box, Button, Grid, makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersContext } from '@material-ui/pickers';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfo, VisitorInfoFront, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n  between: { textAlign: 'center' },\r\n});\r\n\r\ntype ExportCsvParams = {\r\n  location: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n};\r\n\r\ntype DataType = VisitorInfo & VisitorInfoReadOnly & VisitorInfoFront;\r\n\r\nconst nameOfCsvHeaders = [\r\n  // 'apptTime',\r\n  'apptDate',\r\n  'apptStartTime',\r\n  'apptEndTime',\r\n  'roomName',\r\n  'teaSupply',\r\n  'numberOfTeaSupply',\r\n  'teaDetails',\r\n  'numberOfVisitor',\r\n  'numberOfEmployee',\r\n  'visitCompany',\r\n  // 'checkIn',\r\n  // 'visitorCardNumber',\r\n  // 'checkOut',\r\n  'reservationName',\r\n  'reservationDepEn',\r\n  'reservationDepJa',\r\n  'contactAddr',\r\n  'subject',\r\n  'comment',\r\n] as const;\r\ntype TypeOfCsvHeaders = typeof nameOfCsvHeaders[number];\r\ntype CsvDataType = {\r\n  [P in TypeOfCsvHeaders]: string;\r\n};\r\ntype CsvHeaderType = { label: string; key: keyof CsvDataType };\r\n\r\ntype ExportCsvDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\nexport function ExportCsvDialog(props: ExportCsvDialogProps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n\r\n  const csvLinkRef = useRef<CSVLink & HTMLAnchorElement & { link: HTMLAnchorElement }>(null);\r\n\r\n  // CSVデータの状態\r\n  const [csvData, setCsvData] = useState<CsvDataType[]>([]);\r\n  // CSVファイル名の状態\r\n  const [filename, setFilename] = useState('');\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = useMemo(() => {\r\n    return { location: match.params.location, startDate: new Date(), endDate: addWeeks(new Date(), 1) };\r\n  }, [match.params.location]);\r\n\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<ExportCsvParams>({ defaultValues, reValidateMode: 'onSubmit' });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset(defaultValues);\r\n    }\r\n  }, [defaultValues, open, reset]);\r\n\r\n  // 開始日の変更アクション\r\n  const handleStartDateChange = () => {\r\n    const endDate = addWeeks(getValues('startDate'), 1);\r\n    setValue('endDate', endDate, { shouldDirty: true });\r\n  };\r\n\r\n  // CSV出力アクション\r\n  const handleExportCsv = async () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // CSVヘッダー\r\n  const headers: CsvHeaderType[] = nameOfCsvHeaders.map((value) => {\r\n    return { label: t(`export-csv.file.header.${_.kebabCase(value)}`), key: value };\r\n  });\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<ExportCsvParams> = async (formData) => {\r\n    try {\r\n      const result = await fetchPostData<ExportCsvParams, ExportCsvParams, DataType[]>('/front/export', {\r\n        inputs: formData,\r\n        dirtyFields: dirtyFields,\r\n      });\r\n      if (result!.success) {\r\n        if (!!result.value) {\r\n          // CSVファイル名の設定\r\n          setFilename(`visitor-${format(formData.startDate, 'yyyyMMdd')}-${format(formData.endDate, 'yyyyMMdd')}.csv`);\r\n\r\n          const data = result.value.map((item) => {\r\n            const roomId = Object.keys(item.resourcies)[0]; // TODO:複数会議室未対応\r\n            return {\r\n              apptDate: format(item.startDateTime, 'yyyy/MM/dd', { locale: muiPickContext?.locale }),\r\n              apptStartTime: format(item.startDateTime, 'HH:mm', { locale: muiPickContext?.locale }),\r\n              apptEndTime: format(item.endDateTime, 'HH:mm', { locale: muiPickContext?.locale }),\r\n              roomName: item.roomName,\r\n              teaSupply: item.resourcies[roomId].teaSupply ? t('export-csv.file.tea-supply-yes') : t('export-csv.file.tea-supply-no'),\r\n              numberOfTeaSupply: item.resourcies[roomId].numberOfTeaSupply.toString(),\r\n              teaDetails: item.resourcies[roomId].teaDetails,\r\n              numberOfVisitor: item.numberOfVisitor.toString(),\r\n              numberOfEmployee: item.numberOfEmployee.toString(),\r\n              visitCompany: item.visitCompany.map((co) => `${co.name} / ${co.rep}`).join(', '),\r\n              // checkIn: item.checkIn,\r\n              // visitorCardNumber: item.visitorCardNumber,\r\n              // checkOut: item.checkOut,\r\n              reservationName: item.reservationName,\r\n              reservationDepEn: !!item.reservationInfo ? item.reservationInfo.department : '',\r\n              reservationDepJa: !!item.reservationInfo ? item.reservationInfo.officeLocation : '',\r\n              contactAddr: item.contactAddr,\r\n              subject: item.subject,\r\n              comment: item.comment,\r\n            };\r\n          }) as CsvDataType[];\r\n          setCsvData(data);\r\n          csvLinkRef?.current?.link.click();\r\n          snackberContext.dispatch({ type: 'success', message: t('export-csv.msg.export-success') });\r\n        }\r\n      } else {\r\n        // エラーのセット\r\n        snackberContext.dispatch({ type: 'error', message: t('export-csv.msg.export-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 日付ピッカー\r\n  const datePicker = (type: 'start' | 'end') => (\r\n    <Controller\r\n      name={`${type}Date`}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () =>\r\n          startOfDay(getValues('startDate')).getTime() <= startOfDay(getValues('endDate')).getTime() ||\r\n          (t('export-csv.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <KeyboardDatePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            if (type === 'start') handleStartDateChange();\r\n          }}\r\n          format=\"yyyy/MM/dd\"\r\n          label={t(`export-csv.${type}-date`)}\r\n          showTodayButton\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n          size=\"small\"\r\n          className={classes.keyboardDatePicker}\r\n          inputProps={{\r\n            autoComplete: 'off',\r\n          }}\r\n          error={!!errors[`${type}Date`]}\r\n          helperText={errors[`${type}Date`] && errors[`${type}Date`]!.message}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('export-csv.title')}>\r\n        <form>\r\n          <Box px={2} pt={2}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('start')}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} className={classes.between}>\r\n                <ArrowRightAltIcon />\r\n              </Grid>\r\n              <Grid container item xs={12} sm={4}>\r\n                {datePicker('end')}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box p={2}>\r\n            <Button onClick={handleExportCsv} variant=\"contained\" color=\"primary\" fullWidth>\r\n              {t('export-csv.button.export-csv')}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n\r\n        <CSVLink style={{ display: 'none' }} data={csvData} headers={headers} filename={filename} ref={csvLinkRef}>\r\n          {'Export Trigger'}\r\n        </CSVLink>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Paper } from '@material-ui/core';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { useSelectedDate } from '_utils/useSelectedDate';\r\nimport { getReloadState, getReloadStateFlg, removeReloadStateFlg } from '_utils/SessionStrage';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { ExportCsvDialog } from './ExportCsvDialog';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function Front() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate, handleDateChange, handleDatePrev, handleDateNext] = useSelectedDate();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  //  CSV出力ダイアログの状態\r\n  const [exportCsvOpen, setExportCsvOpen] = useState(false);\r\n\r\n  // ================================\r\n  // refreshボタンによるreload\r\n  useEffect(() => {\r\n    if (!!getReloadStateFlg()) {\r\n      setSelectedDate(new Date(Number(getReloadState('selectedDate'))));\r\n      removeReloadStateFlg();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // ================================\r\n\r\n  //  CSV出力クリックアクション\r\n  const handleExporCsvClick = () => {\r\n    setExportCsvOpen(true);\r\n  };\r\n  // CSV出力ダイアログ閉じるアクション\r\n  const handleExporCsvClose = () => {\r\n    setExportCsvOpen(false);\r\n  };\r\n\r\n  // CSV出力ボタン\r\n  const csvButton = (\r\n    <Button variant=\"contained\" startIcon={<ArchiveOutlinedIcon />} onClick={handleExporCsvClick}>\r\n      {t('main.header.export-csv')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <BaseTemplate frontMode>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.front.title')}\r\n            subtitle={t('main.front.subtitle')}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            onDatePrev={handleDatePrev}\r\n            onDateNext={handleDateNext}\r\n            dispatch={dataDialogDispatch}\r\n            actionButtons={[csvButton]}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n      <ExportCsvDialog open={exportCsvOpen} onClose={handleExporCsvClose} />\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepPartial, Path, PathValue, SubmitHandler, UnpackNestedValue, useForm, FieldValues, FormProvider } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { defaultPrimary } from '_styles/Theme';\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\nimport { MyConfirmDialog } from '_components/MyConfirmDialog';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: defaultPrimary.main,\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nexport type Mastertype = 'role' | 'location' | 'category' | 'room';\r\n\r\ntype InputMode = { mode: 'ins' | 'upd' | 'del' };\r\nexport type Inputs<RowData> = InputMode & RowData;\r\n\r\ntype DefaultValuesType<RowData> = UnpackNestedValue<DeepPartial<Inputs<RowData>>>;\r\nexport type InputFields<RowData> = {\r\n  type: Mastertype;\r\n  item: React.ReactNode;\r\n  defaultValues: DefaultValuesType<RowData>;\r\n};\r\n\r\n// react-hook-formのsetValue。型定義が長いのでショートカット用\r\ntype RHFSetValueP1<RowData> = Path<Inputs<RowData>>;\r\ntype RHFSetValueP2<RowData> = UnpackNestedValue<PathValue<Inputs<RowData>, Path<Inputs<RowData>>>>;\r\n\r\ntype RowDataInputDialogProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowData | null;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataInputDialog<RowData>(props: RowDataInputDialogProps<RowData>) {\r\n  const { inputFields, open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 削除確認メッセージの状\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const methods = useForm({ defaultValues: { ...inputFields.defaultValues }, reValidateMode: 'onSubmit' });\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    setError,\r\n    formState: { isDirty, isSubmitting, dirtyFields },\r\n  } = methods;\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      const values = Object.keys(inputFields.defaultValues).reduce((newObj: FieldValues, key) => {\r\n        if (key === 'mode') {\r\n          newObj['mode'] = 'upd';\r\n        } else {\r\n          newObj[key] = (data as FieldValues)[key];\r\n        }\r\n        return newObj;\r\n      }, {});\r\n      reset(_.cloneDeep(values as DefaultValuesType<RowData>));\r\n    } else {\r\n      reset(_.cloneDeep(inputFields.defaultValues));\r\n    }\r\n  }, [data, inputFields, open, reset]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode' as RHFSetValueP1<RowData>, 'del' as RHFSetValueP2<RowData>);\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs<RowData>> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = `/${inputFields.type}/create`;\r\n          break;\r\n        case 'upd':\r\n          url = `/${inputFields.type}/update`;\r\n          break;\r\n        case 'del':\r\n          url = `/${inputFields.type}/delete`;\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n        // ロール設定とロケーション設定は更新反映のためにログアウトを促す\r\n        if (inputFields.type === 'role' || inputFields.type === 'location') {\r\n          await new Promise(() =>\r\n            setTimeout(() => {\r\n              snackberContext.dispatch({ type: 'warning', message: t('common.msg.prompt-logout') });\r\n            }, 1500)\r\n          );\r\n        }\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs<RowData> as Path<Inputs<RowData>>;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t(`settings.title.${inputFields.type}`)}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          <FormProvider {...methods}>\r\n            <form>\r\n              <Box p={2}>{inputFields.item}</Box>\r\n              <Box px={2}>\r\n                <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                  <Grid item xs={!data ? 12 : 6}>\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" disabled={!isDirty} startIcon={<SaveIcon />} fullWidth>\r\n                      {t('common.button.save')}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                    <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                      {t('common.button.delete')}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </FormProvider>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <MyConfirmDialog open={delConfOpen} onClose={handleDelConfClose} message={t('common.msg.delete-confirm')} color=\"secondary\"></MyConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { InputFields, RowDataInputDialog } from './RowDataInputDialog';\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n};\r\n\r\nexport type DataDialogAction = {\r\n  type: 'inputOpen' | 'addDataOpen' | 'inputClose';\r\n};\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  currentRow: RowData | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase<RowData>(props: DataTableBaseProps<RowData>) {\r\n  const { inputFields, dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog<RowData>\r\n        inputFields={inputFields}\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase } from './DataTableBase';\r\nimport { InputFields } from './RowDataInputDialog';\r\n\r\nexport type Columns<RowData> = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  sorting?: boolean;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: RowData) => any;\r\n};\r\n\r\ntype DataTableProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  columns: Columns<RowData>[];\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable<RowData extends object>(props: DataTableProps<RowData>) {\r\n  const { inputFields, columns, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload, setUrl] = useLoadData<RowData[]>('', []);\r\n  useEffect(() => {\r\n    setUrl(`/${inputFields.type}/list`);\r\n  }, [inputFields.type, setUrl]);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowData) => {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase<RowData> inputFields={inputFields} currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { DataDialogAction } from './DataTableBase';\r\nimport { Mastertype } from './RowDataInputDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype HeaderActionsProps = {\r\n  master: Mastertype;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { master, dispatch } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={9}>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            {t(`settings.title.${master}`)}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n            {t('settings.add-master')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { EmailAddress } from './User';\r\n\r\nexport const nameOfRoleType = ['admin', 'front'] as const;\r\nexport type RoleType = typeof nameOfRoleType[number];\r\nexport type Role = {\r\n  id: string;\r\n  name: RoleType;\r\n  members: EmailAddress[];\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { nameOfRoleType } from '_models/Role';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Role>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField\r\n        name={'name'}\r\n        control={control}\r\n        label={t('settings.header.role.name')}\r\n        required\r\n        selectList={nameOfRoleType.map((value) => {\r\n          return { label: t(`settings.view.role.name.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <AddrBookAutoComplete name={'members'} control={control} label={t('settings.header.role.members')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nexport function RoleSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Role>[] = [\r\n    {\r\n      title: t('settings.header.role.name'),\r\n      field: 'name',\r\n      render: (rowData) => t(`settings.view.role.name.${rowData.name}`),\r\n    },\r\n    // { title: t('settings.header.role.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Role> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: 'admin',\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"role\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Role>\r\n            inputFields={{ type: 'role', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Location>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.location.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'url'}\r\n        control={control}\r\n        label={t('settings.header.location.url')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            value: /^[a-z0-9]+$/,\r\n            message: t('settings.form.location.error.url.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.location.sort')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nexport function LocationSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Location>[] = [\r\n    { title: t('settings.header.location.name'), field: 'name' },\r\n    { title: t('settings.header.location.url'), field: 'url' },\r\n    { title: t('settings.header.location.sort'), field: 'sort' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Location> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    url: '',\r\n    sort: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"location\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Location>\r\n            inputFields={{ type: 'location', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Category>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // メンバー表示の制御用に限定公開スイッチを監視\r\n  const isLimitedPublic = useWatch({\r\n    control,\r\n    name: 'limitedPublic',\r\n  });\r\n\r\n  //メンバー表示の状態\r\n  const [showMembers, setShowMembers] = useState(false);\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    setShowMembers(isLimitedPublic);\r\n    if (!isLimitedPublic) {\r\n      setValue('members', [], { shouldDirty: true });\r\n    }\r\n  }, [isLimitedPublic, setValue]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.category.name')} required errors={errors} />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.category.sort')} errors={errors} />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'limitedPublic'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.limited-public')}\r\n      />\r\n      <AddrBookAutoComplete\r\n        name={'members'}\r\n        control={control}\r\n        label={t('settings.header.category.members')}\r\n        errors={errors}\r\n        style={!showMembers ? { display: 'none' } : undefined}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'disabledByRoom'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.disabled-by-room')}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nexport function CategorySettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Category>[] = [\r\n    { title: t('settings.header.category.name'), field: 'name' },\r\n    { title: t('settings.header.category.sort'), field: 'sort' },\r\n    { title: t('settings.header.category.limited-public'), field: 'limitedPublic', type: 'boolean' },\r\n    // { title: t('settings.header.category.members'), field: 'members' },\r\n    { title: t('settings.header.category.disabled-by-room'), field: 'disabledByRoom', type: 'boolean' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Category> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    sort: '',\r\n    limitedPublic: false,\r\n    members: [],\r\n    disabledByRoom: false,\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"category\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Category>\r\n            inputFields={{ type: 'category', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Typography, Grid, Switch, TextField, withStyles } from '@material-ui/core';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { nameOfRoomType, nameOfUsageRange, Room } from '_models/Room';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\ntype DataInputsProps = {\r\n  locations: Location[] | undefined;\r\n  categories: Category[] | undefined;\r\n};\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 48,\r\n    '&$expanded': {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\nexport function DataInputs({ locations, categories }: DataInputsProps) {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Room>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用にタイプ選択を監視\r\n  const typeWatch = useWatch({ control, name: 'type' });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (typeWatch === 'free') {\r\n      setValue('teaSupply', { outside: false, inside: false }, { shouldDirty: true });\r\n      setDisabledTeaSupply(true);\r\n    } else {\r\n      setDisabledTeaSupply(false);\r\n    }\r\n  }, [setValue, typeWatch]);\r\n\r\n  // 給茶選択の制御用に利用範囲を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n  // 利用範囲のエフェクト\r\n  useEffect(() => {\r\n    switch (usageRangeWatch) {\r\n      case 'outside':\r\n        setValue('teaSupply.inside', false, { shouldDirty: true });\r\n        break;\r\n      case 'inside':\r\n        setValue('teaSupply.outside', false, { shouldDirty: true });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [setValue, usageRangeWatch]);\r\n\r\n  // 予約可能日数の制御用に予約不可選択を監視\r\n  const noReservationsWatch = useWatch({ control, name: 'noReservations' });\r\n  // 予約不可のエフェクト\r\n  useEffect(() => {\r\n    if (noReservationsWatch) {\r\n      setValue('reservationPeriod', 0, { shouldDirty: true });\r\n    }\r\n  }, [noReservationsWatch, setValue]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.room.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'email'}\r\n        control={control}\r\n        label={t('settings.header.room.email')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            // eslint-disable-next-line no-useless-escape\r\n            value: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n            message: t('settings.form.room.error.email.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.room.sort')} errors={errors} />\r\n      <ControllerTextField\r\n        name={'usageRange'}\r\n        control={control}\r\n        label={t('settings.header.room.usage-range')}\r\n        required\r\n        selectList={nameOfUsageRange.map((value) => {\r\n          return { label: t(`settings.view.room.usage-range.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'type'}\r\n        control={control}\r\n        label={t('settings.header.room.type')}\r\n        required\r\n        selectList={nameOfRoomType.map((value) => {\r\n          return { label: t(`settings.view.room.type.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <Grid container style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'teaSupply.outside'}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('settings.header.room.tea-supply.outside')}\r\n            style={usageRangeWatch === 'inside' ? { display: 'none' } : undefined}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'teaSupply.inside'}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('settings.header.room.tea-supply.inside')}\r\n            style={usageRangeWatch === 'outside' ? { display: 'none' } : undefined}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <ControllerTextField\r\n        name={'location'}\r\n        control={control}\r\n        label={t('settings.header.room.location')}\r\n        required\r\n        selectList={locations?.map((location) => {\r\n          return { label: location.name, value: location.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'category'}\r\n        control={control}\r\n        label={t('settings.header.room.category')}\r\n        required\r\n        selectList={categories?.map((category) => {\r\n          return { label: category.name, value: category.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name=\"comment\" control={control} label={t('settings.header.room.comment')} multiline errors={errors} />\r\n      <Grid container>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'cleaningOption'}\r\n                control={control}\r\n                render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n              />\r\n            }\r\n            label={t('settings.header.room.cleaning-option')}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'onlyDuringWorkHours'}\r\n                control={control}\r\n                render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n              />\r\n            }\r\n            label={t('settings.header.room.only-during-work-hours')}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={'displayLivenessRooms'}\r\n                control={control}\r\n                render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n              />\r\n            }\r\n            label={t('settings.header.room.display-liveness-rooms')}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Accordion style={{ marginTop: 10 }}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>{t('settings.header.room.accordion.public-reservations')}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Controller\r\n                    name={'noReservations'}\r\n                    control={control}\r\n                    render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n                  />\r\n                }\r\n                label={t('settings.header.room.no-reservations')}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Controller\r\n                name={`reservationPeriod`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    type=\"number\"\r\n                    disabled={noReservationsWatch}\r\n                    inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                    {...field}\r\n                    label={t('settings.header.room.reservation-periode')}\r\n                    error={!!errors.reservationPeriod}\r\n                    helperText={!!errors.reservationPeriod && errors.reservationPeriod.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Room } from '_models/Room';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nexport function RoomSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ロケーションデータ取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  // カテゴリデータ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  const fieldTeaSupply = (result: boolean) => {\r\n    return result ? t('settings.view.room.tea-supply-true') : t('settings.view.room.tea-supply-false');\r\n  };\r\n  const columns: Columns<Room>[] = [\r\n    { title: t('settings.header.room.name'), field: 'name' },\r\n    // { title: t('settings.header.room.email'), field: 'email' },\r\n    { title: t('settings.header.room.sort'), field: 'sort' },\r\n    {\r\n      title: t('settings.header.room.usage-range'),\r\n      field: 'usageRange',\r\n      render: (rowData) => t(`settings.view.room.usage-range.${rowData.usageRange}`),\r\n    },\r\n    { title: t('settings.header.room.type'), field: 'type', render: (rowData) => t(`settings.view.room.type.${rowData.type}`) },\r\n    {\r\n      title: t('settings.header.room.tea-supply'),\r\n      field: 'teaSupply',\r\n      type: 'boolean',\r\n      sorting: false,\r\n      render: (rowData) => {\r\n        if (rowData.usageRange === 'none') {\r\n          return (\r\n            <>\r\n              <span>\r\n                {t('settings.view.room.tea-supply.outside')}\r\n                {fieldTeaSupply(rowData.teaSupply.outside)}\r\n              </span>\r\n              <br />\r\n              <span>\r\n                {t('settings.view.room.tea-supply.inside')}\r\n                {fieldTeaSupply(rowData.teaSupply.inside)}\r\n              </span>\r\n            </>\r\n          );\r\n        } else {\r\n          return <span>{fieldTeaSupply(rowData.teaSupply[rowData.usageRange])}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.location'),\r\n      field: 'location',\r\n      render: (rowData) => {\r\n        const target = locations?.find((location) => location.id === rowData.location);\r\n        return target?.name;\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.category'),\r\n      field: 'category',\r\n      render: (rowData) => {\r\n        const target = categories?.find((category) => category.id === rowData.category);\r\n        return target?.name;\r\n      },\r\n    },\r\n    { title: t('settings.header.room.cleaning-option'), field: 'cleaningOption', type: 'boolean' },\r\n    {\r\n      title: t('settings.header.room.reservation-periode'),\r\n      field: 'reservationPeriod',\r\n      render: (rowData) => {\r\n        return rowData.noReservations\r\n          ? `${t('settings.view.room.reservation-periode.disabled')}`\r\n          : !!rowData.reservationPeriod\r\n          ? rowData.reservationPeriod\r\n          : `${t('settings.view.room.reservation-periode.nolimit')}`;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Room> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    usageRange: 'none',\r\n    type: 'rooms',\r\n    sort: '',\r\n    teaSupply: { outside: false, inside: false },\r\n    comment: '',\r\n    cleaningOption: false,\r\n    noReservations: false,\r\n    reservationPeriod: 0,\r\n    location: '',\r\n    category: '',\r\n    onlyDuringWorkHours: false,\r\n    displayLivenessRooms: false,\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"room\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Room>\r\n            inputFields={{ type: 'room', item: <DataInputs locations={locations} categories={categories} />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Box, Button, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nimport BaseTemplate from '_components/BaseTemplate';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { get } from '_utils/Http';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nexport function ResetCache() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // 実行ボタン\r\n  const handleExecClick = async (_event: React.ChangeEvent<{}>) => {\r\n    if (window.confirm(`${t('settings.reset-cache.confirm')}`)) {\r\n      setIsLoading(true);\r\n      try {\r\n        await get('/api/cache/events/save');\r\n        alert(`${t('settings.reset-cache.done')}`);\r\n      } catch (error) {\r\n        alert(`${t('settings.reset-cache.error')}`);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isLoading} />\r\n      <BaseTemplate adminMode menuOpen>\r\n        <Paper square>\r\n          <Box p={2}>\r\n            <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n              <Grid container item xs={12} sm={9}>\r\n                <Typography component=\"h1\" variant=\"h6\">\r\n                  {t(`settings.title.reset-cache`)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<CloudDownloadIcon />} onClick={handleExecClick}>\r\n                  {t('settings.reset-cache.execution')}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Box p={2}>\r\n              <Alert severity=\"warning\">\r\n                <Typography>\r\n                  {t('settings.reset-cache.description1')}\r\n                  <br />\r\n                  {t('settings.reset-cache.description2')}\r\n                </Typography>\r\n              </Alert>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </BaseTemplate>\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { SignIn } from 'login';\r\nimport { AuthorizeWrapper } from 'login/Authorize';\r\nimport { VisitList } from 'main/visitList';\r\nimport { ByRoom } from 'main/byRoom';\r\nimport { Front } from 'main/front';\r\nimport { RoleSettings } from 'master/role';\r\nimport { LocationSettings } from 'master/location';\r\nimport { CategorySettings } from 'master/category';\r\nimport { RoomSettings } from 'master/room';\r\nimport { ResetCache } from 'master/ResetCache';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main\" component={VisitList} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/front\" component={Front} />\r\n        <Route exact path=\"/:location?/settings/role\" component={RoleSettings} />\r\n        <Route exact path=\"/:location?/settings/location\" component={LocationSettings} />\r\n        <Route exact path=\"/:location?/settings/category\" component={CategorySettings} />\r\n        <Route exact path=\"/:location?/settings/room\" component={RoomSettings} />\r\n        <Route exact path=\"/:location?/settings/resetcache\" component={ResetCache} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/:location?/\" to=\"/:location?/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\r\nimport { theme } from './_styles/Theme';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Routes } from './Routes';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\r\n        <Routes />\r\n      </MuiPickersUtilsProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    // wait: true,\r\n    useSuspense: false,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport App from './App';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_PAGE_TITLE}</title>\r\n      </Helmet>\r\n      <App />\r\n    </HelmetProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}