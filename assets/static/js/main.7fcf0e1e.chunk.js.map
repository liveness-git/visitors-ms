{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_styles/MakeLoginStyles.ts","login/Front/index.tsx","_components/Spinner.tsx","_utils/Http.ts","_utils/SessionStrage.ts","login/Main/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Main/Authorize.tsx","_components/MyCalendar.tsx","front/BaseTemplate.tsx","_utils/MaterialTableIcons.tsx","_utils/useLoadData.ts","_utils/FetchPostData.ts","front/visitList/RowDataDialog.tsx","front/visitList/DataTable.tsx","front/visitList/index.tsx","_components/MyLocation.tsx","main/BaseTemplate.tsx","main/RowDataBaseDialog.tsx","main/DeleteConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/AddrBookAutoComplete.tsx","main/ControllerTextField.tsx","main/ControllerDateTimePicker.tsx","main/RowDataInputDialog.tsx","main/RowDataReadDialog.tsx","main/DataTableBase.tsx","main/visitList/DataTable.tsx","main/visitList/index.tsx","main/byRoom/DataTable.tsx","main/byRoom/index.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["theme","createTheme","palette","primary","purple","secondary","amber","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","makeLoginStyles","makeStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","form","width","submit","useStyles","Login","t","useTranslation","classes","useForm","register","handleSubmit","errors","formState","Container","component","maxWidth","className","Avatar","LockOutlined","onSubmit","data","alert","console","log","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","value","message","error","email","helperText","type","password","Button","Box","mt","root","zIndex","Spinner","Backdrop","open","CircularProgress","http","request","a","fetch","response","json","parsedBody","ok","Error","statusText","get","path","args","method","Request","post","body","JSON","stringify","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","removeUserInfo","removeItem","SignIn","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","onClick","Alert","elevation","mySnackberReducer","state","action","severity","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","reason","Provider","AuthorizeWrapper","Authorize","snackberContext","useContext","useEffect","sendAuthCode","search","getItem","first","setTimeout","replace","MyCalendar","Paper","style","overflow","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","container","paddingTop","paddingBottom","link","textDecoration","text","BaseTemplate","currentDate","calendarOnChange","setOpen","AppBar","clsx","Toolbar","noWrap","Drawer","IconButton","Divider","List","ListItem","button","ListItemIcon","date","onChange","pt","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","useLoadData","initialData","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","fetchPostData","formData","Promise","resolve","reject","tableTheme","border","list","flexFlow","borderTop","boxSizing","flexBasis","light","borderLeft","borderBottom","field","borderRight","checkAction","textAlign","RowDataDialog","columns","muiPickContext","MuiPickersContext","setValue","reset","isSubmitting","dirtyFields","visitorId","checkIn","checkOut","visitorCardNumber","timestamp","format","locale","inputs","success","setField","listItems","slice","sort","b","map","column","Dialog","DialogTitle","DialogContent","dividers","p","disabled","disablePadding","DialogActions","grey","MuiTableRow","MuiTable","borderCollapse","DataTable","dialogOpen","setDialogOpen","currentRow","setCurrentRow","handleDialogClose","hidden","ThemeProvider","onRowClick","selectedRow","handleDialogOpen","options","showTitle","headerStyle","icons","VisitList","selectedDate","setSelectedDate","setTabValue","square","TabContext","TabList","indicatorColor","textColor","newValue","Tab","TabPanel","getTime","MyLocation","locations","history","useHistory","selected","setselected","length","FormControl","size","Select","event","target","push","MenuItem","name","menuButton","marginRight","menuButtonHidden","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","signedIn","setSignedIn","setEmail","checkAuth","parse","edge","currentTarget","AccountCircle","Menu","keepMounted","transformOrigin","to","Tooltip","ListItemText","useRowDataDialogStyles","RowDataBaseDialog","DeleteConfirmDialog","DialogContentText","RoomInputFields","control","rooms","roomId","disabledRoom","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","disabledTeaMember","setDisabledTeaMember","teaWatch","getNestedError","px","rules","render","select","option","Grid","item","xs","FormControlLabel","Switch","e","checked","inputProps","min","strRoomStatus","status","RoomReadFields","hiddenTeaSupply","roomName","roomEmail","roomStatus","numberOfVisitor","numberOfEmployee","AddrBookAutoComplete","filter","setFilter","addressbook","loading","onChangeHandle","Autocomplete","multiple","limitTags","undefined","onOpen","getOptionLabel","address","renderTags","tagValue","getTagProps","index","Chip","filterSelectedOptions","renderInput","mailto","InputProps","endAdornment","ev","_","ControllerTextField","multiline","ControllerDateTimePicker","getValues","handleDateTimeChange","validate","DateTimePicker","ampm","disablePast","minutesStep","formAction","note","inputformTheme","minRows","change5MinuteIntervals","Math","ceil","ADD_ROOM_KEY","getDefaultValues","start","end","mode","iCalUId","subject","visitCompany","visitorName","optional","resourcies","roomForEdit","comment","contactAddr","startTime","addMinutes","endTime","startTimeBufferMinute","RowDataInputDialog","delConfOpen","setDelConfOpen","defaultValues","trigger","setError","isDirty","Object","keys","reduce","newObj","startDateTime","endDateTime","cloneDeep","hiddenRooms","setHiddenRooms","defaultRoomsUrl","roomsUrl","setRoomsUrl","buildRoomsUrl","r","key","handleSearch","isMSMultipleLocations","startIcon","deleteOk","RowDataReadDialog","apptTime","reservationName","dataDialogReducer","inputOpen","readOpen","DataTableBase","dataDialogHook","handleInputDialogClose","handleReadDialogClose","cellApptTime","cellRoomName","cellRoomStatus","cellReservationName","cellVisitCompany","cellSubject","declinedApptTime","declinedRoomName","wordBreak","i18next","cellStyle","rowData","charAt","toUpperCase","components","Cell","columnDef","isAuthor","tableLayout","datePickerArea","actionButtonArea","datePicker","keyboardDatePicker","dataDialogState","dataDialogDispatch","py","sm","showTodayButton","KeyboardButtonProps","ByRoom","Routes","exact","Front","Main","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","wait","ReactDOM","StrictMode","document","getElementById"],"mappings":"0oKAIaA,EAAQC,YAAY,CAC/BC,QAAS,CACPC,QAASC,IACTC,UAAWC,KAEbC,MAAO,CACLC,aAAc,CACZC,QAAS,aAGbC,OAAQ,CACNC,QAAS,CAAEC,UAAW,KAExBC,UAAW,CACTC,WAAY,CACVC,QAAS,CACPC,SAAU,W,+HCbX,SAASC,IACd,OACE,eAACC,EAAA,EAAD,CAAYT,QAAQ,QAAQU,MAAM,gBAAgBC,MAAM,SAAxD,UACG,mCACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,8BAA3B,4BAEQ,KACP,IAAIC,MAAOC,cACX,O,YCbMC,EAAkB,WAC7B,OAAOC,aAAW,SAAC1B,GAAD,MAAY,CAC5B2B,MAAO,CACLC,UAAW5B,EAAM6B,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQlC,EAAM6B,QAAQ,GACtBM,gBAAiBnC,EAAME,QAAQG,UAAU+B,MAE3CC,KAAM,CACJC,MAAO,OACPV,UAAW5B,EAAM6B,QAAQ,IAE3BU,OAAQ,CACNL,OAAQlC,EAAM6B,QAAQ,EAAG,EAAG,SCZ5BW,EAAYf,IAOX,SAASgB,IACd,IAAQC,EAAMC,cAAND,EACFE,EAAUJ,IAEhB,EAIIK,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAQf,OACE,eAACE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,sBAAKC,UAAWT,EAAQjB,MAAxB,UACE,cAAC2B,EAAA,EAAD,CAAQD,UAAWT,EAAQX,OAA3B,SACE,cAACsB,EAAA,EAAD,MAEF,cAACrC,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAnC,oCAGA,uBAAM4C,UAAWT,EAAQP,KAAMmB,SAAUT,GAdL,SAACU,GACzCC,MAAM,QACNC,QAAQC,IAAIH,MAYR,UACE,cAACI,EAAA,EAAD,yBACE3B,OAAO,SACP4B,WAAS,EACTC,GAAG,QACHC,MAAOtB,EAAE,oBACTuB,aAAa,QACbC,WAAS,GACLpB,EAAS,QAAS,CACpBqB,SAAUzB,EAAE,wBACZ0B,QAAS,CACPC,MAAO,0CACPC,QAAS5B,EAAE,kCAXjB,IAcE6B,QAASvB,EAAOwB,MAChBC,WAAYzB,EAAOwB,OAASxB,EAAOwB,MAAMF,WAE3C,cAACT,EAAA,EAAD,yBACE3B,OAAO,SACP4B,WAAS,EACTE,MAAOtB,EAAE,uBACTgC,KAAK,WACLX,GAAG,WACHE,aAAa,oBACTnB,EAAS,WAAY,CACvBqB,SAAUzB,EAAE,0BARhB,IAUE6B,QAASvB,EAAO2B,SAChBF,WAAYzB,EAAO2B,UAAY3B,EAAO2B,SAASL,WAEjD,cAACM,EAAA,EAAD,CAAQF,KAAK,SAASZ,WAAS,EAACrD,QAAQ,YAAYU,MAAM,UAAUkC,UAAWT,EAAQL,OAAvF,SACGG,EAAE,6BAIT,cAACmC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC7D,EAAD,S,uDCzEFuB,EAAYd,aAAW,SAAC1B,GAAD,MAAY,CACvC+E,KAAM,CACJC,OAAQhF,EAAMgF,OAAOjE,QAAU,EAC/BI,MAAO,YAQJ,SAAS8D,EAAQ1E,GACtB,IAAMqC,EAAUJ,IAEhB,OACE,cAAC0C,EAAA,EAAD,CAAU7B,UAAWT,EAAQmC,KAAMI,KAAM5E,EAAM4E,KAA/C,SACE,cAACC,EAAA,EAAD,CAAkBjE,MAAM,cCVvB,SAAekE,EAAtB,kC,4CAAO,WAAuBC,GAAvB,eAAAC,EAAA,sEACmCC,MAAMF,GADzC,cACCG,EADD,yBAKyBA,EAASC,OALlC,OAKHD,EAASE,WALN,kEAQAF,EAASG,GART,uBASG,IAAIC,MAAMJ,EAASK,YATtB,iCAWEL,GAXF,0D,sBAaA,SAAeM,EAAtB,kC,4CAAO,WAAsBC,GAAtB,2BAAAT,EAAA,6DAAoCU,EAApC,+BAAwD,CAAEC,OAAQ,OAAlE,SACQb,EAAQ,IAAIc,QAAQH,EAAMC,IADlC,mF,wBAIA,SAAeG,EAAtB,oC,4CAAO,WAAuBJ,EAAcK,GAArC,2BAAAd,EAAA,6DAAgDU,EAAhD,+BAAoE,CAAEC,OAAQ,OAAQG,KAAMC,KAAKC,UAAUF,IAA3G,SACQhB,EAAQ,IAAIc,QAAQH,EAAMC,IADlC,mF,wBCtBP,IAAMO,EAAW,wBAaXC,EAAW,wBACJC,EAAe,SAACC,GAC3BC,eAAeC,QAAQJ,EAAUE,IAKtBG,EAAiB,WAC5BF,eAAeG,WAAWN,ICNtBjE,EAAYf,IAEX,SAASuF,IACd,IAAQtE,EAAMC,cAAND,EACFE,EAAUJ,IACVyE,EAAQC,cAGd,EAA+BC,oBAAS,GAAxC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,4BAAA/B,EAAA,sEAEhB8B,GAAU,GD1BiBE,EC2BVN,EAAMO,OAAOD,SD1BlCX,eAAeC,QAAQL,EAAUe,GCuBb,SAIKxB,EAAc,iBAJnB,QAIV0B,EAJU,QAKL9B,aACT+B,OAAOH,SAASjG,KAAOmG,EAAO9B,WAAWgC,KAN3B,gDAShBhE,QAAQC,IAAR,MATgB,kCDxBU,IAAC2D,ICwBX,oBAAH,qDAajB,OACE,eAACrE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC6B,EAAD,CAASE,KAAMiC,IACf,sBAAK/D,UAAWT,EAAQjB,MAAxB,UACE,cAAC2B,EAAA,EAAD,CAAQD,UAAWT,EAAQX,OAA3B,SACE,cAACsB,EAAA,EAAD,MAEF,cAACrC,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAnC,oCAGA,cAACmE,EAAA,EAAD,CAAQgD,QAASN,EAAaxD,WAAS,EAACrD,QAAQ,YAAYU,MAAM,UAAUkC,UAAWT,EAAQL,OAA/F,SACGG,EAAE,yBAGP,cAACmC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC7D,EAAD,S,wBCpDR,SAAS4G,GAAMtH,GACb,OAAO,cAAC,KAAD,aAAUuH,UAAW,EAAGrH,QAAQ,UAAaF,IAsB/C,IAAMwH,GAAoB,SAACC,EAAwBC,GACxD,OAAQA,EAAOvD,MACb,IAAK,OACH,OAAO,2BAAKsD,GAAZ,IAAmB7C,MAAM,IAC3B,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,QACH,OAAO,2BAAK6C,GAAZ,IAAmB7C,MAAM,EAAM+C,SAAUD,EAAOvD,KAAMJ,QAAS2D,EAAO3D,UACxE,QACE,OAAO0D,IAIE,SAASG,GAAW5H,GACjC,IAAQ2H,EAAqC3H,EAArC2H,SAAU5D,EAA2B/D,EAA3B+D,QAASa,EAAkB5E,EAAlB4E,KAAMiD,EAAY7H,EAAZ6H,QAEjC,OACE,cAACC,GAAA,EAAD,CAAUlD,KAAMA,EAAMmD,iBAAkB,KAAMF,QAASA,EAASG,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAA7G,SACE,cAAC,GAAD,CAAOL,QAASA,EAASF,SAAUA,EAAnC,SACG5D,MCtCF,IAAMoE,GAAoBC,wBAAc,IAMxC,SAASC,GAAmBrI,GACjC,IAAQsI,EAAatI,EAAbsI,SASR,EAA0BC,qBAAWf,GANC,CACpCG,SAAU,OACV5D,QAAS,GACTa,MAAM,IAGR,mBAAO6C,EAAP,KAAce,EAAd,KASA,OACE,qCACE,cAACZ,GAAD,2BAAgBH,GAAhB,IAAuBI,QATP,SAACY,EAA+BC,GACnC,cAAXA,GAGJF,EAAS,CAAErE,KAAM,aAMf,cAACgE,GAAkBQ,SAAnB,CAA4B7E,MAAO,CAAE2D,QAAOe,YAA5C,SAAyDF,OCrB/D,IAAMrG,GAAYf,IAEX,SAAS0H,KACd,OACE,cAACP,GAAD,UACE,cAACQ,GAAD,MAKC,SAASA,KACd,IAAMxG,EAAUJ,KACRE,EAAMC,cAAND,EACF2G,EAAkBC,qBAAWZ,IAGnC,EAA+BvB,oBAAS,GAAxC,mBAAOC,EAAP,KAAkBC,EAAlB,KAqCA,OAnCAkC,qBAAU,WAER,IAAMC,EAAY,uCAAG,kCAAAjE,EAAA,sEAEXkE,EAAS/B,OAAOH,SAASkC,OAFd,SAGI1D,EAAc,kBAAoB0D,GAHtC,YAGXhC,EAHW,QAIN9B,WAJM,oBAKf0B,GAAU,GACNI,EAAO9B,WAAWC,GACpByD,EAAgBN,SAAS,CAAErE,KAAM,UAAWJ,QAAS5B,EAAE,8BAEvD2G,EAAgBN,SAAS,CAAErE,KAAM,QAASJ,QAAS5B,EAAE,6BAGnD6E,EJxCLX,eAAe8C,QAAQlD,GAG9BI,eAAeG,WAAWP,GIuCbe,GAAyB,cAAbA,EAdF,kCAeOxB,EAAc,mBAfrB,aAeP4D,EAfO,QAgBHhE,WAhBG,iBAiBX4B,EAAWoC,EAAMhE,WAAWgC,IAjBjB,8BAmBL,IAAI9B,MAAM,+BAnBL,QAsBf+D,YAAW,WACTlC,OAAOH,SAASsC,QAAhB,WAA4BtC,EAA5B,YACC,MAxBY,0DA2BjB5D,QAAQC,IAAR,MA3BiB,0DAAH,qDA8BlB4F,MACC,IAGD,eAACtG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC6B,EAAD,CAASE,KAAMiC,IACf,sBAAK/D,UAAWT,EAAQjB,MAAxB,UACE,cAAC2B,EAAA,EAAD,CAAQD,UAAWT,EAAQX,OAA3B,SACE,cAACsB,EAAA,EAAD,MAEF,cAACrC,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAnC,uCAIF,cAACoE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC7D,EAAD,S,8NCjEO6I,OARf,SAAoBvJ,GAClB,OACE,cAACwJ,GAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,UAA1B,SACE,cAAC,KAAD,eAAc1J,OCadiC,GAAYd,aAAW,SAAC1B,GAG5B,OAAOkK,aAAa,CAClBnF,KAAM,CACJjD,QAAS,QAEXqI,OAAQ,CACNnF,OAAQhF,EAAMgF,OAAOoF,OAAS,EAC9BC,WAAYrK,EAAMsK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAdgB,IAehBvI,MAAM,eAAD,OAfW,IAeX,OACL+H,WAAYrK,EAAMsK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASI,kBAGzCnK,QAAS,CACPoK,aAAc,IAEhBC,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZ9I,MA9BgB,IA+BhB+H,WAAYrK,EAAMsK,YAAYC,OAAO,QAAS,CAC5CC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASI,kBAGzCO,iBAAkB,CAChBC,UAAW,SACXjB,WAAYrK,EAAMsK,YAAYC,OAAO,QAAS,CAC5CC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASC,gBAEvCrI,MAAOtC,EAAM6B,QAAQ,IAKvB0J,gBAAgB,aACdzJ,QAAS,OACTE,WAAY,SACZwJ,eAAgB,WAChBC,QAAS,SACNzL,EAAMU,OAAOC,SAElB+K,eAAgB,CACd5J,QAAS,QAEX6J,UAAW,CACTC,aAAc5L,EAAM6B,QAAQ,IAE9BgK,aAAc7L,EAAMU,OAAOC,QAC3BmL,QAAS,CACPb,SAAU,EACVc,OAAQ,QACR9B,SAAU,QAEZ+B,UAAW,CACTC,WAAYjM,EAAM6B,QAAQ,GAC1BqK,cAAelM,EAAM6B,QAAQ,IAE/BF,MAAO,CACL8J,QAASzL,EAAM6B,QAAQ,GACvBC,QAAS,OACTmI,SAAU,OACVlI,cAAe,UAEjBoK,KAAM,CACJC,eAAgB,OAChBjL,MAAOnB,EAAME,QAAQmM,KAAKhM,gBA4EjBiM,GAhEM,SAAC,GAA2E,IAAzEzD,EAAwE,EAAxEA,SAAUmC,EAA8D,EAA9DA,MAAOuB,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,iBAE9C5J,EAAUJ,KAGhB,EAAwB2E,oBAAS,GAAjC,mBAAOhC,EAAP,KAAasH,EAAb,KAQA,OACE,cAAC7D,GAAD,UACE,sBAAKvF,UAAWT,EAAQmC,KAAxB,UACE,cAAC2H,GAAA,EAAD,CAAQvB,SAAS,WAAW9H,UAAWsJ,aAAK/J,EAAQuH,OAAQhF,GAAQvC,EAAQgI,aAA5E,SACE,cAACgC,GAAA,EAAD,CAASvJ,UAAWT,EAAQjC,QAA5B,SACE,cAACO,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAKU,MAAM,UAAU0L,QAAM,EAACxJ,UAAWT,EAAQoI,MAAlF,wCAKJ,eAAC8B,GAAA,EAAD,CACErM,QAAQ,YACRmC,QAAS,CACPjB,MAAOgL,aAAK/J,EAAQsI,aAAc/F,GAAQvC,EAAQyI,mBAEpDlG,KAAMA,EALR,UAOE,qBAAK9B,UAAWT,EAAQ2I,gBAAxB,SACE,cAACwB,GAAA,EAAD,CAAYnF,QAtBI,WACxB6E,GAAQ,IAqBA,SACE,cAAC,KAAD,QAGJ,cAACO,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAUC,QAAM,EAACvF,QA/BF,WACvB6E,GAAQ,IA8B4CpJ,UAAWsJ,aAAKxH,GAAQvC,EAAQ8I,gBAA5E,SACE,cAAC0B,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACF,GAAA,EAAD,CAAU7J,UAAWsJ,cAAMxH,GAAQvC,EAAQ8I,gBAA3C,SACE,cAAC,GAAD,CAAY2B,KAAMd,EAAae,SAAUd,YAI/C,uBAAMnJ,UAAWT,EAAQkJ,QAAzB,UACE,qBAAKzI,UAAWT,EAAQiJ,eACxB,eAAC3I,EAAA,EAAD,CAAWE,SAAS,KAAKC,UAAWT,EAAQoJ,UAA5C,UACE,cAAC9K,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAKU,MAAM,UAAU0L,QAAM,EAACxJ,UAAWT,EAAQ+I,UAAlF,SACGX,IAEFnC,EACD,cAAChE,EAAA,EAAD,CAAK0I,GAAI,EAAT,SACE,cAACtM,EAAD,kB,+UCrJDuM,GAAoB,CAC/BC,IAAKC,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAYpN,GAAZ,IAAmBoN,IAAKA,QACxDC,MAAOF,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAWpN,GAAX,IAAkBoN,IAAKA,QACzDE,MAAOH,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAWpN,GAAX,IAAkBoN,IAAKA,QACzDG,OAAQJ,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAmBpN,GAAnB,IAA0BoN,IAAKA,QAClEI,YAAaL,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAkBpN,GAAlB,IAAyBoN,IAAKA,QACtEK,KAAMN,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAUpN,GAAV,IAAiBoN,IAAKA,QACvDM,OAAQP,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAapN,GAAb,IAAoBoN,IAAKA,QAC5DO,OAAQR,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAgBpN,GAAhB,IAAuBoN,IAAKA,QAC/DQ,UAAWT,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAepN,GAAf,IAAsBoN,IAAKA,QACjES,SAAUV,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAcpN,GAAd,IAAqBoN,IAAKA,QAC/DU,SAAUX,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAkBpN,GAAlB,IAAyBoN,IAAKA,QACnEW,aAAcZ,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAiBpN,GAAjB,IAAwBoN,IAAKA,QACtEY,YAAab,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAWpN,GAAX,IAAkBoN,IAAKA,QAC/Da,OAAQd,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAYpN,GAAZ,IAAmBoN,IAAKA,QAC3Dc,UAAWf,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAiBpN,GAAjB,IAAwBoN,IAAKA,QACnEe,gBAAiBhB,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAYpN,GAAZ,IAAmBoN,IAAKA,QACpEgB,WAAYjB,sBAAW,SAACnN,EAAOoN,GAAR,OAAgB,cAAC,KAAD,2BAAgBpN,GAAhB,IAAuBoN,IAAKA,SC7B9D,SAASiB,GAAejH,EAAakH,GAE1C,MAAwB1H,mBAAwB0H,GAAhD,mBAAOpL,EAAP,KAAaqL,EAAb,KAEA,EAAkC3H,oBAAS,GAA3C,mBAAOC,EAAP,KAAkB2H,EAAlB,KAEA,EAA8B5H,oBAAS,GAAvC,mBAAO6H,EAAP,KAAgBC,EAAhB,KAGMC,EAAYC,sBAAW,sBAAC,4BAAA5J,EAAA,6DAC5B0J,GAAW,GACXF,GAAa,GAFe,kBAILhJ,EAAO4B,GAJF,OAIpBF,EAJoB,OAM1B9D,QAAQC,IAAI+D,GACZhE,QAAQC,IAAI6D,EAAO9B,YACf8B,EAAO9B,YAAYmJ,EAAQrH,EAAO9B,YARZ,kDAU1BsJ,GAAW,GACXtL,QAAQC,IAAR,MAX0B,QAa5BmL,GAAa,GAbe,0DAc3B,CAACpH,IAGEyH,EAASD,sBAAW,sBAAC,sBAAA5J,EAAA,+EAAY2J,KAAZ,2CAAyB,CAACA,IAOrD,OAJA3F,qBAAU,WACR2F,MACC,CAACA,IAEG,CAAC,CAAEzL,OAAM2D,YAAW4H,WAAWI,G,4CCjCjC,SAAeC,GAAtB,qC,8CAAO,WAAgC1H,EAAa2H,GAA7C,iBAAA/J,EAAA,sEAGH5B,QAAQC,IAAI,WAAY0L,GAHrB,SAIclJ,EAAwBuB,EAAK2H,GAJ3C,UAIH7J,EAJG,OAKH9B,QAAQC,IAAI,WAAY6B,KAElBgC,EAAShC,EAASE,YAPrB,0CASM4J,QAAQC,QAAQ/H,IATtB,iCAWM8H,QAAQE,OAAO,IAAI5J,MAAM,qBAX/B,iEAcHlC,QAAQC,IAAR,MAdG,kBAeI2L,QAAQE,OAAR,OAfJ,2D,sBCaP,IAAMjN,GAAYd,aAAW,SAACgO,GAC5B,IAAMC,EAAS,iCAEf,OAAOzF,aAAa,CAClB0F,KAAM,CACJ9N,QAAS,OACT+N,SAAU,WACVvN,MAAO,OACP,oBAAqB,CACnBwN,UAAWH,IAGf3E,MAAO,CACL+E,UAAW,aACXC,UAAW,MACXvE,QAAS,QACTtJ,gBAAiBuN,EAAWxP,QAAQC,QAAQ8P,MAC5CC,WAAYP,EACZQ,aAAcR,GAEhBS,MAAO,CACLL,UAAW,aACXC,UAAW,MACXvE,QAAS,QACT4E,YAAaV,EACbQ,aAAcR,GAEhBW,YAAa,CACXC,UAAW,SACX3E,aAAc,OACd,WAAY,CACV1J,OAAQ,OACRI,MAAO,aAiBR,SAASkO,GAAcjQ,GAC5B,IAAQ4E,EAAsD5E,EAAtD4E,KAAMiD,EAAgD7H,EAAhD6H,QAASmE,EAAuChM,EAAvCgM,YAAa9I,EAA0BlD,EAA1BkD,KAAMgN,EAAoBlQ,EAApBkQ,QAASrB,EAAW7O,EAAX6O,OAE3C1M,EAAMC,cAAND,EACFE,EAAUJ,KACVkO,EAAiBpH,qBAAWqH,sBAC5BtH,EAAkBC,qBAAWZ,IAGnC,EAMI7F,cALFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACA6N,EAHF,EAGEA,SACAC,EAJF,EAIEA,MAJF,IAKE5N,UAAaD,EALf,EAKeA,OAAQ8N,EALvB,EAKuBA,aAAcC,EALrC,EAKqCA,YAIrCxH,qBAAU,WACJpE,EACF0L,EAAM,CACJ9M,GAAIN,EAAKuN,UACTC,QAASxN,EAAKwN,QACdC,SAAUzN,EAAKyN,SACfC,kBAAmB1N,EAAK0N,oBAG1BN,MAED,CAACpN,EAAM0B,EAAM0L,IAEhB,IAAMO,EAAY,kBAAMC,mBAAO,IAAI9P,KAAQ,sBAAuB,CAAE+P,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAgBY,UActF9N,EAAQ,uCAAG,WAAO8L,GAAP,SAAA/J,EAAA,+EAEQ8J,GAAc,uBAAwB,CAAEkC,OAAQjC,EAAUyB,YAAaA,IAF/E,kBAGDS,QAHC,iCAILpC,IAJK,OAKXhH,IACAiB,EAAgBN,SAAS,CAAErE,KAAM,UAAWJ,QAAS5B,EAAE,+BAN5C,wBAQX2G,EAAgBN,SAAS,CAAErE,KAAM,QAASJ,QAAS5B,EAAE,8BAR1C,0DAWb2G,EAAgBN,SAAS,CAAErE,KAAM,QAASJ,QAAS,KAAiBA,UAXvD,0DAAH,sDAqBRmN,EAAW,SAACrB,EAAe/L,GAC/B,OAAQ+L,GAEN,IAAK,WAEH,OADaiB,mBAAO9E,EAAa,aAAc,CAAE+E,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAgBY,SAC3D,IAAMjN,EACtB,IAAK,YACH,OAAe3B,EAAR2B,EAAU,kCAAuC,kCAE1D,QACE,OAAOA,IAIPqN,EAAYjB,EACfkB,QACAC,MAAK,SAAUrM,EAAGsM,GACjB,OAAOtM,EAAEqM,KAAOC,EAAED,QAEnBE,KAAI,SAACC,GACJ,IAAM3B,EAAQ2B,EAAO3B,MACfpF,EAAQ+G,EAAO/G,MACf3G,EAAQZ,EAAK2M,GACnB,OACE,qBAAgB/M,UAAWT,EAAQgN,KAAnC,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCA,IAChC,qBAAK3H,UAAWT,EAAQwN,MAAxB,SAAgCqB,EAASrB,EAAO/L,OAFzC+L,MAOf,OACE,qCACE,cAACnL,EAAD,CAASE,KAAM2L,IACf,eAACkB,GAAA,EAAD,CAAQ7M,KAAMA,EAAMiD,QAASA,EAAStE,WAAW,EAAMV,SAAS,KAAK,kBAAgB,oBAArF,UACE,cAAC6O,GAAA,EAAD,CAAalO,GAAG,oBAAhB,SAAqCrB,EAAE,uBACvC,eAACwP,GAAA,EAAD,CAAeC,UAAQ,EAAvB,UACE,cAACtN,EAAA,EAAD,CAAKuN,EAAG,EAAR,SACE,iCACE,sBAAK/O,UAAWT,EAAQ0N,YAAxB,UACE,cAAC1L,EAAA,EAAD,CAAQgD,QAxEA,WACpBgJ,EAAS,UAAWQ,KACpBrO,EAAaS,EAAbT,IAsE4CtC,QAAQ,YAAYU,MAAM,YAAYkR,WAAY5O,EAAKyN,SAAvF,SACGxO,EAAE,iCAEL,cAACkC,EAAA,EAAD,CAAQgD,QAtEC,WACrBgJ,EAAS,WAAYQ,KACrBrO,EAAaS,EAAbT,IAoE6CtC,QAAQ,YAAYU,MAAM,YAAYkR,UAAW5O,EAAKwN,QAAvF,SACGvO,EAAE,qCAGP,8BACE,cAACmB,EAAA,EAAD,yBACE3B,OAAO,SACP4B,WAAS,EACTG,aAAa,MACb9C,MAAM,YACN4C,GAAG,oBACHC,MAAOtB,EAAE,wCAETwB,WAAS,GACLpB,EAAS,oBAAqB,KATpC,IAYEyB,QAASvB,EAAOmO,kBAChB1M,WAAYzB,EAAOmO,mBAAqBnO,EAAOmO,kBAAkB7M,kBAKzE,cAACO,EAAA,EAAD,CAAKuN,EAAG,EAAR,SACE,cAACnF,GAAA,EAAD,CAAMqF,gBAAgB,EAAtB,SAA6BZ,SAGjC,cAACa,GAAA,EAAD,UACE,cAAC3N,EAAA,EAAD,CAAQgD,QA7EK,WACnBQ,KA4EqCjH,MAAM,YAArC,SACGuB,EAAE,uCClMR,IAAMgN,GAAazP,YAAY,CACpCC,QAAS,CACPC,QAAS,CACPiC,KAAMoQ,KAAK,MAEbnS,UAAW,CACT+B,KAAMhC,KAAO,OAGjBG,MAAO,CACLkS,YAAa,IAKf5R,UAAW,CACT6R,SAAU,CACR3N,KAAM,CACJ4N,eAAgB,gBAqBjB,SAASC,GAAUrS,GACxB,IAAQgM,EAAqBhM,EAArBgM,YAAa5E,EAAQpH,EAARoH,IAEbjF,EAAMC,cAAND,EAGR,EAA+CkM,GAAuBjH,EAAK,IAA3E,0BAASlE,EAAT,EAASA,KAAM2D,EAAf,EAAeA,UAAW4H,EAA1B,EAA0BA,QAAWI,EAArC,KAGA,EAAoCjI,oBAAS,GAA7C,mBAAO0L,EAAP,KAAmBC,EAAnB,KAEA,EAAoC3L,mBAAyB,MAA7D,mBAAO4L,EAAP,KAAmBC,EAAnB,KAQMC,EAAiB,uCAAG,sBAAA1N,EAAA,sDACxBuN,GAAc,GADU,2CAAH,qDAIjBrC,EAAqB,CACzB,CAAEzF,MAAOtI,EAAE,+BAAgC0N,MAAO,WAAYwB,KAAM,GACpE,CAAE5G,MAAOtI,EAAE,+BAAgC0N,MAAO,WAAYwB,KAAM,GACpE,CAAE5G,MAAOtI,EAAE,mCAAoC0N,MAAO,eAAgBwB,KAAM,GAC5E,CAAE5G,MAAOtI,EAAE,kCAAmC0N,MAAO,cAAe8C,QAAQ,EAAMtB,KAAM,GACxF,CAAE5G,MAAOtI,EAAE,gCAAiC0N,MAAO,YAAa8C,QAAQ,EAAMtB,KAAM,GACpF,CAAE5G,MAAOtI,EAAE,uCAAwC0N,MAAO,kBAAmB8C,QAAQ,EAAMtB,KAAM,GACjG,CAAE5G,MAAOtI,EAAE,wCAAyC0N,MAAO,mBAAoB8C,QAAQ,EAAMtB,KAAM,GACnG,CAAE5G,MAAOtI,EAAE,6BAA8B0N,MAAO,UAAW8C,QAAQ,EAAMtB,KAAM,IAC/E,CAAE5G,MAAOtI,EAAE,sCAAuC0N,MAAO,kBAAmBwB,KAAM,IAClF,CAAE5G,MAAOtI,EAAE,kCAAmC0N,MAAO,cAAewB,KAAM,IAC1E,CAAE5G,MAAOtI,EAAE,8BAA+B0N,MAAO,UAAW1L,KAAM,UAAWkN,KAAM,GACnF,CAAE5G,MAAOtI,EAAE,+BAAgC0N,MAAO,WAAY1L,KAAM,UAAWkN,KAAM,GACrF,CAAE5G,MAAOtI,EAAE,yCAA0C0N,MAAO,oBAAqB8C,QAAQ,EAAMtB,KAAM,KAIvG,OAAI5C,EACK,8BAAMtM,EAAE,6BAIf,eAACyQ,EAAA,EAAD,CAAenT,MAAO0P,GAAtB,UACE,cAACzK,EAAD,CAASE,KAAMiC,IACf,cAAC,KAAD,CACEqJ,QAASA,EACThN,KAAMA,EACN2P,WAAY,SAACpK,EAAQqK,GAAT,QAA4BA,GApCrB,SAACA,GACxBP,GAAc,GACdE,EAAcK,GAkC6CC,CAAiBD,IACxEE,QAAS,CACPC,WAAW,EACX7S,SAAS,EACT8I,QAAQ,EACRgK,YAAa,CAAEtR,gBAAiBuN,GAAWxP,QAAQC,QAAQ8P,QAE7DyD,MAAOlG,KAERuF,GACC,cAACvC,GAAD,CAAerL,KAAM0N,EAAYzK,QAAS6K,EAAmB1G,YAAaA,EAAa9I,KAAMsP,EAAYtC,QAASA,EAASrB,OAAQA,OCnGpI,SAASuE,KACd,IAAQjR,EAAMC,cAAND,EAGR,EAAwCyE,mBAAsB,IAAI5F,MAAlE,mBAAOqS,EAAP,KAAqBC,EAArB,KAMA,EAA6B1M,mBAAS,KAAtC,mBAAO9C,EAAP,KAAcyP,EAAd,KAKMpD,EAAiBpH,qBAAWqH,sBAC5B3F,EAAQ4I,EAAevC,mBAAOuC,EAAc,aAAc,CAAEtC,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAgBY,SAAY,IAAM5O,EAAE,mBAAqB,GAEnI,OACE,cAAC,GAAD,CAAcsI,MAAOA,EAAOuB,YAAaqH,EAAcpH,iBAdhC,SAACa,GACxBwG,EAAgBxG,IAahB,SACE,cAACtD,GAAA,EAAD,CAAOgK,QAAM,EAAb,SACE,eAACC,GAAA,EAAD,CAAY3P,MAAOA,EAAnB,UACE,cAACqI,GAAA,EAAD,CAAQvB,SAAS,SAAShK,MAAM,UAAhC,SACE,eAAC8S,GAAA,EAAD,CAASC,eAAe,UAAUC,UAAU,UAAU1T,QAAQ,YAAY6M,SAZ5D,SAACtE,EAA+BoL,GACtDN,EAAYM,IAWiG,aAAW,YAAhH,UACE,cAACC,GAAA,EAAD,CAAKrQ,MAAOtB,EAAE,kCAAmC2B,MAAM,MACvD,cAACgQ,GAAA,EAAD,CAAKrQ,MAAOtB,EAAE,4BAA6B2B,MAAM,WAGrD,cAACiQ,GAAA,EAAD,CAAUjQ,MAAM,IAAhB,SACE,cAACuO,GAAD,CAAWrG,YAAaqH,EAAejM,IAAG,yCAAoCiM,EAAcW,eAE9F,cAACD,GAAA,EAAD,CAAUjQ,MAAM,IAAhB,SACE,cAACuO,GAAD,CAAWrG,YAAaqH,EAAejM,IAAG,yCAAoCiM,EAAcW,sB,kLCxCjG,SAASC,KAEd,MAA8B5F,GAAW,oBAAkC,IAA5D6F,EAAf,oBAAShR,KAEHiR,EAAUC,cACV1N,EAAQC,cAGd,EAAgCC,mBAAiBF,EAAMO,OAAOD,UAA9D,mBAAOqN,EAAP,KAAiBC,EAAjB,KAOA,OAAKJ,GAAkC,IAArBA,EAAUK,OAK1B,cAACC,GAAA,EAAD,CAAa5T,MAAM,UAAUe,OAAO,QAAQ8S,KAAK,QAAjD,SACE,cAACC,GAAA,EAAD,CAAQjL,MAAO,CAAE7I,MAAO,SAAWkD,MAAOuQ,EAAUtH,SAZjC,SAAC4H,GACtBL,EAAYK,EAAMC,OAAO9Q,OACzB,IAAMsD,EAAMV,EAAMjB,KAAK6D,QAAQ,aAAcqL,EAAMC,OAAO9Q,OAC1DqQ,EAAQU,KAAKzN,IASX,SACG8M,EAAU3C,KAAI,SAACrO,GACd,OACE,cAAC4R,GAAA,EAAD,CAAyBhR,MAAOZ,EAAKkE,IAArC,SACGlE,EAAK6R,MADO7R,EAAKkE,YARrB,6BCYX,IAAMnF,GAAYd,aAAW,SAAC1B,GAG5B,OAAOkK,aAAa,CAClBnF,KAAM,CACJjD,QAAS,QAEXqI,OAAQ,CACNnF,OAAQhF,EAAMgF,OAAOoF,OAAS,EAC9BC,WAAYrK,EAAMsK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAdgB,IAehBvI,MAAM,eAAD,OAfW,IAeX,OACL+H,WAAYrK,EAAMsK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASI,kBAGzCnK,QAAS,CACPoK,aAAc,IAEhBwK,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChB3T,QAAS,QAEXkJ,MAAO,CACLC,SAAU,GAEZ1D,SAAU,CACRpG,MAAO,SAET+J,YAAa,CACXC,SAAU,WACVC,WAAY,SACZ9I,MAvCgB,IAwChB+H,WAAYrK,EAAMsK,YAAYC,OAAO,QAAS,CAC5CC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASI,kBAGzCO,iBAAkB,CAChBC,UAAW,SACXjB,WAAYrK,EAAMsK,YAAYC,OAAO,QAAS,CAC5CC,OAAQxK,EAAMsK,YAAYE,OAAOC,MACjCC,SAAU1K,EAAMsK,YAAYI,SAASC,gBAEvCrI,MAAOtC,EAAM6B,QAAQ,IAKvB0J,gBAAgB,aACdzJ,QAAS,OACTE,WAAY,SACZwJ,eAAgB,WAChBC,QAAS,SACNzL,EAAMU,OAAOC,SAElB+K,eAAgB,CACd5J,QAAS,QAEX6J,UAAW,CACTC,aAAc5L,EAAM6B,QAAQ,IAE9BgK,aAAc7L,EAAMU,OAAOC,QAC3BmL,QAAS,CACPb,SAAU,EACVc,OAAQ,QACR9B,SAAU,QAEZ+B,UAAW,CACTC,WAAYjM,EAAM6B,QAAQ,GAC1BqK,cAAelM,EAAM6B,QAAQ,IAE/BF,MAAO,CACL8J,QAASzL,EAAM6B,QAAQ,GACvBC,QAAS,OACTmI,SAAU,OACVlI,cAAe,UAEjBoK,KAAM,CACJC,eAAgB,OAEhBjL,MAAO,4BA4MEmL,GAnMM,SAAC,GAAqC,IAAnCzD,EAAkC,EAAlCA,SACdnG,EAAMC,cAAND,EACFE,EAAUJ,KACVyE,EAAQC,cAGd,EAAwBC,oBAAS,GAAjC,mBAAOhC,EAAP,KAAasH,EAAb,KASA,EAAgCiJ,IAAMvO,SAA6B,MAAnE,mBAAOwO,EAAP,KAAiBC,EAAjB,KACMC,EAAkBC,QAAQH,GAI1BI,EAAkB,WACtBH,EAAY,OAERI,EAAa,uCAAG,sBAAAzQ,EAAA,+EAEGQ,EAAwB,kBAF3B,cAGPH,KACTkB,IACAY,OAAOH,SAASjG,KAAO,UALP,gDAQlBqC,QAAQC,IAAR,MARkB,yDAAH,qDAanB,EAAgCuD,oBAAS,GAAzC,mBAAO8O,EAAP,KAAiBC,EAAjB,KACA,EAA0B/O,mBAAS,IAAnC,mBAAO3C,EAAP,KAAc2R,EAAd,KAGMC,EAAYjH,sBAAW,sBAAC,kCAAA5J,EAAA,oEAEpB9B,Ed1JHmD,eAAe8C,QAAQjD,IcwJA,gBAKlBE,EAAOL,KAAK+P,MAAM5S,GACxB0S,EAASxP,EAAKnC,OACd0R,GAAY,GAPY,wCAUHnQ,EAAU,YAVP,SAUlB0B,EAVkB,QAWb9B,YACHgB,EAAOc,EAAO9B,WACpBe,EAAaJ,KAAKC,UAAUI,IAC5BwP,EAASxP,EAAKnC,OACd0R,GAAY,KAGZpP,IACAoP,GAAY,GACZvS,QAAQC,IAAI,6BApBU,0DAyB1BkD,IACAY,OAAOH,SAASjG,KAAO,SA1BG,0DA4B3B,IAWH,OAJAiI,qBAAU,WACR6M,MACC,CAACA,IAECH,EAKH,cAACrN,GAAD,UACE,sBAAKvF,UAAWT,EAAQmC,KAAxB,UACE,cAAC2H,GAAA,EAAD,CAAQvB,SAAS,WAAW9H,UAAWsJ,aAAK/J,EAAQuH,OAAQhF,GAAQvC,EAAQgI,aAA5E,SACE,eAACgC,GAAA,EAAD,CAASvJ,UAAWT,EAAQjC,QAA5B,UACE,cAACoM,GAAA,EAAD,CACEuJ,KAAK,QACLnV,MAAM,UACN,aAAW,cACXyG,QArFa,WACvB6E,GAAQ,IAqFEpJ,UAAWsJ,aAAK/J,EAAQ2S,WAAYpQ,GAAQvC,EAAQ6S,kBALtD,SAOE,cAAC,KAAD,MAEF,cAACvU,EAAA,EAAD,CAAYiC,UAAU,KAAK1C,QAAQ,KAAKU,MAAM,UAAU0L,QAAM,EAACxJ,UAAWT,EAAQoI,MAAlF,oCAGA,8BACE,cAACwJ,GAAD,MAEF,gCACE,cAACzH,GAAA,EAAD,CACE,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdnF,QA3FY,SAACsN,GACzBU,EAAYV,EAAMqB,gBA2FNpV,MAAM,UALR,SAOE,cAACqV,GAAA,EAAD,MAEF,eAACC,GAAA,EAAD,CACE1S,GAAG,cACH4R,SAAUA,EACVpN,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdiO,aAAW,EACXC,gBAAiB,CACfnO,SAAU,MACVC,WAAY,SAEdtD,KAAM0Q,EACNzN,QAAS2N,EAbX,UAeE,cAACV,GAAA,EAAD,CAAUzN,QAASmO,EAAnB,SAAqCvR,IACrC,cAAC6Q,GAAA,EAAD,CAAUzN,QAASoO,EAAnB,SAAmCtT,EAAE,iCAK7C,eAACoK,GAAA,EAAD,CACErM,QAAQ,YACRmC,QAAS,CACPjB,MAAOgL,aAAK/J,EAAQsI,aAAc/F,GAAQvC,EAAQyI,mBAEpDlG,KAAMA,EALR,UAOE,qBAAK9B,UAAWT,EAAQ2I,gBAAxB,SACE,cAACwB,GAAA,EAAD,CAAYnF,QApII,WACxB6E,GAAQ,IAmIA,SACE,cAAC,KAAD,QAGJ,cAACO,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACE,cAAC,IAAD,CAAM2J,GAAE,WAAM3P,EAAMO,OAAOD,SAAnB,SAAoClE,UAAWT,EAAQuJ,KAA/D,SACE,eAACe,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAAC0J,GAAA,EAAD,CAAS7L,MAAOtI,EAAE,gCAAlB,SACE,cAAC0K,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAAC0J,GAAA,EAAD,CAAc3W,QAASuC,EAAE,uCAG7B,cAAC,IAAD,CAAMkU,GAAE,WAAM3P,EAAMO,OAAOD,SAAnB,gBAA2ClE,UAAWT,EAAQuJ,KAAtE,SACE,eAACe,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAAC0J,GAAA,EAAD,CAAS7L,MAAOtI,EAAE,6BAAlB,SACE,cAAC0K,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAAC0J,GAAA,EAAD,CAAc3W,QAASuC,EAAE,oCAG7B,eAACwK,GAAA,EAAD,CAAUC,QAAM,EAACvF,QAjGP,WAClBF,OAAOH,SAAS6H,UAgGR,UACE,cAACyH,GAAA,EAAD,CAAS7L,MAAOtI,EAAE,qBAAlB,SACE,cAAC0K,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAAC0J,GAAA,EAAD,CAAc3W,QAASuC,EAAE,gCAI/B,uBAAMW,UAAWT,EAAQkJ,QAAzB,UACE,qBAAKzI,UAAWT,EAAQiJ,eACxB,eAAC3I,EAAA,EAAD,CAAWE,SAAS,KAAKC,UAAWT,EAAQoJ,UAA5C,UAIGnD,EACD,cAAChE,EAAA,EAAD,CAAK0I,GAAI,EAAT,SACE,cAACtM,EAAD,iBA1GH,8B,4FC1ME8V,GAAyBrV,aAAW,SAACgO,GAChD,IAAMC,EAAS,iCAEf,OAAOzF,aAAa,CAClB0F,KAAM,CACJ9N,QAAS,OAGT,oBAAqB,CACnBgO,UAAWH,IAGf3E,MAAO,CACL+E,UAAW,aACXC,UAAW,MACXvE,QAAS,QACTtJ,gBAAiBuN,EAAWxP,QAAQC,QAAQ8P,MAC5CC,WAAYP,EACZQ,aAAcR,GAEhBS,MAAO,CACLL,UAAW,aACXC,UAAW,MACXvE,QAAS,QACT4E,YAAaV,EACbQ,aAAcR,EACdvE,WAAY,iBAYX,SAAS4L,GAAkBzW,GAChC,IAAQ4E,EAA4B5E,EAA5B4E,KAAMiD,EAAsB7H,EAAtB6H,QAASS,EAAatI,EAAbsI,SAEfnG,EAAMC,cAAND,EAMR,OACE,mCACE,eAACsP,GAAA,EAAD,CAAQ7M,KAAMA,EAAMiD,QAASA,EAAStE,WAAW,EAAMV,SAAS,KAAK,kBAAgB,oBAArF,UACE,cAAC6O,GAAA,EAAD,CAAalO,GAAG,oBAAhB,SAAqCrB,EAAE,uBACvC,cAACwP,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SAAyBtJ,IACzB,cAAC0J,GAAA,EAAD,UACE,cAAC3N,EAAA,EAAD,CAAQgD,QAVK,WACnBQ,KASM,SAAgC1F,EAAE,sC,cCpDrC,SAASuU,GAAoB1W,GAClC,IAAQ4E,EAAkB5E,EAAlB4E,KAAMiD,EAAY7H,EAAZ6H,QAEN1F,EAAMC,cAAND,EAYR,OACE,8BACE,eAACsP,GAAA,EAAD,CAAQ7M,KAAMA,EAAMiD,QAZJ,WAClBA,GAAQ,IAWoC,kBAAgB,qBAAqB,mBAAiB,2BAAhG,UAEE,cAAC8J,GAAA,EAAD,UACE,cAACgF,GAAA,EAAD,CAAmBnT,GAAG,2BAAtB,SAAkDrB,EAAE,8CAEtD,eAAC6P,GAAA,EAAD,WACE,cAAC3N,EAAA,EAAD,CAAQgD,QAfM,WACpBQ,GAAQ,IAc8BjH,MAAM,YAAtC,gBAGA,cAACyD,EAAA,EAAD,CAAQgD,QAfU,WACxBQ,GAAQ,IAckCjH,MAAM,YAAY+C,WAAS,EAA/D,4B,wBCrBH,SAASiT,GAAgB5W,GAC9B,IAAQ6W,EAA2D7W,EAA3D6W,QAASxG,EAAkDrQ,EAAlDqQ,SAAUyG,EAAwC9W,EAAxC8W,MAAOC,EAAiC/W,EAAjC+W,OAAQC,EAAyBhX,EAAzBgX,aAAcvU,EAAWzC,EAAXyC,OAEhDN,EAAMC,cAAND,EAGR,EAAkDyE,oBAAS,GAA3D,mBAAOqQ,EAAP,KAA0BC,EAA1B,KAGMC,EAAYC,YAAS,CAAEP,UAAS9B,KAAK,cAAD,OAAgBgC,EAAhB,kBAG1C/N,qBAAU,WACR,GAAMmO,GAAeL,EAAO,CAC1B,IAAM5P,EAAS4P,EAAMO,MAAK,SAACC,GAAD,OAAUA,EAAK9T,KAAO2T,GAAaG,EAAKC,aAC7DrQ,GAAQmJ,EAAS,cAAD,OAAe0G,EAAf,eAAmC,GACxDG,GAAsBhQ,QAEtBmJ,EAAS,cAAD,OAAe0G,EAAf,eAAmC,GAC3CG,GAAqB,KAEtB,CAACH,EAAQI,EAAWL,EAAOzG,IAG9B,MAAkDzJ,oBAAS,GAA3D,mBAAO4Q,EAAP,KAA0BC,EAA1B,KAGMC,EAAWN,YAAS,CAAEP,UAAS9B,KAAK,cAAD,OAAgBgC,EAAhB,gBAGzC/N,qBAAU,WACH0O,IACHrH,EAAS,cAAD,OAAe0G,EAAf,oBAAyC,GACjD1G,EAAS,cAAD,OAAe0G,EAAf,qBAA0C,IAEpDU,GAAsBC,KACrB,CAACA,EAAUrH,EAAU0G,IAGxB,IAAMY,EAAiB,SAAC5C,GACtB,OAAOvP,eAAI/C,EAAD,qBAAuBsU,EAAvB,YAAiChC,KAG7C,OAAsB,KAAb,OAAL+B,QAAK,IAALA,OAAA,EAAAA,EAAOvC,QAEP,cAACjQ,EAAA,EAAD,CAAKsT,GAAI,EAAGnO,MAAO,CAAEuG,UAAW,SAAUpP,MAAO,OAAjD,SACGuB,EAAE,yCAMP,eAACmC,EAAA,EAAD,CAAKsT,GAAI,EAAT,UACE,cAAC,IAAD,CACE7C,KAAI,qBAAgBgC,EAAhB,gBACJF,QAASA,EACTgB,MAAO,CAAEjU,SAAUzB,EAAE,yBACrB2V,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACvM,EAAA,EAAD,2BACMuM,GADN,IAEEkI,QAAM,EACNjG,SAAUkF,EACVvT,MAAOtB,EAAE,gCACT6B,QAAS2T,EAAe,eACxBzT,aAAcyT,EAAe,gBAAkBA,EAAe,eAAe5T,QAN/E,SAQG+S,EAAOvF,KAAI,SAACyG,GAAD,OACV,yBAAwBlU,MAAOkU,EAAOxU,GAAtC,UACGwU,EAAOjD,KADV,IACiB,IACdiD,EAAO/T,MACP,MAHU+T,EAAOxU,aAU5B,eAACyU,GAAA,EAAD,CAAMxM,WAAS,EAACnK,QAAS,EAAzB,UACE,cAAC2W,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,GAAA,EAAD,CACEvB,QACE,cAAC,IAAD,CACE9B,KAAI,qBAAgBgC,EAAhB,cACJF,QAASA,EACTiB,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACwI,GAAA,EAAD,CAAQtL,SAAU,SAACuL,GAAD,OAAOzI,EAAM9C,SAASuL,EAAE1D,OAAO2D,UAAUA,QAAS1I,EAAM/L,MAAOlD,MAAM,UAAUkR,SAAUmF,OAIjHxT,MAAOtB,EAAE,oCAIb,cAAC8V,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEpD,KAAI,qBAAgBgC,EAAhB,oBACJF,QAASA,EACTgB,MAAO,CAAEjU,SAAUzB,EAAE,yBACrB2V,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACvM,EAAA,EAAD,yBACEa,KAAK,SACLqU,WAAY,CAAEC,IAAK,EAAGhP,MAAO,CAAEuG,UAAW,WACtCH,GAHN,IAIEiC,SAAU0F,EACV/T,MAAOtB,EAAE,uCACT6B,QAAS2T,EAAe,mBACxBzT,aAAcyT,EAAe,oBAAsBA,EAAe,mBAAmB5T,gBAM7F,cAACkU,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEpD,KAAI,qBAAgBgC,EAAhB,qBACJF,QAASA,EACTgB,MAAO,CAAEjU,SAAUzB,EAAE,yBACrB2V,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACvM,EAAA,EAAD,yBACEa,KAAK,SACLqU,WAAY,CAAEC,IAAK,EAAGhP,MAAO,CAAEuG,UAAW,WACtCH,GAHN,IAIEiC,SAAU0F,EACV/T,MAAOtB,EAAE,wCACT6B,QAAS2T,EAAe,oBACxBzT,aAAcyT,EAAe,qBAAuBA,EAAe,oBAAoB5T,sBCzIhG,IAAM2U,GAAgB,SAACC,GAC5B,OAAQA,GACN,IAAK,WACH,MAAO,4CACT,IAAK,WACH,MAAO,4CACT,QACE,MAAO,KASN,SAASC,GAAe5Y,GAC7B,IAAQkD,EAA0BlD,EAA1BkD,KAAM2V,EAAoB7Y,EAApB6Y,gBAEN1W,EAAMC,cAAND,EACFE,EAAUmU,KAEhB,OACE,cAAClS,EAAA,EAAD,CAAKsT,GAAI,EAAG5K,GAAI,EAAhB,SACE,eAACN,GAAA,EAAD,CAAMqF,gBAAgB,EAAtB,UACE,qBAAoBjP,UAAWT,EAAQgN,KAAvC,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,iCAClC,sBAAKW,UAAWT,EAAQwN,MAAxB,UACG3M,EAAK4V,SADR,IACmB,IAChB5V,EAAK6V,UACL,SALG,aAQR,qBAA0BjW,UAAWT,EAAQgN,KAA7C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,uCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC1N,EAAEuW,GAAcxV,EAAK8V,iBAF/C,oBAKNH,GACA,qCACE,qBAAqB/V,UAAWT,EAAQgN,KAAxC,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,kCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKqU,UAAYpV,EAAE,mCAAqCA,EAAE,sCAFpF,cAKPe,EAAKqU,WACJ,mCACE,qBAA4BzU,UAAWT,EAAQgN,KAA/C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,yCAClC,qBAAKW,UAAWT,EAAQwN,MAAOpG,MAAO,CAAEgG,UAAW,MAAOK,YAAa,QAAvE,SACG5M,EAAK+V,kBAER,qBAAKnW,UAAWT,EAAQoI,MAAOhB,MAAO,CAAEgG,UAAW,MAAOE,WAAY,QAAtE,SACGxN,EAAE,0CAEL,qBAAKW,UAAWT,EAAQwN,MAAOpG,MAAO,CAAEgG,UAAW,OAAnD,SACGvM,EAAKgW,qBATF,+B,wBChCjB,SAASC,GAAqBnZ,GACnC,IAAQ6W,EAAoC7W,EAApC6W,QAAS1S,EAA2BnE,EAA3BmE,KAAM1B,EAAqBzC,EAArByC,OAAQqP,EAAa9R,EAAb8R,SAEvB3P,EAAMC,cAAND,EAGR,EAA4ByE,mBAAS,IAArC,mBAAOwS,EAAP,KAAeC,EAAf,KACA,EAAoDhL,GAAW,mCAA6C+K,GAAU,IAAtH,sBAAeE,EAAf,EAASpW,KAA8BqW,EAAvC,EAA4B1S,UAG5B,EAAwBD,oBAAS,GAAjC,mBAAOhC,EAAP,KAAasH,EAAb,KAGAlD,qBAAU,WACHpE,GACHyU,EAAU,MAEX,CAACzU,IAGJ,IAAM4U,EAAc,uCAAG,WAAO1V,GAAP,SAAAkB,EAAA,sDACrBqU,EAAUvV,GADW,2CAAH,sDAIpB,OACE,cAAC,IAAD,CACEiR,KAAI,iBAAY5Q,GAChB0S,QAASA,EACTiB,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAAC4J,GAAA,EAAD,2BACM5J,GADN,IAEEiC,SAAUA,EACV4H,UAAQ,EACRC,UAAW7H,OAAW8H,EAAY,EAClCnF,KAAK,QACL7P,KAAMA,EACNiV,OAAQ,WACN3N,GAAQ,IAEVrE,QAAS,WACPqE,GAAQ,IAEV8G,QAASsG,GAA4B,GACrCC,QAASA,EACTO,eAAgB,SAAC9B,GAAD,gBAAeA,EAAOjD,KAAtB,aAA+BiD,EAAO+B,QAAtC,MAChBC,WAAY,SAACC,EAAUC,GAAX,OACVD,EAAS1I,KAAI,SAACyG,EAAQmC,GAAT,OAAmB,cAACC,GAAA,EAAD,aAAM3W,MAAOuU,EAAOjD,KAAMtK,MAAOuN,EAAO+B,SAAaG,EAAY,CAAEC,gBAErGE,uBAAqB,EACrBC,YAAa,SAACrT,GAAD,OACX,cAAC3D,EAAA,EAAD,2BACM2D,GADN,IAEExD,MAAOtB,EAAE,kCAAD,OAAmCgC,IAC3CH,QAASvB,EAAO8X,OAChBrW,WAAYzB,EAAO8X,QAAW9X,EAAO8X,OAAexW,QACpDyW,WAAU,2BACLvT,EAAOuT,YADF,IAERC,aACE,qCACGlB,EAAU,cAAC1U,EAAA,EAAD,CAAkBjE,MAAM,UAAU6T,KAAM,KAAS,KAC3DxN,EAAOuT,WAAWC,kBAIzB1N,SAAU,SAAC2N,GACe,KAApBA,EAAG9F,OAAO9Q,OAAoC,OAApB4W,EAAG9F,OAAO9Q,OACtC0V,EAAekB,EAAG9F,OAAO9Q,YAKjCiJ,SAAU,SAAC4N,EAAGzX,GAAJ,OAAa2M,EAAM9C,SAAS7J,UC5EzC,SAAS0X,GAAoB5a,GAClC,IAAQ+U,EAAsD/U,EAAtD+U,KAAM8B,EAAgD7W,EAAhD6W,QAASpT,EAAuCzD,EAAvCyD,MAAOG,EAAgC5D,EAAhC4D,SAAUiX,EAAsB7a,EAAtB6a,UAAWpY,EAAWzC,EAAXyC,OAE3CN,EAAMC,cAAND,EAER,OACE,cAAC,IAAD,CACE4S,KAAMA,EACN8B,QAASA,EACTgB,MAAOjU,EAAW,CAAEA,SAAUzB,EAAE,8BAAsCyX,EACtE9B,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACvM,EAAA,EAAD,2BACMuM,GADN,IAEEpM,MAAOA,EACPoX,UAAWA,EACX7W,QAASvB,EAAOsS,GAChB7Q,WAAYzB,EAAOsS,IAAUtS,EAAOsS,GAAqBhR,c,cChB5D,SAAS+W,GAAyB9a,GACvC,IAAQ+U,EAAkE/U,EAAlE+U,KAAM8B,EAA4D7W,EAA5D6W,QAASkE,EAAmD/a,EAAnD+a,UAAWtX,EAAwCzD,EAAxCyD,MAAOuX,EAAiChb,EAAjCgb,qBAAsBvY,EAAWzC,EAAXyC,OAEvDN,EAAMC,cAAND,EAER,OACE,cAAC,IAAD,CACE4S,KAAMA,EACN8B,QAASA,EACTgB,MAAO,CACLjU,SAAUzB,EAAE,wBACZ8Y,SAAU,kBAAMF,EAAU,aAAa/G,UAAY+G,EAAU,WAAW/G,WAAc7R,EAAE,uCAE1F2V,OAAQ,gBAAGjI,EAAH,EAAGA,MAAH,OACN,cAACqL,GAAA,EAAD,2BACMrL,GADN,IAEE9C,SAAU,SAACuL,GACTzI,EAAM9C,SAASuL,GACf0C,KAEFG,MAAM,EACNrK,OAAO,mBACPsK,aAAW,EACXC,YAAa,EACb5X,MAAOA,EACPO,QAASvB,EAAOsS,GAChB7Q,WAAYzB,EAAOsS,IAAUtS,EAAOsS,GAAqBhR,QACzDqJ,IAAK,WCRf,IAAMnL,GAAYd,aAAW,SAACgO,GAC5B,OAAOxF,aAAa,CAClB2R,WAAY,CACVja,UAAW8N,EAAW7N,QAAQ,GAC9B+J,aAAc8D,EAAW7N,QAAQ,IAEnCia,KAAM,CACJ3a,MAAO,MACPH,SAAU,QACVkB,OAAQ,QAKR6Z,GAAiB9b,YAAY,CACjCC,QAAS,CACPC,QAAS,CACPiC,KAAMhC,KAAO,MAEfC,UAAW,CACT+B,KAAMoQ,KAAK,OAGfjS,MAAO,CACLC,aAAc,CACZC,QAAS,WACTyB,OAAQ,QACR4B,WAAW,EACXkY,QAAS,MAOTC,GAAyB,SAAC5O,GAAD,OAA4D,IAA5C6O,KAAKC,KAAK9O,EAAKkH,UAAY,IAAO,GAAK,GAAY,GAAK,GAO1F6H,GAAe,cAEtBC,GAAmB,WAAyD,IAAxDC,EAAuD,uDAAlC,KAAMC,EAA4B,uDAAT,KACtE,MAAO,CACLC,KAAM,MACNC,QAAS,GACTC,QAAS,GACT1L,UAAW,GACX2L,aAAc,GACdC,YAAa,GACb9B,OAAQ,CAAE3W,SAAU,GAAI0Y,SAAU,IAClCC,WAAW,gBACRV,GAAe,CACdW,YAAa,GACbjF,WAAW,EACX0B,gBAAiB,EACjBC,iBAAkB,IAGtBuD,QAAS,GACTC,YAAa,GACbC,UAAWZ,GAAgBa,aAAWlB,GAAuB,IAAI1a,MA9BvC,GA+B1B6b,QAASb,GAAYY,aAAWlB,GAAuB,IAAI1a,MAAS8b,MAWjE,SAASC,GAAmB/c,GACjC,IAAQ4E,EAAgC5E,EAAhC4E,KAAMiD,EAA0B7H,EAA1B6H,QAAS3E,EAAiBlD,EAAjBkD,KAAM2L,EAAW7O,EAAX6O,OAErB1M,EAAMC,cAAND,EACFE,EAAO,2BAAQmU,MAA6BvU,MAC5C6G,EAAkBC,qBAAWZ,IAC7BzB,EAAQC,cAGd,EAAsCC,oBAAS,GAA/C,mBAAOoW,EAAP,KAAoBC,EAApB,KAGMC,EAAgBpB,KACtB,EASIxZ,YAAgB,CAAE4a,kBARpBrG,EADF,EACEA,QACAkE,EAFF,EAEEA,UACAvY,EAHF,EAGEA,aACA8N,EAJF,EAIEA,MACAD,EALF,EAKEA,SACA8M,EANF,EAMEA,QACAC,EAPF,EAOEA,SAPF,IAQE1a,UAAaD,EARf,EAQeA,OAAQ4a,EARvB,EAQuBA,QAAS9M,EARhC,EAQgCA,aAAcC,EAR9C,EAQ8CA,YAI9CxH,qBAAU,WAENsH,EADE1L,GAAU1B,EACN,CACJ+Y,KAAM,MACNC,QAAShZ,EAAKgZ,QACdC,QAASjZ,EAAKiZ,QACd1L,UAAWvN,EAAKuN,UAChB2L,aAAclZ,EAAKkZ,aACnBC,YAAanZ,EAAKmZ,YAClB9B,OAAQrX,EAAKqX,OACbgC,WAAYe,OAAOC,KAAKra,EAAKqZ,YAAYiB,QAAO,SAACC,EAAQnG,GAOvD,OANAmG,EAAOnG,GAAQ,CACbkF,YAAalF,EACbC,UAAWrU,EAAKqZ,WAAWjF,GAAMC,UACjC0B,gBAAiB/V,EAAKqZ,WAAWjF,GAAM2B,gBACvCC,iBAAkBhW,EAAKqZ,WAAWjF,GAAM4B,kBAEnCuE,IACN,IACHhB,QAASvZ,EAAKuZ,QACdC,YAAaxZ,EAAKwZ,YAClBC,UAAW,IAAI3b,KAAKkC,EAAKwa,eACzBb,QAAS,IAAI7b,KAAKkC,EAAKya,cAGnBhD,KAAEiD,UAAU9B,SAEnB,CAAC5Y,EAAM0B,EAAM0L,IAIhB,MAAsC1J,oBAAS,GAA/C,mBAAOiX,EAAP,KAAoBC,EAApB,KAGMC,EAAe,iCAA6BrX,EAAMO,OAAOD,UAC/D,EAAgCJ,mBAASmX,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0B5P,GAAoB2P,EAAU,IAAzClH,EAAf,oBAAS5T,KAGHgb,EAAgBtP,uBAAY,WACN,QAAtBmM,EAAU,QAEZkD,EAAYF,GAEZE,EAAYF,EAAe,iBAAahD,EAAU,aAAa/G,UAApC,gBAAqD+G,EAAU,WAAW/G,cAEtG,CAAC+J,EAAiBhD,IAGrB/R,qBAAU,WACJpE,GACFsZ,MAED,CAACA,EAAetZ,IAGnBoE,qBAAU,WACHpE,GAAMkZ,GAAe,KACzB,CAAClZ,IAIJ,IAcM3B,EAA+B,uCAAG,WAAO8L,GAAP,uBAAA/J,EAAA,+DAEhCoC,EAAM,GAF0B,KAG5B2H,EAASkN,KAHmB,OAI7B,QAJ6B,OAO7B,QAP6B,OAW7B,QAX6B,8BAKhC7U,EAAM,gBAL0B,mCAQhCA,EAAM,gBAR0B,mCAYhCA,EAAM,gBAZ0B,8CAgBf0H,GAAc1H,EAAK,CAAE4J,OAAQjC,EAAUyB,YAAaA,IAhBrC,aAgB9BtJ,EAhB8B,QAiBxB+J,QAjBwB,oBAkBZ,QAAlBlC,EAASkN,KAlBqB,kCAkBC,IAAIjN,SAAQ,SAACmP,GAAD,OAAO9U,WAAW8U,EAAG,QAlBlC,yBAmB5BtP,IAnB4B,QAoBlChH,IACAiB,EAAgBN,SAAS,CAAErE,KAAM,UAAWJ,QAAS5B,EAAE,+BArBrB,wBAwBlC,GAAI+E,EAAQzE,OAEV,IAAS2b,KADH3b,EAASyE,EAAQzE,OAGrB2a,EADIrI,EAAOqJ,EACI,CAAEra,QAAS5B,EAAEM,EAAOsS,GAAO,MA5BZ,0DAkCpCjM,EAAgBN,SAAS,CAAErE,KAAM,QAASJ,QAAS,KAAiBA,UAlChC,0DAAH,sDAuC/Bsa,EAAY,uCAAG,sBAAArZ,EAAA,sEACEmY,EAAQ,CAAC,YAAa,YADxB,kEAGnBe,IACAJ,GAAe,GAJI,2CAAH,qDAQZ9C,GAAuB,WACD,QAAtBD,EAAU,UACT8C,GACHC,GAAe,KAYnB,OACE,qCACE,cAACpZ,EAAD,CAASE,KAAM2L,IACf,cAACkG,GAAD,CAAmB7R,KAAMA,EAAMiD,QAASA,EAAS3E,KAAMA,EAAvD,SACE,eAAC0P,EAAA,EAAD,CAAenT,MAAO+b,GAAtB,YACKtY,GACD,cAACoB,EAAA,EAAD,CAAKsT,GAAI,EAAT,SAEQ1U,EAAKob,sBAEA,mBAAGxb,UAAWT,EAAQkZ,KAAtB,SAA6BpZ,EAAE,0CAIpC,cAACuK,GAAA,EAAD,CAAMqF,gBAAgB,EAAtB,SACE,qBAA0BjP,UAAWT,EAAQgN,KAA7C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,uCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC1N,EAAEuW,GAAcxV,EAAK8V,iBAF/C,uBAWpB,iCACE,eAAC1U,EAAA,EAAD,CAAKuN,EAAG,EAAR,UACE,cAAC+I,GAAD,CAAqB7F,KAAK,UAAU8B,QAASA,EAASpT,MAAOtB,EAAE,mCAAoCyB,UAAQ,EAACnB,OAAQA,IAEpH,cAAC0W,GAAD,CAAsBtC,QAASA,EAAS1S,KAAK,WAAW1B,OAAQA,EAAQqP,SAAQ,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAMob,wBACxF,cAACnF,GAAD,CAAsBtC,QAASA,EAAS1S,KAAK,WAAW1B,OAAQA,EAAQqP,SAAQ,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAMob,wBAExF,eAACrG,GAAA,EAAD,CAAMxM,WAAS,EAACnK,QAAS,EAAzB,UACE,cAAC2W,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC2C,GAAD,CACE/F,KAAK,YACL8B,QAASA,EACTkE,UAAWA,EACXtX,MAAOtB,EAAE,sCACT6Y,qBAAsBA,GACtBvY,OAAQA,MAGZ,cAACwV,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC2C,GAAD,CACE/F,KAAK,UACL8B,QAASA,EACTkE,UAAWA,EACXtX,MAAOtB,EAAE,oCACT6Y,qBAAsBA,GACtBvY,OAAQA,MAGZ,cAACwV,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG1O,MAAO,CAAE9H,OAAQ,QAAnC,SACE,cAAC0C,EAAA,EAAD,CAAQgD,QAASgX,EAAcne,QAAQ,YAAYU,MAAM,UAAU2C,WAAS,EAACuO,UAAc,OAAJ5O,QAAI,IAAJA,OAAA,EAAAA,EAAMob,yBAA0BT,EAAvH,SACG1b,EAAE,yCAMTe,EAIA,mCACIA,EAAKob,sBAcL,cAAC1L,EAAA,EAAD,CAAenT,MAAO0P,GAAtB,SACGmO,OAAOC,KAAKra,EAAKqZ,YAAYhL,KAAI,SAACwF,GACjC,OAAO,cAAC6B,GAAD,CAA6B1V,KAAMA,EAAKqZ,WAAWxF,IAA9BA,SAd/B8G,GACC,cAACjH,GAAD,CACEC,QAASA,EACTxG,SAAUA,EACVyG,MAAOA,EACPC,OAAQuG,OAAOC,KAAKra,EAAKqZ,YAAY,GACrCvF,cAAc,EACdvU,OAAQA,OAZfob,GAAe,cAACjH,GAAD,CAAiBC,QAASA,EAASxG,SAAUA,EAAUyG,MAAOA,EAAOC,OAAQ8E,GAAcpZ,OAAQA,IA0BrH,eAAC6B,EAAA,EAAD,CAAKuN,EAAG,EAAR,UACE,cAAC+I,GAAD,CAAqB7F,KAAK,eAAe8B,QAASA,EAASpT,MAAOtB,EAAE,mCAAoCyB,UAAQ,EAACnB,OAAQA,IACzH,cAACmY,GAAD,CAAqB7F,KAAK,cAAc8B,QAASA,EAASpT,MAAOtB,EAAE,kCAAmCM,OAAQA,IAC9G,cAACmY,GAAD,CAAqB7F,KAAK,UAAU8B,QAASA,EAASpT,MAAOtB,EAAE,6BAA8B0Y,WAAS,EAACpY,OAAQA,IAC/G,cAACmY,GAAD,CAAqB7F,KAAK,cAAc8B,QAASA,EAASpT,MAAOtB,EAAE,kCAAmCM,OAAQA,OAGhH,cAAC6B,EAAA,EAAD,CAAKsT,GAAI,EAAT,SACE,eAACK,GAAA,EAAD,CAAMxM,WAAS,EAACR,eAAe,gBAAgB3J,QAAS,EAAGwB,UAAWT,EAAQiZ,WAA9E,UACE,cAACrD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAKjV,EAAY,EAAL,GAAvB,SACE,cAACmB,EAAA,EAAD,CACEgD,QAjLC,WACjB7E,EAAaS,EAAbT,IAiLgBtC,QAAQ,YACRU,MAAM,UACNkR,UAAWuL,GAAWQ,EACtBU,UAAW,cAAC,KAAD,IACXhb,WAAS,EANX,SAQGpB,EAAE,iCAGP,cAAC8V,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG1O,MAAQvG,OAA6B0W,EAAtB,CAAErY,QAAS,QAA5C,SACE,cAAC8C,EAAA,EAAD,CAAQgD,QAxLH,WACnB4V,GAAe,IAuL8B/c,QAAQ,YAAYU,MAAM,UAA+B2d,UAAW,cAAC,KAAD,IAAgBhb,WAAS,EAA5H,SACGpB,EAAE,gDAQjB,cAACuU,GAAD,CAAqB9R,KAAMoY,EAAanV,QAhIjB,SAAC2W,GAC1BvB,GAAe,GACXuB,IA9DJnO,EAAS,OAAQ,OACjB7N,EAAaS,EAAbT,UChMG,SAASic,GAAkBze,GAChC,IAAQ4E,EAAwB5E,EAAxB4E,KAAMiD,EAAkB7H,EAAlB6H,QAAS3E,EAASlD,EAATkD,KAEff,EAAMC,cAAND,EACFE,EAAUmU,KAEhB,OACE,eAACC,GAAD,CAAmB7R,KAAMA,EAAMiD,QAASA,EAAS3E,KAAMA,EAAvD,UACE,cAACoB,EAAA,EAAD,CAAKsT,GAAI,EAAG5K,GAAI,EAAhB,SACE,eAACN,GAAA,EAAD,CAAMqF,gBAAgB,EAAtB,UACE,qBAAwBjP,UAAWT,EAAQgN,KAA3C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,qCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKiZ,YAF/B,iBAIR,qBAAmBrZ,UAAWT,EAAQgN,KAAtC,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,iCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKwb,aAF/B,YAIR,qBAA2B5b,UAAWT,EAAQgN,KAA9C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,wCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKyb,oBAF/B,yBAOXrB,OAAOC,KAAKra,EAAKqZ,YAAYhL,KAAI,SAACwF,GACjC,OAAO,cAAC6B,GAAD,CAA6B1V,KAAMA,EAAKqZ,WAAWxF,IAA9BA,MAG9B,cAACzS,EAAA,EAAD,CAAKuN,EAAG,EAAR,SACE,eAACnF,GAAA,EAAD,CAAMqF,gBAAgB,EAAtB,UACE,qBAAwBjP,UAAWT,EAAQgN,KAA3C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,qCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKkZ,iBAF/B,iBAIR,qBAAuBtZ,UAAWT,EAAQgN,KAA1C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,oCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKmZ,gBAF/B,gBAIR,qBAAkBvZ,UAAWT,EAAQgN,KAArC,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,+BAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKuZ,YAF/B,WAIR,qBAAuB3Z,UAAWT,EAAQgN,KAA1C,UACE,qBAAKvM,UAAWT,EAAQoI,MAAxB,SAAgCtI,EAAE,oCAClC,qBAAKW,UAAWT,EAAQwN,MAAxB,SAAgC3M,EAAKwZ,gBAF/B,wBC/CX,IAAMvN,GAAazP,YAAY,CACpCC,QAAS,CACPC,QAAS,CACPiC,KAAMoQ,KAAK,MAEbnS,UAAW,CACT+B,KAAMhC,KAAO,OAGjBG,MAAO,CACLkS,YAAa,IAKf5R,UAAW,CACT6R,SAAU,CACR3N,KAAM,CACJ4N,eAAgB,gBAkBXwM,GAAoB,SAACnX,EAAwBC,GACxD,OAAQA,EAAOvD,MACb,IAAK,YACH,MAAO,CAAE8X,KAAM,UAAW4C,WAAW,EAAMC,UAAU,GACvD,IAAK,cACH,MAAO,CAAE7C,KAAM,UAAW4C,WAAW,EAAMC,UAAU,GACvD,IAAK,aACH,OAAO,2BAAKrX,GAAZ,IAAmBoX,WAAW,IAChC,IAAK,WACH,MAAO,CAAE5C,KAAM,UAAW4C,WAAW,EAAOC,UAAU,GACxD,IAAK,YACH,OAAO,2BAAKrX,GAAZ,IAAmBqX,UAAU,IAC/B,QACE,OAAOrX,IAeN,SAASsX,GAAc/e,GAC5B,IAAQgf,EAA4Dhf,EAA5Dgf,eAAgBnY,EAA4C7G,EAA5C6G,UAAWgI,EAAiC7O,EAAjC6O,OAAQ2D,EAAyBxS,EAAzBwS,WAAYlK,EAAatI,EAAbsI,SAGjD2W,EAAsB,uCAAG,sBAAAja,EAAA,sDAC7Bga,EAAexW,SAAS,CAAErE,KAAM,eADH,2CAAH,qDAItB+a,EAAqB,uCAAG,sBAAAla,EAAA,sDAC5Bga,EAAexW,SAAS,CAAErE,KAAM,cADJ,2CAAH,qDAI3B,OACE,eAACyO,EAAA,EAAD,CAAenT,MAAO0P,GAAtB,UACE,cAACzK,EAAD,CAASE,KAAMiC,IACdyB,EACD,cAACyU,GAAD,CACEnY,KAAMoa,EAAevX,MAAMoX,UAC3BhX,QAASoX,EACT/b,KAAoC,YAA9B8b,EAAevX,MAAMwU,KAAqB,KAAOzJ,EACvD3D,OAAQA,MAEP2D,GAAc,cAACiM,GAAD,CAAmB7Z,KAAMoa,EAAevX,MAAMqX,SAAUjX,QAASqX,EAAuBhc,KAAMsP,OChFrH,IAAMvQ,GAAYd,aAAkB,WAClC,OAAOwI,aAAa,CAElBwV,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,oBAAqB,GACrBC,iBAAkB,GAClBC,YAAa,GAEbC,iBAAkB,CAAE5T,eAAgB,8BACpC6T,iBAAkB,CAChB,WAAY,CACVC,UAAW,WACXrV,WAAY,EACZY,QAAS,UACTtK,MAAO,MACPwO,OAAQ,gBACR7D,QAAQ,IAAD,OAAMqU,KAAQzd,EAAE,6CAAhB,YAmBR,SAASkQ,GAAUrS,GACxB,IAAQgM,EAAgChM,EAAhCgM,YAAagT,EAAmBhf,EAAnBgf,eAEb7c,EAAMC,cAAND,EACFE,EAAUJ,KACVyE,EAAQC,cAGd,EAA+C0H,GAAW,qCAC1BrC,EAAagI,UADa,qBACStN,EAAMO,OAAOD,UAC9E,IAFF,0BAAS9D,EAAT,EAASA,KAAM2D,EAAf,EAAeA,UAAW4H,EAA1B,EAA0BA,QAAWI,EAArC,KAMA,EAAoCjI,mBAA6B,MAAjE,mBAAO4L,EAAP,KAAmBC,EAAnB,KAYMvC,EAAqB,CACzB,CAAEzF,MAAOtI,EAAE,+BAAgC0N,MAAO,YAClD,CAAEpF,MAAOtI,EAAE,+BAAgC0N,MAAO,YAClD,CAAEpF,MAAOtI,EAAE,mCAAoC0N,MAAO,gBACtD,CAAEpF,MAAOtI,EAAE,sCAAuC0N,MAAO,mBACzD,CAAEpF,MAAOtI,EAAE,mCAAoC0N,MAAO,YAGlDgQ,EAAY,SAAChQ,EAAeiQ,GAChC,IAAMhd,EAAY+M,EAAMkQ,OAAO,GAAGC,cAAgBnQ,EAAMuB,MAAM,GAC9D,OAAOhF,aACL/J,EAAQ,OAAD,OAAQS,IACQ,aAAvBgd,EAAQ9G,YAA6B3W,EAAQ,WAAD,OAAYS,MAK5D,OAAI2L,EACK,8BAAMtM,EAAE,6BAIf,cAAC4c,GAAD,CAAevM,WAAYA,EAAYwM,eAAgBA,EAAgBnY,UAAWA,EAAWgI,OAAQA,EAArG,SACE,cAAC,KAAD,CACEqB,QAASA,EACT+P,WAAY,CAEVC,KAAM,SAAClgB,GAAD,OAAW,cAAC,cAAD,2BAAgBA,GAAhB,IAAuB8C,UAAW+c,EAAU7f,EAAMmgB,UAAUtQ,MAAO7P,EAAM8f,cAE5F5c,KAAMA,EACN2P,WAAY,SAACpK,EAAQqK,GAAT,QAA4BA,GAvCrB,SAACA,GACpBA,EAAYsN,SACdpB,EAAexW,SAAS,CAAErE,KAAM,cAEhC6a,EAAexW,SAAS,CAAErE,KAAM,aAElCsO,EAAcK,GAiC6CC,CAAiBD,IACxEE,QAAS,CACPC,WAAW,EACX7S,SAAS,EACT8I,QAAQ,EACRgK,YAAa,CAAEtR,gBAAiBuN,GAAWxP,QAAQC,QAAQ8P,OAC3D2Q,YAAa,SAEflN,MAAOlG,OCzGf,IAAMhL,GAAYd,aAAW,SAAC1B,GAC5B,OAAOkK,aAAa,CAClB2W,eAAgB,GAChBC,iBAAkB,CAChBvQ,UAAW,QACXrO,OAAQ,QAEV6e,WAAY,CACV7e,OAAQ,UAEV8e,mBAAoB,CAClB,iCAAkC,CAAEjW,aAAc,IAEpDC,MAAO,CACL9I,OAAQ,eAEViL,OAAQ,CACNjL,OAAQlC,EAAM6B,QAAQ,SAKrB,SAAS8R,KACd,IAAQjR,EAAMC,cAAND,EACFE,EAAUJ,KAGhB,EAAwC2E,mBAAsB,IAAI5F,MAAlE,mBAAOqS,EAAP,KAAqBC,EAArB,KAYA,EAA8C/K,qBAAWqW,GANnB,CACpC3C,KAAM,UACN4C,WAAW,EACXC,UAAU,IAGZ,mBAAO4B,EAAP,KAAwBC,EAAxB,KAOA,OACE,cAAC,GAAD,UACE,eAACnX,GAAA,EAAD,CAAOgK,QAAM,EAAb,UACE,cAAClP,EAAA,EAAD,CAAKsT,GAAI,EAAGgJ,GAAI,EAAhB,SACE,eAAC3I,GAAA,EAAD,CAAMxM,WAAS,EAAChK,WAAW,UAAUwJ,eAAe,gBAApD,UACE,eAACgN,GAAA,EAAD,CAAMxM,WAAS,EAACyM,MAAI,EAACC,GAAI,GAAI0I,GAAI,EAAG/d,UAAWT,EAAQie,eAAvD,UACE,cAACrI,GAAA,EAAD,CAAMC,MAAI,EAACpV,UAAWT,EAAQme,WAA9B,SACE,cAAC,KAAD,CACE7e,OAAO,SACP6B,GAAG,qBACHC,MAAOtB,EAAE,+BACT2O,OAAO,aACPgQ,iBAAe,EACfhd,MAAOuP,EACPtG,SAhCS,SAACD,GACxBwG,EAAgBxG,IAgCFiU,oBAAqB,CACnB,aAAc,eAEhBtM,KAAK,QACL3R,UAAWT,EAAQoe,mBACnBjI,WAAY,CACV/O,MAAO,CACL1H,MAAO,SAKf,cAACkW,GAAA,EAAD,CAAMC,MAAI,EAACpV,UAAWT,EAAQoI,MAA9B,SACE,cAAC9J,EAAA,EAAD,CAAYiC,UAAU,KAAtB,SAA4BT,EAAE,+BAGlC,cAAC8V,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI0I,GAAI,EAAG/d,UAAWT,EAAQke,iBAA7C,SACE,cAAClc,EAAA,EAAD,CAAQnE,QAAQ,YAAYU,MAAM,YAAY2d,UAAW,cAAC,KAAD,IAAmBlX,QApC9D,SAACoB,GACzBkY,EAAmB,CAAExc,KAAM,iBAmCjB,SACGhC,EAAE,qCAKX,cAACmC,EAAA,EAAD,CAAKuN,EAAG,EAAR,SACE,cAAC,GAAD,CAAW7F,YAAaqH,EAAe2L,eAAgB,CAAEvX,MAAOiZ,EAAiBlY,SAAUmY,YC1E9F,SAAStO,GAAUrS,GACxB,IAAQgM,EAAgChM,EAAhCgM,YAAagT,EAAmBhf,EAAnBgf,eAEb7c,EAAMC,cAAND,EACFuE,EAAQC,cAGd,EAA+C0H,GAAW,kCAC7BrC,EAAagI,UADgB,qBACMtN,EAAMO,OAAOD,UAC3E,IAFF,0BAAeH,GAAf,EAAS3D,KAAT,EAAe2D,WAAW4H,EAA1B,EAA0BA,QAAWI,EAArC,KAMA,EAAoCjI,mBAA6B,MAAjE,mBAAO4L,EAAP,UAaA,OAAI/D,EACK,8BAAMtM,EAAE,6BAIf,cAAC4c,GAAD,CAAevM,WAAYA,EAAYwM,eAAgBA,EAAgBnY,UAAWA,EAAWgI,OAAQA,EAArG,SACE,8CCvCN,IAAM5M,GAAYd,aAAW,SAAC1B,GAC5B,OAAOkK,aAAa,CAClB2W,eAAgB,GAChBC,iBAAkB,CAChBvQ,UAAW,QACXrO,OAAQ,QAEV6e,WAAY,CACV7e,OAAQ,UAEV8e,mBAAoB,CAClB,iCAAkC,CAAEjW,aAAc,IAEpDC,MAAO,CACL9I,OAAQ,eAEViL,OAAQ,CACNjL,OAAQlC,EAAM6B,QAAQ,SAKrB,SAAS0f,KACd,IAAQ7e,EAAMC,cAAND,EACFE,EAAUJ,KAGhB,EAAwC2E,mBAAsB,IAAI5F,MAAlE,mBAAOqS,EAAP,KAAqBC,EAArB,KAMA,EAA6B1M,mBAAS,KAAtC,mBAAO9C,EAAP,KAAcyP,EAAd,KAYA,EAA8ChL,qBAAWqW,GANnB,CACpC3C,KAAM,UACN4C,WAAW,EACXC,UAAU,IAGZ,mBAAO4B,EAAP,KAAwBC,EAAxB,KAOA,OACE,cAAC,GAAD,UACE,eAACnX,GAAA,EAAD,CAAOgK,QAAM,EAAb,UACE,cAAClP,EAAA,EAAD,CAAKsT,GAAI,EAAGgJ,GAAI,EAAhB,SACE,eAAC3I,GAAA,EAAD,CAAMxM,WAAS,EAAChK,WAAW,UAAUwJ,eAAe,gBAApD,UACE,eAACgN,GAAA,EAAD,CAAMxM,WAAS,EAACyM,MAAI,EAACC,GAAI,GAAI0I,GAAI,EAAG/d,UAAWT,EAAQie,eAAvD,UACE,cAACrI,GAAA,EAAD,CAAMC,MAAI,EAACpV,UAAWT,EAAQme,WAA9B,SACE,cAAC,KAAD,CACE7e,OAAO,SACP6B,GAAG,qBACHC,MAAOtB,EAAE,4BACT2O,OAAO,aACPgQ,iBAAe,EACfhd,MAAOuP,EACPtG,SAtCS,SAACD,GACxBwG,EAAgBxG,IAsCFiU,oBAAqB,CACnB,aAAc,eAEhBtM,KAAK,QACL3R,UAAWT,EAAQoe,mBACnBjI,WAAY,CACV/O,MAAO,CACL1H,MAAO,SAKf,cAACkW,GAAA,EAAD,CAAMC,MAAI,EAACpV,UAAWT,EAAQoI,MAA9B,SACE,cAAC9J,EAAA,EAAD,CAAYiC,UAAU,KAAtB,SAA4BT,EAAE,4BAGlC,cAAC8V,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI0I,GAAI,EAAG/d,UAAWT,EAAQke,iBAA7C,SACE,cAAClc,EAAA,EAAD,CAAQnE,QAAQ,YAAYU,MAAM,YAAY2d,UAAW,cAAC,KAAD,IAAmBlX,QApC9D,SAACoB,GACzBkY,EAAmB,CAAExc,KAAM,iBAmCjB,SACGhC,EAAE,kCAKX,eAACsR,GAAA,EAAD,CAAY3P,MAAOA,EAAnB,UACE,cAACqI,GAAA,EAAD,CAAQvB,SAAS,SAAShK,MAAM,UAAhC,SACE,eAAC8S,GAAA,EAAD,CAASC,eAAe,UAAUC,UAAU,UAAU1T,QAAQ,YAAY6M,SA1D5D,SAACtE,EAA+BoL,GACtDN,EAAYM,IAyDiG,aAAW,YAAhH,UACE,cAACC,GAAA,EAAD,CAAKrQ,MAAOtB,EAAE,kCAAmC2B,MAAM,MACvD,cAACgQ,GAAA,EAAD,CAAKrQ,MAAOtB,EAAE,4BAA6B2B,MAAM,WAGrD,cAACiQ,GAAA,EAAD,CAAUjQ,MAAM,IAAhB,SACE,cAAC,GAAD,CAAWkI,YAAaqH,EAAe2L,eAAgB,CAAEvX,MAAOiZ,EAAiBlY,SAAUmY,OAE7F,cAAC5M,GAAA,EAAD,CAAUjQ,MAAM,IAAhB,SACE,cAAC,GAAD,CAAWkI,YAAaqH,EAAe2L,eAAgB,CAAEvX,MAAOiZ,EAAiBlY,SAAUmY,eC1GhG,SAASM,KACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACzb,KAAK,eAAe7C,UAAWV,IAE5C,cAAC,IAAD,CAAOuD,KAAK,SAAS7C,UAAWue,KAEhC,cAAC,IAAD,CAAOD,OAAK,EAACzb,KAAK,oBAAoB7C,UAAW6D,IACjD,cAAC,IAAD,CAAOya,OAAK,EAACzb,KAAK,kBAAkB7C,UAAWgG,KAC/C,cAAC,IAAD,CAAOsY,OAAK,EAACzb,KAAK,yBAAyB7C,UAAWoe,KACtD,cAAC,IAAD,CAAOE,OAAK,EAACzb,KAAK,kBAAkB7C,UAAWwe,KAE/C,cAAC,IAAD,CAAUC,KAAK,IAAIhL,GAAG,gB,yEClBTiL,G,+KACnB,SAAsBxU,GACpB,OAAOgE,mBAAOhE,EAAM,SAAU,CAAEiE,OAAQwQ,S,qCAG1C,SAAwBzU,GACtB,OAAOgE,mBAAOhE,EAAM,aAAS,CAAEiE,OAAQwQ,W,GANCC,YCY7BC,OAXf,WACE,OACE,eAAC7O,EAAA,EAAD,CAAenT,MAAOA,EAAtB,UACE,cAACiiB,EAAA,EAAD,IACA,cAAC,KAAD,CAAyBC,MAAOL,GAAgBvQ,OAAQwQ,KAAxD,SACE,cAACN,GAAD,U,8BCRFW,GAAY,CAChBC,GAAI,CACFC,YAAaC,IAEfC,GAAI,CACFF,YAAaG,KAIjBC,KAAKC,IAAIC,MAAkBC,KAAK,CAC9BC,IAAK,KACLC,YAAa,KACbC,cAAe,CACbC,aAAa,GAEfC,MAAO,CACLC,MAAM,GAERf,UAAWA,KAGEM,GAAf,ECrBAU,IAAS9K,OACP,cAAC,IAAM+K,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7fcf0e1e.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: purple,\r\n    secondary: amber,\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version. 1.0.0 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","import { Avatar, Box, Button, Container, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Copyright } from '../../_components/Copyright';\r\nimport { makeLoginStyles } from '_styles/MakeLoginStyles';\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\ntype LoginInputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport function Login() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginInputs>();\r\n\r\n  const login: SubmitHandler<LoginInputs> = (data) => {\r\n    alert('test');\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(login)}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label={t('login.form.email')}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            {...register('email', {\r\n              required: t('common.form.required') as string,\r\n              pattern: {\r\n                value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/,\r\n                message: t('login.form.invalid-pattern'),\r\n              },\r\n            })}\r\n            error={!!errors.email}\r\n            helperText={errors.email && errors.email.message}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label={t('login.form.password')}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            {...register('password', {\r\n              required: t('login.form.required') as string,\r\n            })}\r\n            error={!!errors.password}\r\n            helperText={errors.password && errors.password.message}\r\n          />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            {t('login.form.submit')}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","export type PostDataResult<T> = {\r\n  success: boolean;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T;\r\n}\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(path: string, args: RequestInit = { method: 'get' }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../../_components/Copyright';\r\nimport { Spinner } from '../../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/MakeLoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Copyright } from '../../_components/Copyright';\r\nimport { Spinner } from '../../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/MakeLoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') }); //TODO:あとでtestが必要\r\n          }\r\n          // urlにロケーションを設定\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(`/${location}/main`);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { Paper } from '@material-ui/core';\r\nimport { Calendar } from '@material-ui/pickers';\r\n\r\ntype MyCalendarProps = {\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n};\r\n\r\nfunction MyCalendar(props: MyCalendarProps) {\r\n  return (\r\n    <Paper style={{ overflow: 'hidden' }}>\r\n      <Calendar {...props} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport MyCalendar from '../_components/MyCalendar';\r\nimport { MySnackberProvider } from '../_components/MySnackbarContext';\r\n\r\n// import { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 315;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  });\r\n});\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  title: string;\r\n  currentDate: Date | null;\r\n  calendarOnChange: (date: Date | null) => void;\r\n};\r\n\r\nconst BaseTemplate = ({ children, title, currentDate, calendarOnChange }: BaseTemplateProps) => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Visitors for Microsoft\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button onClick={handleDrawerOpen} className={clsx(open && classes.calendarHidden)}>\r\n              <ListItemIcon>\r\n                <CalendarTodayIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n            <ListItem className={clsx(!open && classes.calendarHidden)}>\r\n              <MyCalendar date={currentDate} onChange={calendarOnChange} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography>\r\n            {children}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @returns\r\n */\r\nexport function useLoadData<T>(url: string, initialData: T | undefined) {\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url);\r\n      // await new Promise((r) => setTimeout(r, 1500)); // TODO: debug\r\n      console.log(url); // TODO: debug\r\n      console.log(result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload] as const;\r\n}\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<T>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T>(url: string, formData: FormDataType<T>) {\r\n  let response: HttpResponse<PostDataResult<T>>;\r\n  try {\r\n    console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T>>(url, formData);\r\n    console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box, List, TextField } from '@material-ui/core';\r\n\r\nimport { format } from 'date-fns';\r\nimport { MuiPickersContext } from '@material-ui/pickers/MuiPickersUtilsProvider';\r\n\r\nimport { VisitorInfoFront, FrontInputType } from '_models/VisitorInfo';\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { RowData, Columns } from './DataTable';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n\r\n  return createStyles({\r\n    list: {\r\n      display: 'flex',\r\n      flexFlow: 'row-wrap',\r\n      width: '100%',\r\n      '&:first-child div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n    },\r\n    checkAction: {\r\n      textAlign: 'center',\r\n      marginBottom: '10px',\r\n      '& Button': {\r\n        margin: '0 5%',\r\n        width: '40%',\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\ntype Inputs = VisitorInfoFront & FrontInputType;\r\n\r\ntype RowDataDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  currentDate: Date;\r\n  data: RowData;\r\n  columns: Columns[];\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataDialog(props: RowDataDialogProps) {\r\n  const { open, onClose, currentDate, data, columns, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>();\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd hh:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('checkIn', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('checkOut', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData('/test/testdata2.json', { inputs: formData, dirtyFields: dirtyFields }); // TODO: urlの変更\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  // 詳細情報のセット\r\n  // const setField = (field: string, value: string | boolean | number) => {// TODO:複数会議室が未対応\r\n  const setField = (field: string, value: any) => {\r\n    switch (field) {\r\n      // 予約時間\r\n      case 'apptTime':\r\n        const date = format(currentDate, 'yyyy/MM/dd', { locale: muiPickContext?.locale });\r\n        return date + ' ' + value;\r\n      case 'teaSupply':\r\n        return value ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no');\r\n      // その他\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  const listItems = columns\r\n    .slice()\r\n    .sort(function (a, b) {\r\n      return a.sort - b.sort;\r\n    })\r\n    .map((column) => {\r\n      const field = column.field;\r\n      const title = column.title;\r\n      const value = data[field as keyof RowData];\r\n      return (\r\n        <li key={field} className={classes.list}>\r\n          <div className={classes.title}>{title}</div>\r\n          <div className={classes.field}>{setField(field, value)}</div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{t('visitdialog.title')}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Box p={2}>\r\n            <form>\r\n              <div className={classes.checkAction}>\r\n                <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                  {t('visitdialog.button.check-in')}\r\n                </Button>\r\n                <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                  {t('visitdialog.button.check-out')}\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  autoComplete=\"off\"\r\n                  color=\"secondary\"\r\n                  id=\"visitorCardNumber\"\r\n                  label={t('visitdialog.form.visitor-card-number')}\r\n                  // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                  autoFocus\r\n                  {...register('visitorCardNumber', {\r\n                    // required: t('common.form.required') as string,\r\n                  })}\r\n                  error={!!errors.visitorCardNumber}\r\n                  helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Box>\r\n          <Box p={2}>\r\n            <List disablePadding={true}>{listItems}</List>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"secondary\">\r\n            {t('visitdialog.button.cancel')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport MaterialTable, { Column } from '@material-table/core';\r\nimport { tableIcons } from '_utils/MaterialTableIcons';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { RowDataDialog } from './RowDataDialog';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  hidden?: boolean; // テーブルに表示するか否か\r\n  sort: number; // ダイアログの表に表示する順番\r\n};\r\n\r\nexport type RowData = VisitorInfo & VisitorInfoReadOnly & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  url: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, url } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowData[]>(url, []);\r\n\r\n  // ダイアログの状態\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = (selectedRow: RowData) => {\r\n    setDialogOpen(true);\r\n    setCurrentRow(selectedRow);\r\n  };\r\n  // ダイアログを閉じる\r\n  const handleDialogClose = async () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime', sort: 1 },\r\n    { title: t('visittable.header.room-name'), field: 'roomName', sort: 4 },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany', sort: 5 },\r\n    { title: t('visittable.header.visitor-name'), field: 'visitorName', hidden: true, sort: 6 },\r\n    { title: t('visittable.header.tea-supply'), field: 'teaSupply', hidden: true, sort: 7 },\r\n    { title: t('visittable.header.number-of-visitor'), field: 'numberOfVisitor', hidden: true, sort: 8 },\r\n    { title: t('visittable.header.number-of-employee'), field: 'numberOfEmployee', hidden: true, sort: 9 },\r\n    { title: t('visittable.header.comment'), field: 'comment', hidden: true, sort: 10 },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName', sort: 11 },\r\n    { title: t('visittable.header.contact-addr'), field: 'contactAddr', sort: 12 },\r\n    { title: t('visittable.header.check-in'), field: 'checkIn', type: 'boolean', sort: 2 },\r\n    { title: t('visittable.header.check-out'), field: 'checkOut', type: 'boolean', sort: 3 },\r\n    { title: t('visittable.header.visitor-card-number'), field: 'visitorCardNumber', hidden: true, sort: 13 },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {currentRow && (\r\n        <RowDataDialog open={dialogOpen} onClose={handleDialogClose} currentDate={currentDate} data={currentRow} columns={columns} reload={reload} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { AppBar, Paper } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport { MuiPickersContext } from '@material-ui/pickers/MuiPickersUtilsProvider';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // タブ切り替え\r\n  const [value, setTabValue] = useState('1');\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const title = selectedDate ? format(selectedDate, 'yyyy/MM/dd', { locale: muiPickContext?.locale }) + ' ' + t('visitlist.title') : '';\r\n\r\n  return (\r\n    <BaseTemplate title={title} currentDate={selectedDate} calendarOnChange={handleDateChange}>\r\n      <Paper square>\r\n        <TabContext value={value}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n              <Tab label={t('visitlist.tab.conference-rooms')} value=\"1\" />\r\n              <Tab label={t('visitlist.tab.free-space')} value=\"2\" />\r\n            </TabList>\r\n          </AppBar>\r\n          <TabPanel value=\"1\">\r\n            <DataTable currentDate={selectedDate!} url={`/test/testdata1.json?timestamp=${selectedDate!.getTime()}`} />\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            <DataTable currentDate={selectedDate!} url={`/test/testdata1.json?timestamp=${selectedDate!.getTime()}`} />\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setselected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setselected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getUserInfo, removeUserInfo, saveUserInfo } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { MySnackberProvider } from '../_components/MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 315;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n  });\r\n});\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BaseTemplate = ({ children }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeUserInfo(); //sessionStrageからUser情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // MS認証の状態\r\n  const [signedIn, setSignedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        setEmail(user.email);\r\n        setSignedIn(true);\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          setEmail(user.email);\r\n          setSignedIn(true);\r\n        } else {\r\n          // TODO: ここに遷移することってある？？？\r\n          removeUserInfo();\r\n          setSignedIn(false);\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeUserInfo();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  if (!signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Visitors for Microsoft\r\n            </Typography>\r\n            <div>\r\n              <MyLocation></MyLocation>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={accountIconOpen}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}>{email}</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                  <ListItemIcon>\r\n                    <EditIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.created-visit-info')} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                  <ListItemIcon>\r\n                    <MeetingRoomIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n              </ListItem>\r\n            </Link>\r\n            <ListItem button onClick={refreshPage}>\r\n              <Tooltip title={t('main.menu.refresh') as string}>\r\n                <ListItemIcon>\r\n                  <RefreshIcon />\r\n                </ListItemIcon>\r\n              </Tooltip>\r\n              <ListItemText primary={t('main.menu.refresh')} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n            {children}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\n\r\nexport const useRowDataDialogStyles = makeStyles((tableTheme) => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n\r\n  return createStyles({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n  });\r\n});\r\n\r\ntype RowDataBaseDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function RowDataBaseDialog(props: RowDataBaseDialogProps) {\r\n  const { open, onClose, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{t('visitdialog.title')}</DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel}>{t('visitdialog.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.delete-confirm-message')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormSetValue, useWatch } from 'react-hook-form';\r\nimport { Box, FormControlLabel, Grid, Switch, TextField } from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomId: string;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, rooms, roomId, disabledRoom, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0);\r\n      setValue(`resourcies.${roomId}.numberOfEmployee`, 0);\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{ required: t('common.form.required') as string }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.name} {'<'}\r\n                {option.email}\r\n                {'>'}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfVisitor`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-visitor')}\r\n                error={!!getNestedError('numberOfVisitor')}\r\n                helperText={!!getNestedError('numberOfVisitor') && getNestedError('numberOfVisitor').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfEmployee`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-employee')}\r\n                error={!!getNestedError('numberOfEmployee')}\r\n                helperText={!!getNestedError('numberOfEmployee') && getNestedError('numberOfEmployee').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { useRowDataDialogStyles } from './RowDataBaseDialog';\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>\r\n            {data.roomName} {'<'}\r\n            {data.roomEmail}\r\n            {'>'}\r\n          </div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field}>{data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}</div>\r\n            </li>\r\n\r\n            {data.teaSupply && (\r\n              <>\r\n                <li key=\"number-of-visitor\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                    {data.numberOfVisitor}\r\n                  </div>\r\n                  <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                    {t('visittable.header.number-of-employee')}\r\n                  </div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                    {data.numberOfEmployee}\r\n                  </div>\r\n                </li>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Chip, CircularProgress, TextField } from '@material-ui/core';\r\n\r\nimport { EmailAddress } from '_models/VisitorInfo';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype AddrBookAutoCompleteType = {\r\n  control: Control<Inputs, object>;\r\n  type: 'required' | 'optional';\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n  disabled?: boolean;\r\n};\r\n\r\nexport function AddrBookAutoComplete(props: AddrBookAutoCompleteType) {\r\n  const { control, type, errors, disabled } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: loading }] = useLoadData<EmailAddress[]>(`/user/addressbook?filter=${filter}`, []);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      name={`mailto.${type}`}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={addressbook ? addressbook : []}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) =>\r\n            tagValue.map((option, index) => <Chip label={option.name} title={option.address} {...getTagProps({ index })} />)\r\n          }\r\n          filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={t(`visittable.header.event-mailto-${type}`)}\r\n              error={!!errors.mailto}\r\n              helperText={errors.mailto && (errors.mailto as any).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerTextFieldProps = {\r\n  name: keyof Inputs;\r\n  control: Control<Inputs, object>;\r\n  label: string;\r\n  required?: true;\r\n  multiline?: true;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerTextField(props: ControllerTextFieldProps) {\r\n  const { name, control, label, required, multiline, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={required ? { required: t('common.form.required') as string } : undefined}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          multiline={multiline}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { addMinutes } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { Room } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { RowDataType, tableTheme } from './DataTableBase';\r\nimport { RowDataBaseDialog, useRowDataDialogStyles } from './RowDataBaseDialog';\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { AddrBookAutoComplete } from './AddrBookAutoComplete';\r\nimport { ControllerTextField } from './ControllerTextField';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nconst startTimeBufferMinute = 0;\r\nconst endTimeBufferMinute = 30; //TODO: Interval config化？\r\nconst change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (start: Date | null = null, end: Date | null = null) => {\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: '',\r\n    visitorName: '',\r\n    mailto: { required: [], optional: [] },\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: '',\r\n        teaSupply: false,\r\n        numberOfVisitor: 0,\r\n        numberOfEmployee: 0,\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: '',\r\n    startTime: start ? start : addMinutes(change5MinuteIntervals(new Date()), startTimeBufferMinute),\r\n    endTime: end ? end : addMinutes(change5MinuteIntervals(new Date()), startTimeBufferMinute + endTimeBufferMinute),\r\n  } as Inputs;\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = getDefaultValues();\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        visitorName: data.visitorName,\r\n        mailto: data.mailto,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfVisitor: data.resourcies[room].numberOfVisitor,\r\n            numberOfEmployee: data.resourcies[room].numberOfEmployee,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues()));\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [roomsUrl, setRoomsUrl] = useState(defaultRoomsUrl);\r\n  const [{ data: rooms }] = useLoadData<Room[]>(roomsUrl, []);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      //TODO: 更新時、空き会議室検索は未対応\r\n      setRoomsUrl(defaultRoomsUrl);\r\n    } else {\r\n      setRoomsUrl(defaultRoomsUrl + `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}`);\r\n    }\r\n  }, [defaultRoomsUrl, getValues]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n  }, [buildRoomsUrl, open]);\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化アクション\r\n  const handleDateTimeChange = () => {\r\n    if (getValues('mode') === 'upd') return; //TODO: 更新時、空き会議室検索は未対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <RowDataBaseDialog open={open} onClose={onClose} data={data}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              {(() => {\r\n                if (data.isMSMultipleLocations) {\r\n                  /* mode=upd & 複数会議室 */\r\n                  return <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>;\r\n                } else {\r\n                  /* mode=upd & 単一会議室 */\r\n                  return (\r\n                    <List disablePadding={true}>\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                    </List>\r\n                  );\r\n                }\r\n              })()}\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              <AddrBookAutoComplete control={control} type=\"required\" errors={errors} disabled={data?.isMSMultipleLocations} />\r\n              <AddrBookAutoComplete control={control} type=\"optional\" errors={errors} disabled={data?.isMSMultipleLocations} />\r\n\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleDateTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleDateTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ margin: 'auto' }}>\r\n                  <Button onClick={handleSearch} variant=\"contained\" color=\"primary\" fullWidth disabled={data?.isMSMultipleLocations || !hiddenRooms}>\r\n                    {t('visitorinfoform.form.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && <RoomInputFields control={control} setValue={setValue} rooms={rooms} roomId={ADD_ROOM_KEY} errors={errors} />\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      rooms={rooms}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"visitCompany\" control={control} label={t('visittable.header.visit-company')} required errors={errors} />\r\n              <ControllerTextField name=\"visitorName\" control={control} label={t('visittable.header.visitor-name')} errors={errors} />\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} errors={errors} />\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('visitorinfoform.form.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('visitorinfoform.form.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </RowDataBaseDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List } from '@material-ui/core';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RowDataBaseDialog, useRowDataDialogStyles } from './RowDataBaseDialog';\r\nimport { RoomReadFields } from './RoomReadFields';\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <RowDataBaseDialog open={open} onClose={onClose} data={data}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          <li key=\"app-time\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n            <div className={classes.field}>{data.apptTime}</div>\r\n          </li>\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>{data.reservationName}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box p={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n            <div className={classes.field}>{data.visitCompany}</div>\r\n          </li>\r\n          <li key=\"visitor-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n            <div className={classes.field}>{data.visitorName}</div>\r\n          </li>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </RowDataBaseDialog>\r\n  );\r\n}\r\n","import { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\n\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n};\r\n\r\nexport type DataDialogAction = {\r\n  type: 'inputOpen' | 'addDataOpen' | 'inputClose' | 'readOpen' | 'readClose';\r\n};\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n      />\r\n      {!!currentRow && <RowDataReadDialog open={dataDialogHook.state.readOpen} onClose={handleReadDialogClose} data={currentRow} />}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\n\r\nimport { tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType, tableTheme } from '../DataTableBase';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles<Theme>(() => {\r\n  return createStyles({\r\n    //cell default\r\n    cellApptTime: {},\r\n    cellRoomName: {},\r\n    cellRoomStatus: {},\r\n    cellReservationName: {},\r\n    cellVisitCompany: {},\r\n    cellSubject: {},\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowDataType[]>(\r\n    `/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = (selectedRow: RowDataType) => {\r\n    if (selectedRow.isAuthor) {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n    } else {\r\n      dataDialogHook.dispatch({ type: 'readOpen' });\r\n    }\r\n    setCurrentRow(selectedRow);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n  ];\r\n\r\n  const cellStyle = (field: String, rowData: RowDataType) => {\r\n    const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n    return clsx(\r\n      classes[`cell${className}` as keyof ClassNameMap],\r\n      rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n    );\r\n  };\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowDataType>[]}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import React, { useReducer, useState } from 'react';\r\n\r\nimport { Box, Button, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return createStyles({\r\n    datePickerArea: {},\r\n    actionButtonArea: {\r\n      textAlign: 'right',\r\n      margin: 'auto',\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    keyboardDatePicker: {\r\n      '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n    },\r\n    title: {\r\n      margin: 'auto 0.25em',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  });\r\n});\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dataDialogDispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box px={2} py={1}>\r\n          <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n            <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n              <Grid item className={classes.datePicker}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label={t('main.visitlist.picker-label')}\r\n                  format=\"yyyy/MM/dd\"\r\n                  showTodayButton\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  size=\"small\"\r\n                  className={classes.keyboardDatePicker}\r\n                  inputProps={{\r\n                    style: {\r\n                      width: 85,\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.title}>\r\n                <Typography component=\"h5\">{t('main.visitlist.title')}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n                {t('main.visitlist.add-event')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  hidden?: boolean; // テーブルに表示するか否か\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowDataType[]>(\r\n    `/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = (selectedRow: RowDataType) => {\r\n    if (selectedRow.isAuthor) {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n    } else {\r\n      dataDialogHook.dispatch({ type: 'readOpen' });\r\n    }\r\n    setCurrentRow(selectedRow);\r\n  };\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <>test</>\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import React, { useReducer, useState } from 'react';\r\n\r\nimport { AppBar, Box, Button, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BaseTemplate from '../BaseTemplate';\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return createStyles({\r\n    datePickerArea: {},\r\n    actionButtonArea: {\r\n      textAlign: 'right',\r\n      margin: 'auto',\r\n    },\r\n    datePicker: {\r\n      margin: 'auto 0',\r\n    },\r\n    keyboardDatePicker: {\r\n      '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n    },\r\n    title: {\r\n      margin: 'auto 0.25em',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  });\r\n});\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // タブ切り替え\r\n  const [value, setTabValue] = useState('1');\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dataDialogDispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box px={2} py={1}>\r\n          <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n            <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n              <Grid item className={classes.datePicker}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label={t('main.byroom.picker-label')}\r\n                  format=\"yyyy/MM/dd\"\r\n                  showTodayButton\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  size=\"small\"\r\n                  className={classes.keyboardDatePicker}\r\n                  inputProps={{\r\n                    style: {\r\n                      width: 85,\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.title}>\r\n                <Typography component=\"h5\">{t('main.byroom.title')}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n                {t('main.byroom.add-event')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <TabContext value={value}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n              <Tab label={t('visitlist.tab.conference-rooms')} value=\"1\" />\r\n              <Tab label={t('visitlist.tab.free-space')} value=\"2\" />\r\n            </TabList>\r\n          </AppBar>\r\n          <TabPanel value=\"1\">\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { Login } from './login/Front';\r\nimport { SignIn } from './login/Main';\r\nimport { AuthorizeWrapper } from 'login/Main/Authorize';\r\n\r\nimport { VisitList as Front } from './front/visitList';\r\n\r\nimport { VisitList as Main } from './main/visitList';\r\nimport { ByRoom } from './main/byRoom';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {/*** フロント ***/}\r\n        <Route exact path=\"/front/login\" component={Login} />\r\n        {/* <Route exact path=\"/logout\" component={Logout} /> */}\r\n        <Route path=\"/front\" component={Front} />\r\n        {/*** 一般メイン ***/}\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/main\" component={Main} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}