{"version":3,"sources":["_styles/Theme.ts","_components/Copyright.tsx","_components/Spinner.tsx","_styles/LoginStyles.ts","_utils/Http.ts","_utils/SessionStrage.ts","login/index.tsx","_components/MySnackbar.tsx","_components/MySnackbarContext.tsx","login/Authorize.tsx","_utils/useLoadData.ts","_components/MyLocation.tsx","_components/BaseTemplate.tsx","_utils/MaterialTableIcons.tsx","_styles/VisitorTableStyle.ts","_styles/TableTheme.ts","_models/Room.ts","_utils/FetchPostData.ts","_components/ControllerTextField.tsx","_components/AddrBookAutoComplete.tsx","_components/MyDialog.tsx","main/DeleteConfirmDialog.tsx","main/RoomInputFields.tsx","main/RoomReadFields.tsx","main/ControllerDateTimePicker.tsx","main/RowDataInputDialog.tsx","_components/AddrBookUserDisplay.tsx","main/RowDataReadDialog.tsx","main/DataTableBase.tsx","main/visitList/DataTable.tsx","_components/MyCalendar.tsx","main/HeaderActions.tsx","main/visitList/index.tsx","main/byRoom/TimeBar.tsx","main/byRoom/DataTable.tsx","main/CategoryTabContext.tsx","main/byRoom/index.tsx","main/front/RowDataFrontDialog.tsx","main/front/DataTable.tsx","main/front/index.tsx","master/DeleteConfirmDialog.tsx","master/RowDataInputDialog.tsx","master/DataTableBase.tsx","master/DataTable.tsx","master/HeaderActions.tsx","_models/Role.ts","master/role/DataInputs.tsx","master/role/index.tsx","master/location/DataInputs.tsx","master/location/index.tsx","master/category/DataInputs.tsx","master/category/index.tsx","master/room/DataInputs.tsx","master/room/index.tsx","Routes.tsx","_utils/JaDateFnsUtils.ts","App.tsx","i18n.ts","index.tsx"],"names":["theme","createTheme","palette","primary","purple","secondary","amber","props","MuiTextField","variant","mixins","toolbar","minHeight","overrides","MuiTooltip","tooltip","fontSize","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","zIndex","Spinner","classes","Backdrop","className","open","CircularProgress","makeLoginStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","form","width","submit","http","request","a","fetch","response","json","parsedBody","ok","console","error","body","Error","statusText","get","path","args","method","Request","post","JSON","stringify","temp_key","user_key","saveUserInfo","user","sessionStorage","setItem","removeUserInfo","removeItem","SignIn","t","useTranslation","match","useRouteMatch","useState","isLoading","setLoding","handleClick","location","params","result","window","url","log","Container","component","maxWidth","Avatar","LockOutlined","Button","onClick","fullWidth","Box","mt","Alert","elevation","mySnackberReducer","state","action","type","severity","message","MySnackbar","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MySnackberContext","createContext","MySnackberProvider","children","useReducer","dispatch","_event","reason","Provider","value","AuthorizeWrapper","Authorize","snackberContext","useContext","useEffect","sendAuthCode","search","getItem","first","setTimeout","replace","useLoadData","initialData","data","setData","setIsLoading","isError","setIsError","fetchData","useCallback","reload","MyLocation","locations","history","useHistory","selected","setSelected","length","FormControl","size","Select","style","onChange","event","target","push","map","MenuItem","name","createStyles","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerCloseIcon","justifyContent","padding","calendarHidden","pageTitle","marginBottom","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","link","textDecoration","nested","paddingLeft","BaseTemplate","adminMode","frontMode","menuOpen","setOpen","settingsOpen","setSettingsOpen","React","anchorEl","setAnchorEl","accountIconOpen","Boolean","handleMenuClose","handleSignOut","initialState","signedIn","email","isAdmin","isFront","userStorage","checkAuth","parse","conditionalChildren","AppBar","clsx","Toolbar","IconButton","edge","noWrap","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","Drawer","Divider","List","to","ListItem","button","Tooltip","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","pt","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","pageingOntions","paging","pageSize","pageSizeOptions","makeVisitorTableStyles","cellApptTime","cellRoomName","cellRoomStatus","cellReservationName","cellVisitCompany","cellSubject","cellContactAddr","cellCheckIn","cellCheckOut","declinedApptTime","declinedRoomName","wordBreak","border","i18next","cellStyle","field","rowData","charAt","toUpperCase","slice","roomStatus","tableTheme","grey","MuiTableRow","MuiTable","borderCollapse","makeTableDialogStyle","list","borderTop","boxSizing","flexBasis","light","borderLeft","borderBottom","borderRight","fieldSlim","nameOfRoomType","nameOfUsageRangeForVisitor","nameOfUsageRange","fetchPostData","formData","Promise","resolve","reject","ControllerTextField","control","label","required","selectList","multiline","disabled","validation","errors","rules","render","TextField","select","helperText","option","index","AddrBookAutoComplete","filter","setFilter","addressbook","loading","onChangeHandle","Autocomplete","multiple","limitTags","undefined","onOpen","options","noOptionsText","getOptionLabel","address","renderTags","tagValue","getTagProps","Chip","filterSelectedOptions","getOptionSelected","renderInput","InputProps","endAdornment","ev","_","MyDialog","Dialog","DialogTitle","DialogContent","dividers","DialogActions","DeleteConfirmDialog","DialogContentText","autoFocus","RoomInputFields","setValue","rooms","roomId","disabledVisitor","disabledRoom","disabledTeaSupply","setDisabledTeaSupply","roomWatch","useWatch","some","room","teaSupply","disabledTeaMember","setDisabledTeaMember","teaWatch","getNestedError","px","textAlign","validate","Grid","item","xs","FormControlLabel","Switch","e","checked","opacity","inputProps","min","useRowDataDialogStyles","strRoomStatus","status","RoomReadFields","hiddenTeaSupply","disablePadding","roomName","roomEmail","numberOfVisitor","numberOfEmployee","ControllerDateTimePicker","getValues","handleDateTimeChange","getTime","DateTimePicker","ampm","format","disablePast","minutesStep","formAction","note","inputformTheme","minRows","change5MinuteIntervals","date","Math","ceil","ADD_ROOM_KEY","getDefaultValues","start","startDate","mode","iCalUId","subject","visitorId","visitCompany","visitorName","mailto","authors","optional","usageRange","resourcies","roomForEdit","comment","contactAddr","startTime","addMinutes","endTime","startTimeBufferMinute","RowDataInputDialog","addDefault","delConfOpen","setDelConfOpen","defaultValues","useForm","handleSubmit","reset","trigger","setError","formState","isDirty","isSubmitting","dirtyFields","Object","keys","reduce","newObj","startDateTime","endDateTime","cloneDeep","hiddenRooms","setHiddenRooms","usageRangeWatch","defaultRoomsUrl","roomsUrl","setRoomsUrl","buildRoomsUrl","setDisabledVisitor","onSubmit","inputs","success","r","key","handleSearch","activeSearchButton","ThemeProvider","isMSMultipleLocations","reservationName","p","py","startIcon","deleteOk","flexWrap","AddrBookUserDisplay","i","RowDataReadDialog","isAttendees","apptTime","dataDialogReducer","inputOpen","readOpen","DataTableBase","dataDialogHook","currentRow","handleInputDialogClose","handleReadDialogClose","DataTable","currentDate","setCurrentRow","handleDialogOpen","selectedRow","isAuthor","columns","components","Cell","columnDef","onRowClick","showTitle","headerStyle","tableLayout","icons","keyboardDatePicker","MyCalendar","showTodayButton","KeyboardButtonProps","datePickerArea","actionButtonArea","datePicker","HeaderActions","subtitle","onDateChange","sm","VisitList","selectedDate","setSelectedDate","dataDialogState","dataDialogDispatch","Paper","square","pb","shortStyle","halfWidth","scale","transform","x","y","viewHeight","viewBox","viewWidth","fontHeight","timeToPoint","time","boxStyle","zero","startOfDay","differenceInMinutes","getBoxData","end","x2","isSameDay","startOfCurrent","endOfCurrent","endOfDay","isBefore","isAfter","calcX","hour","createTransform","HtmlTooltip","withStyles","text","typography","pxToRem","strokeWidth","stroke","fill","dominantBaseline","cursor","fillOpacity","info","warning","TimeBar","schedule","events","onClickCallback","setTransform","createScheduleBox","boxData","rx","ry","createEventBox","myEvent","rectSchedules","useMemo","scheduleItems","rectEvents","preserveAspectRatio","x1","y1","y2","range","$","minX","fontX","svg","closest","createSVGPoint","clientX","clientY","ctm","getScreenCTM","$time","point","pointToTime","matrixTransform","inverse","floor","handleCreateClick","category","timeBars","schedules","sIdx","eIdx","eventsIndex","num","CategoryTabContext","tabPanelContent","tabValue","setTabValue","handleTabChange","newValue","categories","tabList","TabList","indicatorColor","textColor","cate","Tab","tabPanels","TabPanel","cloneElement","TabContext","ByRoom","checkAction","RowDataFrontDialog","frontClasses","muiPickContext","MuiPickersContext","register","checkIn","checkOut","visitorCardNumber","timestamp","locale","autoComplete","frontDialogOpen","setFrontDialogOpen","handleFrontDialogOpen","handleFrontDialogClose","actions","icon","localization","header","Front","inputFields","methods","values","master","nameOfRoleType","DataInputs","useFormContext","RoleSettings","members","pattern","LocationSettings","sort","isLimitedPublic","showMembers","setShowMembers","CategorySettings","limitedPublic","typeWatch","RoomSettings","find","Routes","exact","from","JaDateFnsUtils","jaLocale","DateFnsUtils","App","CssBaseline","utils","resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff8ad695.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: purple,\r\n    secondary: amber,\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: { minHeight: 50 },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: '1em',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Link, Typography } from '@material-ui/core';\r\n\r\n/**\r\n * コピーライトコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Version. 1.0.0-beta.1 - Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.liveness.co.jp/\">\r\n        liveness, Inc.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.tooltip + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\ntype SpinnerProps = {\r\n  open: boolean;\r\n};\r\n\r\nexport function Spinner(props: SpinnerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={props.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const makeLoginStyles = () => {\r\n  return makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n};\r\n","export type PostDataResult<T> = {\r\n  success: boolean;\r\n  errors?: { [P in keyof T]?: string[] };\r\n};\r\n\r\ntype ServerErrorType = { body: string };\r\n\r\nexport interface HttpResponse<T> extends Response {\r\n  parsedBody?: T & ServerErrorType;\r\n}\r\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\r\n  const response: HttpResponse<T> = await fetch(request);\r\n\r\n  try {\r\n    // may error if there is no body\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    console.error('Server Error: ', response.parsedBody?.body);\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\nexport async function get<T>(path: string, args: RequestInit = { method: 'get' }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n\r\nexport async function post<T>(path: string, body: any, args: RequestInit = { method: 'post', body: JSON.stringify(body) }): Promise<HttpResponse<T>> {\r\n  return await http<T>(new Request(path, args));\r\n}\r\n","/**\r\n * login時のlocation設定を一時的に格納します\r\n */\r\nconst temp_key = 'liveness-visitor-temp';\r\nexport const saveTempLocation = (location: string) => {\r\n  sessionStorage.setItem(temp_key, location);\r\n};\r\nexport const getTempLocation = () => {\r\n  return sessionStorage.getItem(temp_key);\r\n};\r\nexport const removeTempLocation = () => {\r\n  sessionStorage.removeItem(temp_key);\r\n};\r\n/**\r\n * user情報を格納します\r\n */\r\nconst user_key = 'liveness-visitor-user';\r\nexport const saveUserInfo = (user: string) => {\r\n  sessionStorage.setItem(user_key, user);\r\n};\r\nexport const getUserInfo = () => {\r\n  return sessionStorage.getItem(user_key);\r\n};\r\nexport const removeUserInfo = () => {\r\n  sessionStorage.removeItem(user_key);\r\n};\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Avatar, Box, Button, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { get } from '_utils/Http';\r\nimport { saveTempLocation } from '_utils/SessionStrage';\r\nimport { LocationParams } from '_models/Location';\r\n\r\ntype Response = {\r\n  url: string;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function SignIn() {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      setLoding(true);\r\n      saveTempLocation(match.params.location); // sessionStrageにlocationを格納\r\n      const result = await get<Response>('/oauth/signin');\r\n      if (result.parsedBody) {\r\n        window.location.href = result.parsedBody.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n        <Button onClick={handleClick} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n          {t('login.msal.login')}\r\n        </Button>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport type MySnackberState = {\r\n  severity: Color;\r\n  message: string;\r\n  open: boolean;\r\n};\r\n\r\nexport type MySnackberProps = {\r\n  onClose: () => void;\r\n} & MySnackberState;\r\n\r\nexport type MySnackberAction =\r\n  | {\r\n      type: Color;\r\n      message: string;\r\n    }\r\n  | {\r\n      type: 'hide';\r\n    };\r\n\r\nexport const mySnackberReducer = (state: MySnackberState, action: MySnackberAction) => {\r\n  switch (action.type) {\r\n    case 'hide':\r\n      return { ...state, open: false };\r\n    case 'success':\r\n    case 'info':\r\n    case 'warning':\r\n    case 'error':\r\n      return { ...state, open: true, severity: action.type, message: action.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MySnackbar(props: MySnackberProps) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={1500} onClose={onClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert onClose={onClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { createContext, useReducer } from 'react';\r\n\r\nimport MySnackbar, { MySnackberAction, mySnackberReducer, MySnackberState } from './MySnackbar';\r\n\r\nexport type MySnackberContextType = {\r\n  state: MySnackberState;\r\n  dispatch: React.Dispatch<MySnackberAction>;\r\n};\r\n\r\nexport const MySnackberContext = createContext({} as MySnackberContextType);\r\n\r\ntype MySnackberProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MySnackberProvider(props: MySnackberProviderProps) {\r\n  const { children } = props;\r\n\r\n  // スナックバーの初期値\r\n  const initialState: MySnackberState = {\r\n    severity: 'info',\r\n    message: '',\r\n    open: false,\r\n  };\r\n  // スナックバーの状態管理\r\n  const [state, dispatch] = useReducer(mySnackberReducer, initialState);\r\n\r\n  const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: 'hide' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySnackbar {...state} onClose={handleClose} />\r\n      <MySnackberContext.Provider value={{ state, dispatch }}>{children}</MySnackberContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Box, Container, Typography } from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { Copyright } from '../_components/Copyright';\r\nimport { Spinner } from '../_components/Spinner';\r\nimport { MySnackberContext, MySnackberProvider } from '_components/MySnackbarContext';\r\nimport { makeLoginStyles } from '_styles/LoginStyles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getTempLocation, removeTempLocation } from '_utils/SessionStrage';\r\nimport { Location } from '_models/Location';\r\n\r\ntype Response = {\r\n  ok: boolean;\r\n};\r\n\r\nconst useStyles = makeLoginStyles();\r\n\r\nexport function AuthorizeWrapper() {\r\n  return (\r\n    <MySnackberProvider>\r\n      <Authorize />\r\n    </MySnackberProvider>\r\n  );\r\n}\r\n\r\nexport function Authorize() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // スピナーの状態\r\n  const [isLoading, setLoding] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 認可コードをバックエンドへ渡す\r\n    const sendAuthCode = async () => {\r\n      try {\r\n        const search = window.location.search;\r\n        const result = await get<Response>('/oauth/callback' + search);\r\n        if (result.parsedBody) {\r\n          setLoding(false);\r\n          if (result.parsedBody.ok) {\r\n            snackberContext.dispatch({ type: 'success', message: t('common.msg.login-success') });\r\n          } else {\r\n            snackberContext.dispatch({ type: 'error', message: t('common.msg.login-failed') }); //TODO:あとでtestが必要\r\n          }\r\n          // ロケーションを取得\r\n          let location = getTempLocation(); // sessionStrageからlocationを取得\r\n          removeTempLocation(); // sessionStrageからlocationを削除\r\n          if (!location || location === 'undefined') {\r\n            const first = await get<Location>('/location/first');\r\n            if (first.parsedBody) {\r\n              location = first.parsedBody.url;\r\n            } else {\r\n              // throw new Error('Location is not registered.');\r\n            }\r\n          }\r\n          // urlを設定\r\n          let url = `/${location}/main`;\r\n          // ロケーション設定が未だの場合\r\n          if (location === 'undefined') {\r\n            url = '/settings/location';\r\n          }\r\n          setTimeout(() => {\r\n            window.location.replace(url);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendAuthCode();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Spinner open={isLoading} />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Visitors for Microsoft\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { get } from '_utils/Http';\r\n\r\n/**\r\n * データ取得用カスタムフック\r\n * @param url 取得先URL\r\n * @param initialData データ取得前の初期表示データ\r\n * @returns\r\n */\r\nexport function useLoadData<T>(url: string, initialData: T | undefined) {\r\n  // データの状態\r\n  const [data, setData] = useState<T | undefined>(initialData);\r\n  // ローディングの状態\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // エラーの状態\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // データ取得\r\n  const fetchData = useCallback(async () => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await get<T>(url);\r\n      // await new Promise((r) => setTimeout(r, 1500)); // TODO: debug\r\n      console.log(url); // TODO: debug\r\n      console.log(result.parsedBody); // TODO: debug\r\n      if (result.parsedBody) setData(result.parsedBody);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url]);\r\n\r\n  // データ再取得\r\n  const reload = useCallback(async () => fetchData(), [fetchData]);\r\n\r\n  // データ初回表示\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [{ data, isLoading, isError }, reload] as const;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Location, LocationParams } from '_models/Location';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nexport function MyLocation() {\r\n  // ロケーション一覧取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // ロケーションの状態\r\n  const [selected, setSelected] = useState<string>(match.params.location);\r\n  const handleOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelected(event.target.value as string);\r\n    const url = match.path.replace(/:location/i, event.target.value as string);\r\n    history.push(url);\r\n  };\r\n\r\n  if (!locations || locations.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <FormControl color=\"primary\" margin=\"dense\" size=\"small\">\r\n      <Select style={{ color: 'white' }} value={selected} onChange={handleOnChange}>\r\n        {locations.map((data) => {\r\n          return (\r\n            <MenuItem key={data.url} value={data.url}>\r\n              {data.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ListItemText, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { get } from '_utils/Http';\r\nimport { getUserInfo, removeUserInfo, saveUserInfo } from '_utils/SessionStrage';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { MySnackberProvider } from './MySnackbarContext';\r\nimport { MyLocation } from '_components/MyLocation';\r\n\r\nimport { User } from '_models/User';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const drawerWidth = 230;\r\n\r\n  return createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    location: {\r\n      color: 'white',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: theme.spacing(9),\r\n      // },\r\n    },\r\n    drawerCloseIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    calendarHidden: {\r\n      display: 'none',\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      // color: theme.palette.text.secondary,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n    },\r\n    nested: {\r\n      // paddingLeft: theme.spacing(4),\r\n      paddingLeft: theme.spacing(10),\r\n    },\r\n  });\r\n});\r\n\r\ntype UserStorageState = { signedIn: boolean } & User;\r\ntype UserStorageAction = { type: 'signedIn'; user: User } | { type: 'signedOut' };\r\n\r\ntype BaseTemplateProps = {\r\n  children: React.ReactNode;\r\n  adminMode?: true;\r\n  frontMode?: true;\r\n  menuOpen?: true;\r\n};\r\n\r\nconst BaseTemplate = ({ children, adminMode, frontMode, menuOpen }: BaseTemplateProps) => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 左メニューエリアの開閉\r\n  const [open, setOpen] = useState(menuOpen ? true : false);\r\n\r\n  // 左メニュー：設定の詳細開閉\r\n  const [settingsOpen, setSettingsOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setSettingsOpen(false);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n    }\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  // アカウントアイコンの制御\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const accountIconOpen = Boolean(anchorEl);\r\n  const handleAccountMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ログアウトアクション\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const result = await get<string | undefined>('/oauth/signout');\r\n      if (result.ok) {\r\n        removeUserInfo(); //sessionStrageからUser情報を削除\r\n        window.location.href = '/login';\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // ストレージの状態初期値\r\n  const initialState: UserStorageState = {\r\n    signedIn: false,\r\n    email: '',\r\n    name: '',\r\n    isAdmin: false,\r\n    isFront: false,\r\n  };\r\n  // ストレージの状態設定\r\n  const userStorageReducer = (state: UserStorageState, action: UserStorageAction) => {\r\n    switch (action.type) {\r\n      case 'signedIn':\r\n        return { signedIn: true, email: action.user.email, name: action.user.name, isAdmin: action.user.isAdmin, isFront: action.user.isFront };\r\n      case 'signedOut':\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  // ストレージの状態管理\r\n  const [userStorage, dispatch] = useReducer(userStorageReducer, initialState);\r\n\r\n  // MS認証状態の確認\r\n  const checkAuth = useCallback(async () => {\r\n    try {\r\n      const data = getUserInfo(); //sessionStrageからUser情報を取得\r\n      if (data) {\r\n        // sessionStrageから復元\r\n        const user = JSON.parse(data) as User;\r\n        dispatch({ type: 'signedIn', user: user });\r\n      } else {\r\n        // サーバーのセッションにユーザー情報が登録されているか確認\r\n        const result = await get<User>('/user/me');\r\n        if (result.parsedBody) {\r\n          const user = result.parsedBody;\r\n          saveUserInfo(JSON.stringify(user)); //sessionStrageにUser情報を格納\r\n          dispatch({ type: 'signedIn', user: user });\r\n        } else {\r\n          // TODO: ここに遷移することってある？？？\r\n          removeUserInfo();\r\n          dispatch({ type: 'signedOut' });\r\n          console.log('Failed to retrieve email');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // serverのpoliciesで弾かれた場合、ここへ遷移\r\n      removeUserInfo();\r\n      window.location.href = '/login';\r\n    }\r\n  }, []);\r\n\r\n  // 画面リフレッシュ\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, [checkAuth]);\r\n\r\n  // 権限制御をつけてchildrenを表示する\r\n  let conditionalChildren = children;\r\n  const error = <>{t('common.msg.authority-error')}</>;\r\n  if (adminMode && !userStorage.isAdmin) {\r\n    conditionalChildren = error; // 管理者Roleエラー\r\n  }\r\n  if (frontMode && !userStorage.isFront) {\r\n    conditionalChildren = error; // フロントRoleエラー\r\n  }\r\n\r\n  if (!userStorage.signedIn) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <MySnackberProvider>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Visitors for Microsoft\r\n            </Typography>\r\n            <div>\r\n              <MyLocation></MyLocation>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={accountIconOpen}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}>{userStorage.email}</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>{t('main.menu.logout')}</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.drawerCloseIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to={`/${match.params.location}/main`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.created-visit-info') as string}>\r\n                  <ListItemIcon>\r\n                    <EditIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.created-visit-info')} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={`/${match.params.location}/main/byroom`} className={classes.link}>\r\n              <ListItem button>\r\n                <Tooltip title={t('main.menu.by-meeting-room') as string}>\r\n                  <ListItemIcon>\r\n                    <MeetingRoomIcon />\r\n                  </ListItemIcon>\r\n                </Tooltip>\r\n                <ListItemText primary={t('main.menu.by-meeting-room')} />\r\n              </ListItem>\r\n            </Link>\r\n            {userStorage.isFront && (\r\n              <Link to={`/${match.params.location}/front`} className={classes.link}>\r\n                <ListItem button>\r\n                  <Tooltip title={t('main.menu.front') as string}>\r\n                    <ListItemIcon>\r\n                      <PeopleIcon />\r\n                    </ListItemIcon>\r\n                  </Tooltip>\r\n                  <ListItemText primary={t('main.menu.front')} />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {userStorage.isAdmin && (\r\n              <>\r\n                <ListItem button onClick={handleSettingsClick}>\r\n                  <ListItemIcon>\r\n                    <SettingsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('main.menu.settings')} />\r\n                  {settingsOpen ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={settingsOpen} timeout=\"auto\" unmountOnExit>\r\n                  <Link to={`/${match.params.location}/settings/role`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.role')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/location`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.location')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/category`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.category')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${match.params.location}/settings/room`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemText primary={t('main.menu.settings.room')} />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Collapse>\r\n              </>\r\n            )}\r\n            <ListItem button onClick={refreshPage}>\r\n              <Tooltip title={t('main.menu.refresh') as string}>\r\n                <ListItemIcon>\r\n                  <RefreshIcon />\r\n                </ListItemIcon>\r\n              </Tooltip>\r\n              <ListItemText primary={t('main.menu.refresh')} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {/* <Typography component=\"h2\" variant=\"h5\" color=\"inherit\" noWrap className={classes.pageTitle}>\r\n              {title}\r\n            </Typography> */}\r\n            {conditionalChildren}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </MySnackberProvider>\r\n  );\r\n};\r\n\r\nexport default BaseTemplate;\r\n","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Icons } from 'material-table';\r\n\r\n/**\r\n * MaterialTableでMaterialIconを表示するための定義\r\n */\r\nexport const tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n/**\r\n * ページ設定共通用\r\n */\r\nexport const pageingOntions = {\r\n  paging: true,\r\n  pageSize: 10, // make initial page size\r\n  // emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n  pageSizeOptions: [5, 10, 20, 50], // rows selection options\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport i18next from 'i18next';\r\nimport clsx from 'clsx';\r\nimport { FrontRowData } from 'main/front/DataTable';\r\nimport { RowDataType } from 'main/DataTableBase';\r\n\r\nexport const makeVisitorTableStyles = () => {\r\n  return makeStyles(() => ({\r\n    //cell default\r\n    cellApptTime: {},\r\n    cellRoomName: {},\r\n    cellRoomStatus: {},\r\n    cellReservationName: {},\r\n    cellVisitCompany: {},\r\n    cellSubject: {},\r\n    cellContactAddr: {},\r\n    cellCheckIn: {},\r\n    cellCheckOut: {},\r\n    // 会議室状態が辞退の場合\r\n    declinedApptTime: { textDecoration: 'line-through 2px solid red' },\r\n    declinedRoomName: {\r\n      '&::after': {\r\n        wordBreak: 'keep-all',\r\n        marginLeft: 5,\r\n        padding: '1px 5px',\r\n        color: 'red',\r\n        border: '1px solid red',\r\n        content: `\"${i18next.t('visitdialog.view.resource-status-declined')}\"`,\r\n      },\r\n    },\r\n  }));\r\n};\r\n\r\nexport const cellStyle = (field: String, rowData: RowDataType | FrontRowData, classes: ClassNameMap<string>) => {\r\n  const className = field.charAt(0).toUpperCase() + field.slice(1);\r\n  return clsx(\r\n    classes[`cell${className}` as keyof ClassNameMap],\r\n    rowData.roomStatus === 'declined' && classes[`declined${className}` as keyof ClassNameMap]\r\n  );\r\n};\r\n","import { createTheme, makeStyles } from '@material-ui/core';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nexport const tableTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[300],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTableRow: {\r\n      // hover: true,\r\n      // selected: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        borderCollapse: 'separate',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const makeTableDialogStyle = () => {\r\n  const border = 'thin solid rgba(0, 0, 0, 0.12)';\r\n  return makeStyles((tableTheme) => ({\r\n    list: {\r\n      display: 'flex',\r\n      // flexFlow: 'row-wrap',\r\n      // width: '100%',\r\n      '&:first-child > div': {\r\n        borderTop: border,\r\n      },\r\n    },\r\n    title: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '25%',\r\n      padding: '0.7em',\r\n      backgroundColor: tableTheme.palette.primary.light,\r\n      borderLeft: border,\r\n      borderBottom: border,\r\n    },\r\n    field: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.7em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    fieldSlim: {\r\n      boxSizing: 'border-box',\r\n      flexBasis: '75%',\r\n      padding: '0.2em',\r\n      borderRight: border,\r\n      borderBottom: border,\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n  }));\r\n};\r\n","export const nameOfRoomType = ['rooms', 'free'] as const;\r\nexport type RoomType = typeof nameOfRoomType[number];\r\n\r\nexport const nameOfUsageRangeForVisitor = ['inside', 'outside'] as const;\r\nexport type UsageRangeForVisitor = typeof nameOfUsageRangeForVisitor[number];\r\nexport const nameOfUsageRange = ['none', ...nameOfUsageRangeForVisitor] as const;\r\nexport type UsageRange = typeof nameOfUsageRange[number];\r\n\r\nexport type Room = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  sort: string;\r\n  usageRange: UsageRange;\r\n  type: RoomType;\r\n  teaSupply: boolean;\r\n  location: string;\r\n  category: string;\r\n};\r\n","import { post, HttpResponse, PostDataResult } from '_utils/Http';\r\nimport { DeepMap, DeepPartial } from 'react-hook-form/dist/types/utils';\r\n\r\ntype FormDataType<T, U> = {\r\n  inputs: T;\r\n  // dirtyFields: { [P in keyof T]?: boolean };\r\n  dirtyFields: DeepMap<DeepPartial<U>, boolean>;\r\n};\r\n\r\nexport async function fetchPostData<T, U>(url: string, formData: FormDataType<T, U>) {\r\n  let response: HttpResponse<PostDataResult<T>>;\r\n  try {\r\n    console.log('formData', formData); // TODO: debug\r\n    response = await post<PostDataResult<T>>(url, formData);\r\n    console.log('response', response); // TODO: debug\r\n\r\n    const result = response.parsedBody;\r\n    if (result) {\r\n      return Promise.resolve(result);\r\n    } else {\r\n      return Promise.reject(new Error('No Result Error'));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path, RegisterOptions } from 'react-hook-form';\r\n\r\ntype ControllerTextFieldProps<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  required?: true | boolean;\r\n  validation?: RegisterOptions;\r\n  multiline?: true | boolean;\r\n  disabled?: true | boolean;\r\n  selectList?: SelectOption[];\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n};\r\nexport type SelectOption = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nexport function ControllerTextField<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: ControllerTextFieldProps<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, required, selectList, multiline, disabled, validation, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const rules: RegisterOptions = { required: required ? (t('common.form.required') as string) : false, ...validation };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          disabled={disabled}\r\n          multiline={multiline}\r\n          select={!!selectList}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n        >\r\n          {!!selectList &&\r\n            selectList.map((option, index) => (\r\n              <option key={`${name}-${index}`} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, FieldValues, Path } from 'react-hook-form';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Chip, CircularProgress, TextField } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\nimport { EmailAddress } from '_models/User';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\ntype AddrBookAutoCompleteType<TFieldValues extends FieldValues, TName extends Path<TFieldValues>> = {\r\n  name: TName;\r\n  control: Control<TFieldValues>;\r\n  label: string;\r\n  errors: DeepMap<DeepPartial<TFieldValues>, FieldError>;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n};\r\n\r\nexport function AddrBookAutoComplete<TFieldValues extends FieldValues, TName extends Path<TFieldValues>>(\r\n  props: AddrBookAutoCompleteType<TFieldValues, TName>\r\n) {\r\n  const { name, control, label, errors, disabled, style } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // アドレス帳の取得\r\n  const [filter, setFilter] = useState('');\r\n  const [{ data: addressbook, isLoading: loading }] = useLoadData<EmailAddress[]>(`/user/addressbook?filter=${filter}`, []);\r\n\r\n  // アドレス帳検索の状態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // アドレス帳検索の初期化\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFilter('');\r\n    }\r\n  }, [open]);\r\n\r\n  // アドレス帳検索値のリアルタイム取得\r\n  const onChangeHandle = async (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Controller<TFieldValues, TName>\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          disabled={disabled}\r\n          style={style}\r\n          multiple\r\n          limitTags={disabled ? undefined : 2}\r\n          size=\"small\"\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          options={!!addressbook && !!filter ? addressbook : []}\r\n          noOptionsText={t('auto-complete.no-options-text')}\r\n          loading={loading}\r\n          getOptionLabel={(option) => `${option.name} <${option.address}>`}\r\n          renderTags={(tagValue, getTagProps) =>\r\n            tagValue.map((option, index) => <Chip label={option.name} title={option.address} {...getTagProps({ index })} />)\r\n          }\r\n          filterSelectedOptions\r\n          getOptionSelected={(option, value) => option.address === value.address}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={label}\r\n              error={!!errors[name]}\r\n              helperText={errors[name] && (errors[name] as FieldError).message}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n              onChange={(ev) => {\r\n                if (ev.target.value !== '' || ev.target.value !== null) {\r\n                  onChangeHandle(ev.target.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data) => field.onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype MyDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function MyDialog(props: MyDialogProps) {\r\n  const { open, onClose, title, children } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent dividers>{children}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel}>{t('common.button.cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('visitorinfoform.delete-confirm-message')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormSetValue, useWatch } from 'react-hook-form';\r\nimport { Box, FormControlLabel, Grid, Switch, TextField } from '@material-ui/core';\r\nimport { Room } from '_models/Room';\r\nimport { Inputs } from './RowDataInputDialog';\r\nimport { get } from 'lodash';\r\n\r\ntype RoomInputFieldsProps = {\r\n  control: Control<Inputs, object>;\r\n  setValue: UseFormSetValue<Inputs>;\r\n  rooms: Room[] | undefined;\r\n  roomId: string;\r\n  disabledVisitor: boolean;\r\n  disabledRoom?: boolean;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function RoomInputFields(props: RoomInputFieldsProps) {\r\n  const { control, setValue, rooms, roomId, disabledVisitor, disabledRoom, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用に会議室選択を監視\r\n  const roomWatch = useWatch({ control, name: `resourcies.${roomId}.roomForEdit` });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (!!roomWatch && !!rooms) {\r\n      const result = rooms.some((room) => room.id === roomWatch && room.teaSupply);\r\n      if (!result) setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(!result);\r\n    } else {\r\n      setValue(`resourcies.${roomId}.teaSupply`, false);\r\n      setDisabledTeaSupply(true);\r\n    }\r\n  }, [roomId, roomWatch, rooms, setValue]);\r\n\r\n  // 給茶人数の入力制御\r\n  const [disabledTeaMember, setDisabledTeaMember] = useState(false);\r\n\r\n  // 給茶人数の制御用に給茶選択を監視\r\n  const teaWatch = useWatch({ control, name: `resourcies.${roomId}.teaSupply` });\r\n\r\n  // 給茶人数のエフェクト\r\n  useEffect(() => {\r\n    if (!teaWatch) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0);\r\n      setValue(`resourcies.${roomId}.numberOfEmployee`, 0);\r\n    }\r\n    setDisabledTeaMember(!teaWatch);\r\n  }, [teaWatch, setValue, roomId]);\r\n\r\n  // 利用範囲のエフェクト（来訪者数のリセット）\r\n  useEffect(() => {\r\n    if (disabledVisitor) {\r\n      setValue(`resourcies.${roomId}.numberOfVisitor`, 0);\r\n    }\r\n  }, [setValue, disabledVisitor, roomId]);\r\n\r\n  // 多階層になっている場合の取得回避策\r\n  const getNestedError = (name: string): FieldError => {\r\n    return get(errors, `resourcies.${roomId}.${name}`) as FieldError;\r\n  };\r\n\r\n  if (rooms?.length === 0) {\r\n    return (\r\n      <Box px={2} style={{ textAlign: 'center', color: 'red' }}>\r\n        {t('visitdialog.notes.no-relevant-rooms')}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box px={2}>\r\n      <Controller\r\n        name={`resourcies.${roomId}.roomForEdit`}\r\n        control={control}\r\n        rules={{\r\n          required: t('common.form.required') as string,\r\n          // 何らかの挙動で選択リストから消えた会議室を選択している場合のエラー処理\r\n          validate: (roomId) => (rooms!.some((room) => room.id === roomId) ? undefined : (t('visitdialog.form.error.room-not-covered') as string)),\r\n        }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            select\r\n            disabled={disabledRoom}\r\n            label={t('visittable.header.event-room')}\r\n            error={!!getNestedError('roomForEdit')}\r\n            helperText={!!getNestedError('roomForEdit') && getNestedError('roomForEdit').message}\r\n          >\r\n            {rooms!.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.name} {'<'}\r\n                {option.email}\r\n                {'>'}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      />\r\n\r\n      <Grid container spacing={1} style={disabledTeaSupply ? { display: 'none' } : undefined}>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Controller\r\n                name={`resourcies.${roomId}.teaSupply`}\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n                )}\r\n              />\r\n            }\r\n            label={t('visittable.header.tea-supply')}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4} style={disabledVisitor ? { opacity: 0 } : undefined}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfVisitor`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember || disabledVisitor}\r\n                label={t('visittable.header.number-of-visitor')}\r\n                error={!!getNestedError('numberOfVisitor')}\r\n                helperText={!!getNestedError('numberOfVisitor') && getNestedError('numberOfVisitor').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Controller\r\n            name={`resourcies.${roomId}.numberOfEmployee`}\r\n            control={control}\r\n            rules={{ required: t('common.form.required') as string }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                inputProps={{ min: 0, style: { textAlign: 'right' } }}\r\n                {...field}\r\n                disabled={disabledTeaMember}\r\n                label={t('visittable.header.number-of-employee')}\r\n                error={!!getNestedError('numberOfEmployee')}\r\n                helperText={!!getNestedError('numberOfEmployee') && getNestedError('numberOfEmployee').message}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Box, List } from '@material-ui/core';\r\nimport { ResourciesReadOnly, VisitorInfoResourcies } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nexport const strRoomStatus = (status: string | undefined) => {\r\n  switch (status) {\r\n    case 'accepted':\r\n      return 'visitdialog.view.resource-status-accepted';\r\n    case 'declined':\r\n      return 'visitdialog.view.resource-status-declined';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\ntype RoomReadFieldsProps = {\r\n  data: VisitorInfoResourcies & ResourciesReadOnly;\r\n  hiddenTeaSupply?: boolean;\r\n};\r\n\r\nexport function RoomReadFields(props: RoomReadFieldsProps) {\r\n  const { data, hiddenTeaSupply } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  return (\r\n    <Box px={2} pt={2}>\r\n      <List disablePadding={true}>\r\n        <li key=\"room-name\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.room-name')}</div>\r\n          <div className={classes.field}>\r\n            {data.roomName} {'<'}\r\n            {data.roomEmail}\r\n            {'>'}\r\n          </div>\r\n        </li>\r\n        <li key=\"resource-status\" className={classes.list}>\r\n          <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n          <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n        </li>\r\n\r\n        {!hiddenTeaSupply && (\r\n          <>\r\n            <li key=\"tea-supply\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.tea-supply')}</div>\r\n              <div className={classes.field}>{data.teaSupply ? t('visitdialog.form.tea-supply-yes') : t('visitdialog.form.tea-supply-no')}</div>\r\n            </li>\r\n\r\n            {data.teaSupply && (\r\n              <>\r\n                <li key=\"number-of-visitor\" className={classes.list}>\r\n                  <div className={classes.title}>{t('visittable.header.number-of-visitor')}</div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%', borderRight: 'none' }}>\r\n                    {data.numberOfVisitor}\r\n                  </div>\r\n                  <div className={classes.title} style={{ flexBasis: '25%', borderLeft: 'none' }}>\r\n                    {t('visittable.header.number-of-employee')}\r\n                  </div>\r\n                  <div className={classes.field} style={{ flexBasis: '25%' }}>\r\n                    {data.numberOfEmployee}\r\n                  </div>\r\n                </li>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Control, Controller, DeepMap, DeepPartial, FieldError, UseFormGetValues } from 'react-hook-form';\r\n\r\nimport { Inputs } from './RowDataInputDialog';\r\n\r\ntype ControllerDateTimePickerProps = {\r\n  name: 'startTime' | 'endTime';\r\n  control: Control<Inputs, object>;\r\n  getValues: UseFormGetValues<Inputs>;\r\n  label: string;\r\n  handleDateTimeChange: () => void;\r\n  errors: DeepMap<DeepPartial<Inputs>, FieldError>;\r\n};\r\n\r\nexport function ControllerDateTimePicker(props: ControllerDateTimePickerProps) {\r\n  const { name, control, getValues, label, handleDateTimeChange, errors } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: t('common.form.required') as string,\r\n        validate: () => getValues('startTime').getTime() < getValues('endTime').getTime() || (t('visitdialog.form.error.event-time') as string),\r\n      }}\r\n      render={({ field }) => (\r\n        <DateTimePicker\r\n          {...field}\r\n          onChange={(e) => {\r\n            field.onChange(e);\r\n            handleDateTimeChange();\r\n          }}\r\n          ampm={false}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          disablePast\r\n          minutesStep={5} //TODO: Interval config化？\r\n          label={label}\r\n          error={!!errors[name]}\r\n          helperText={errors[name] && (errors[name] as FieldError).message}\r\n          ref={null}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SubmitHandler, useForm, useWatch } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button, List } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { addMinutes } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nimport { VisitorInfo, EventInputType, RoomInputType } from '_models/VisitorInfo';\r\nimport { nameOfUsageRangeForVisitor, Room } from '_models/Room';\r\nimport { LocationParams } from '_models/Location';\r\n\r\nimport { tableTheme, makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\nimport { RoomInputFields } from './RoomInputFields';\r\nimport { RoomReadFields, strRoomStatus } from './RoomReadFields';\r\nimport { ControllerDateTimePicker } from './ControllerDateTimePicker';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nconst startTimeBufferMinute = 0;\r\nconst endTimeBufferMinute = 30; //TODO: Interval config化？\r\nconst change5MinuteIntervals = (date: Date) => Math.ceil(date.getTime() / 1000 / 60 / 5) * 1000 * 60 * 5; //TODO: Interval config化？\r\n\r\nexport type Inputs = {\r\n  mode: 'ins' | 'upd' | 'del';\r\n} & VisitorInfo &\r\n  EventInputType;\r\n\r\nexport const ADD_ROOM_KEY = 'add-room-01';\r\n\r\nexport type AddDefaultType = {\r\n  start: Date;\r\n  roomId: string;\r\n};\r\n\r\n// 入力フォームの初期値\r\nconst getDefaultValues = (start?: Date, roomId?: string) => {\r\n  const startDate = start ? start : new Date();\r\n  const room = roomId ? roomId : '';\r\n  return {\r\n    mode: 'ins',\r\n    iCalUId: '',\r\n    subject: '',\r\n    visitorId: '',\r\n    visitCompany: '',\r\n    visitorName: '',\r\n    mailto: { authors: [], required: [], optional: [] },\r\n    usageRange: 'inside',\r\n    resourcies: {\r\n      [ADD_ROOM_KEY]: {\r\n        roomForEdit: room,\r\n        teaSupply: false,\r\n        numberOfVisitor: 0,\r\n        numberOfEmployee: 0,\r\n      },\r\n    },\r\n    comment: '',\r\n    contactAddr: '',\r\n    startTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute),\r\n    endTime: addMinutes(change5MinuteIntervals(startDate), startTimeBufferMinute + endTimeBufferMinute),\r\n  } as Inputs;\r\n};\r\n\r\ntype RowDataInputDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType | null;\r\n  reload: () => void;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport function RowDataInputDialog(props: RowDataInputDialogProps) {\r\n  const { open, onClose, data, reload, addDefault } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = { ...useRowDataDialogStyles(), ...useStyles() };\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // 削除確認メッセージの状態\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const defaultValues = getDefaultValues();\r\n  const {\r\n    control,\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    trigger,\r\n    setError,\r\n    formState: { errors, isDirty, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>({ defaultValues });\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      reset({\r\n        mode: 'upd',\r\n        iCalUId: data.iCalUId,\r\n        subject: data.subject,\r\n        visitorId: data.visitorId,\r\n        visitCompany: data.visitCompany,\r\n        visitorName: data.visitorName,\r\n        mailto: data.mailto,\r\n        usageRange: data.usageRange,\r\n        resourcies: Object.keys(data.resourcies).reduce((newObj, room) => {\r\n          newObj[room] = {\r\n            roomForEdit: room,\r\n            teaSupply: data.resourcies[room].teaSupply,\r\n            numberOfVisitor: data.resourcies[room].numberOfVisitor,\r\n            numberOfEmployee: data.resourcies[room].numberOfEmployee,\r\n          };\r\n          return newObj;\r\n        }, {} as RoomInputType),\r\n        comment: data.comment,\r\n        contactAddr: data.contactAddr,\r\n        startTime: new Date(data.startDateTime),\r\n        endTime: new Date(data.endDateTime),\r\n      });\r\n    } else {\r\n      reset(_.cloneDeep(getDefaultValues(addDefault?.start, addDefault?.roomId)));\r\n    }\r\n  }, [data, open, reset, addDefault]);\r\n\r\n  // ::空き会議室の制御関連 start -------------------------->\r\n  // 会議室コンポーネントの表示状態\r\n  const [hiddenRooms, setHiddenRooms] = useState(false);\r\n\r\n  // 利用範囲選択を監視\r\n  const usageRangeWatch = useWatch({ control, name: 'usageRange' });\r\n\r\n  // 空き会議室一覧の取得\r\n  const defaultRoomsUrl = `/room/choices?location=${match.params.location}`;\r\n  const [roomsUrl, setRoomsUrl] = useState(defaultRoomsUrl);\r\n  const [{ data: rooms }] = useLoadData<Room[]>(roomsUrl, []);\r\n\r\n  // 空き会議室一覧のURL更新\r\n  const buildRoomsUrl = useCallback(() => {\r\n    if (getValues('mode') === 'upd') {\r\n      // 更新時、会議室変更は出来ないためデフォルト値\r\n      setRoomsUrl(defaultRoomsUrl);\r\n    } else {\r\n      setRoomsUrl(\r\n        defaultRoomsUrl +\r\n          `&start=${getValues('startTime').getTime()}&end=${getValues('endTime').getTime()}` +\r\n          `&usagerange=${getValues('usageRange')}`\r\n      );\r\n    }\r\n  }, [defaultRoomsUrl, getValues]);\r\n\r\n  // 空き会議室一覧のURLリセット\r\n  useEffect(() => {\r\n    if (open) {\r\n      buildRoomsUrl();\r\n    }\r\n  }, [buildRoomsUrl, open, usageRangeWatch]); // 利用範囲変更時もリセット対象\r\n\r\n  // 会議室コンポーネントの表示リセット\r\n  useEffect(() => {\r\n    if (!open) setHiddenRooms(false);\r\n  }, [open]);\r\n\r\n  // ::空き会議室の制御関連 end --------------------------<\r\n\r\n  // 来訪情報の制御状態\r\n  const [disabledVisitor, setDisabledVisitor] = useState(false);\r\n\r\n  // 利用範囲のエフェクト（来訪情報の制御）\r\n  useEffect(() => {\r\n    // 社内会議\r\n    if (usageRangeWatch === 'inside') {\r\n      setValue('visitCompany', '');\r\n      setValue('visitorName', '');\r\n      setDisabledVisitor(true);\r\n    } else {\r\n      // 社外会議\r\n      setDisabledVisitor(false);\r\n    }\r\n  }, [setValue, usageRangeWatch]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode', 'del');\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = '/event/create';\r\n          break;\r\n        case 'upd':\r\n          url = '/event/update';\r\n          // url = !data?.visitorId ? '/visitor/create' : '/visitor/update';\r\n          break;\r\n        case 'del':\r\n          url = '/event/delete';\r\n          // url = '/visitor/delete';\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 検索ボタンアクション\r\n  const handleSearch = async () => {\r\n    const result = await trigger(['startTime', 'endTime']); //validate\r\n    if (!result) return;\r\n    buildRoomsUrl();\r\n    setHiddenRooms(false);\r\n  };\r\n\r\n  // 検索ボタン活性化\r\n  const activeSearchButton = () => {\r\n    if (getValues('mode') === 'upd') return; // 更新時、会議室変更は出来ないため非対応\r\n    if (!hiddenRooms) {\r\n      setHiddenRooms(true);\r\n    }\r\n  };\r\n  // 開始日時の変更アクション\r\n  const handleStartTimeChange = () => {\r\n    const endTime = addMinutes(change5MinuteIntervals(getValues('startTime')), startTimeBufferMinute + endTimeBufferMinute);\r\n    setValue('endTime', endTime);\r\n    activeSearchButton();\r\n  };\r\n  // 終了日時の変更アクション\r\n  const handleEndTimeChange = () => {\r\n    activeSearchButton();\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          {!!data && (\r\n            <Box px={2}>\r\n              {(() => {\r\n                if (data.isMSMultipleLocations) {\r\n                  /* mode=upd & 複数会議室 */\r\n                  return <p className={classes.note}>{t('visitdialog.notes.multiple-locations')}</p>;\r\n                } else {\r\n                  /* mode=upd & 単一会議室 */\r\n                  return (\r\n                    <List disablePadding={true}>\r\n                      <li key=\"resource-status\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.resource-status')}</div>\r\n                        <div className={classes.field}>{t(strRoomStatus(data.roomStatus))}</div>\r\n                      </li>\r\n                      <li key=\"reservation-name\" className={classes.list}>\r\n                        <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n                        <div className={classes.field}>{data.reservationName}</div>\r\n                      </li>\r\n                    </List>\r\n                  );\r\n                }\r\n              })()}\r\n            </Box>\r\n          )}\r\n\r\n          <form>\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"subject\" control={control} label={t('visittable.header.event-subject')} required errors={errors} />\r\n\r\n              <AddrBookAutoComplete\r\n                name={'mailto.authors'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-authors')}\r\n                errors={errors}\r\n                disabled={true}\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.required'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-required')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n              <AddrBookAutoComplete\r\n                name={'mailto.optional'}\r\n                control={control}\r\n                label={t('visittable.header.event-mailto-optional')}\r\n                errors={errors}\r\n                disabled={data?.isMSMultipleLocations}\r\n              />\r\n\r\n              <Box py={1} style={!!data ? { display: 'none' } : undefined}>\r\n                <ControllerTextField\r\n                  name={'usageRange'}\r\n                  control={control}\r\n                  label={t('visittable.header.usage-range')}\r\n                  required\r\n                  selectList={nameOfUsageRangeForVisitor.map((value) => {\r\n                    return { label: t(`visitdialog.view.usage-range.${value}`), value: value };\r\n                  })}\r\n                  disabled={!!data}\r\n                  errors={errors}\r\n                />\r\n              </Box>\r\n\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"startTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-start-time')}\r\n                    handleDateTimeChange={handleStartTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <ControllerDateTimePicker\r\n                    name=\"endTime\"\r\n                    control={control}\r\n                    getValues={getValues}\r\n                    label={t('visittable.header.event-end-time')}\r\n                    handleDateTimeChange={handleEndTimeChange}\r\n                    errors={errors}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ margin: 'auto' }}>\r\n                  <Button onClick={handleSearch} variant=\"contained\" color=\"primary\" fullWidth disabled={data?.isMSMultipleLocations || !hiddenRooms}>\r\n                    {t('common.button.search')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {!data ? (\r\n              /* 新規作成 */\r\n              !hiddenRooms && (\r\n                <RoomInputFields\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  rooms={rooms}\r\n                  roomId={ADD_ROOM_KEY}\r\n                  disabledVisitor={disabledVisitor}\r\n                  errors={errors}\r\n                />\r\n              )\r\n            ) : (\r\n              <>\r\n                {!data.isMSMultipleLocations ? (\r\n                  /* mode=upd & 単一会議室 */\r\n                  !hiddenRooms && (\r\n                    <RoomInputFields\r\n                      control={control}\r\n                      setValue={setValue}\r\n                      rooms={rooms}\r\n                      roomId={Object.keys(data.resourcies)[0]}\r\n                      disabledRoom={true}\r\n                      disabledVisitor={data.usageRange === 'inside'}\r\n                      errors={errors}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  /* mode=upd & 複数会議室 */\r\n                  <ThemeProvider theme={tableTheme}>\r\n                    {Object.keys(data.resourcies).map((roomId) => {\r\n                      return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={true}*/ />;\r\n                    })}\r\n                  </ThemeProvider>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <Box p={2} style={disabledVisitor ? { display: 'none' } : undefined}>\r\n              <ControllerTextField\r\n                name=\"visitCompany\"\r\n                control={control}\r\n                label={t('visittable.header.visit-company')}\r\n                required={!disabledVisitor}\r\n                disabled={disabledVisitor}\r\n                errors={errors}\r\n              />\r\n              <ControllerTextField\r\n                name=\"visitorName\"\r\n                control={control}\r\n                label={t('visittable.header.visitor-name')}\r\n                disabled={disabledVisitor}\r\n                errors={errors}\r\n              />\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n              <ControllerTextField name=\"comment\" control={control} label={t('visittable.header.comment')} multiline errors={errors} />\r\n              <ControllerTextField name=\"contactAddr\" control={control} label={t('visittable.header.contact-addr')} errors={errors} />\r\n            </Box>\r\n\r\n            <Box px={2}>\r\n              <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                <Grid item xs={!data ? 12 : 6}>\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isDirty || hiddenRooms}\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                  >\r\n                    {t('common.button.save')}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                  <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                    {t('common.button.delete')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </form>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { Chip, makeStyles, createStyles } from '@material-ui/core';\r\nimport { EmailAddress } from '_models/User';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      // justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype AddrBookUserDisplayProps = {\r\n  key: string;\r\n  data: EmailAddress[];\r\n};\r\n\r\nexport function AddrBookUserDisplay({ key, data }: AddrBookUserDisplayProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {data.map((user, i) => (\r\n        <Chip key={`${key}-${i}`} label={user.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, List } from '@material-ui/core';\r\n\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { RowDataType } from './DataTableBase';\r\nimport { RoomReadFields } from './RoomReadFields';\r\nimport { AddrBookUserDisplay } from '_components/AddrBookUserDisplay';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowDataType;\r\n};\r\n\r\nexport function RowDataReadDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n\r\n  // 会議メンバーではない場合、詳細表示NG\r\n  if (!data.isAttendees) {\r\n    return (\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        {t('common.msg.authority-error')}\r\n      </MyDialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"event-subject\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n            <div className={classes.field}>{data.subject}</div>\r\n          </li>\r\n          <li key=\"app-time\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n            <div className={classes.field}>{data.apptTime}</div>\r\n          </li>\r\n          <li key=\"reservation-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n            <div className={classes.field}>{data.reservationName}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box px={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"mailto-required\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-required')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay key=\"mailto-required\" data={data.mailto.required} />\r\n            </div>\r\n          </li>\r\n          <li key=\"mailto-optional\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.event-mailto-optional')}</div>\r\n            <div className={classes.fieldSlim}>\r\n              <AddrBookUserDisplay key=\"mailto-optional\" data={data.mailto.optional} />\r\n            </div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      {Object.keys(data.resourcies).map((roomId) => {\r\n        return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n      })}\r\n\r\n      <Box px={2} pt={2} style={data.usageRange === 'inside' ? { display: 'none' } : undefined}>\r\n        <List disablePadding={true}>\r\n          <li key=\"visit-company\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n            <div className={classes.field}>{data.visitCompany}</div>\r\n          </li>\r\n          <li key=\"visitor-name\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n            <div className={classes.field}>{data.visitorName}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n\r\n      <Box p={2} pt={2}>\r\n        <List disablePadding={true}>\r\n          <li key=\"comment\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n            <div className={classes.field}>{data.comment}</div>\r\n          </li>\r\n          <li key=\"contact-addr\" className={classes.list}>\r\n            <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n            <div className={classes.field}>{data.contactAddr}</div>\r\n          </li>\r\n        </List>\r\n      </Box>\r\n    </MyDialog>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { VisitorInfo, VisitorInfoReadOnly } from '_models/VisitorInfo';\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { AddDefaultType, RowDataInputDialog } from './RowDataInputDialog';\r\nimport { RowDataReadDialog } from './RowDataReadDialog';\r\n\r\nexport type RowDataType = VisitorInfo & VisitorInfoReadOnly;\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n  readOpen: boolean;\r\n  addDefault?: AddDefaultType;\r\n};\r\n\r\nexport type DataDialogAction =\r\n  | {\r\n      type: 'inputOpen' | 'readOpen' | 'inputClose' | 'readClose';\r\n    }\r\n  | { type: 'addDataOpen'; addDefault?: AddDefaultType };\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true, readOpen: false };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true, readOpen: false, addDefault: action.addDefault };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    case 'readOpen':\r\n      return { mode: 'rowData', inputOpen: false, readOpen: true };\r\n    case 'readClose':\r\n      return { ...state, readOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps = {\r\n  currentRow: RowDataType | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase(props: DataTableBaseProps) {\r\n  const { dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n  // ダイアログを閉じる(read)\r\n  const handleReadDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'readClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n        addDefault={dataDialogHook.state.addDefault}\r\n      />\r\n      {!!currentRow && <RowDataReadDialog open={dataDialogHook.state.readOpen} onClose={handleReadDialogClose} data={currentRow} />}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\n\r\nconst useStyles = makeVisitorTableStyles();\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowDataType[]>(\r\n    `/event/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}`,\r\n    []\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.event-subject'), field: 'subject' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles({\r\n  keyboardDatePicker: {\r\n    '& .MuiOutlinedInput-adornedEnd': { paddingRight: 0 },\r\n  },\r\n});\r\n\r\ntype MyCalendarProps = {\r\n  label: string;\r\n  date: Date | null;\r\n  onChange: (date: Date | null) => void;\r\n};\r\n\r\nfunction MyCalendar({ label, date, onChange }: MyCalendarProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"date-picker-dialog\"\r\n      label={label}\r\n      format=\"yyyy/MM/dd\"\r\n      showTodayButton\r\n      value={date}\r\n      onChange={onChange}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      size=\"small\"\r\n      className={classes.keyboardDatePicker}\r\n      inputProps={{\r\n        style: {\r\n          width: 85,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport MyCalendar from '_components/MyCalendar';\r\nimport { DataDialogAction } from './DataTableBase';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  datePickerArea: {},\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n  datePicker: {\r\n    margin: 'auto 0',\r\n  },\r\n  title: {\r\n    margin: 'auto 0.25em',\r\n  },\r\n}));\r\n\r\ntype HeaderActionsProps = {\r\n  title: string;\r\n  subtitle?: string;\r\n  date: Date | null;\r\n  onDateChange: (date: Date | null) => void;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { title, subtitle, date, onDateChange, dispatch } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={9} className={classes.datePickerArea}>\r\n          <Grid item className={classes.datePicker}>\r\n            <MyCalendar label={t('main.header.picker-label')} date={date} onChange={onDateChange} />\r\n          </Grid>\r\n          <Grid item className={classes.title}>\r\n            <Typography component=\"h5\">{title}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n            {t('main.header.add-event')}\r\n          </Button>\r\n        </Grid>\r\n        <Box pt={1}>{subtitle}</Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\n\r\nexport function VisitList() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.visitlist.title')}\r\n            subtitle={t('main.visitlist.subtitle')}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        <Box px={2} pb={2}>\r\n          <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\nimport { differenceInMinutes, endOfDay, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport clsx from 'clsx';\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\nimport { Schedule, ScheduleItem } from '_models/Schedule';\r\nimport { DataDialogAction, DataDialogState, RowDataType } from 'main/DataTableBase';\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype BoxStyle = {\r\n  width: number;\r\n  halfWidth: number;\r\n  scale: number;\r\n  transform: Point;\r\n};\r\n\r\ntype BoxData = {\r\n  x: number;\r\n  width: number;\r\n  className: string;\r\n};\r\n\r\n// 8-20\r\nconst shortStyle: BoxStyle = {\r\n  width: 120,\r\n  halfWidth: 60,\r\n  scale: 2,\r\n  transform: { x: -960, y: 0 },\r\n};\r\n// 0-24\r\nconst longStyle: BoxStyle = {\r\n  width: 60,\r\n  halfWidth: 30,\r\n  scale: 1,\r\n  transform: { x: 0, y: 0 },\r\n};\r\n\r\nconst viewWidth = 60 * 24;\r\nconst viewHeight = 70;\r\nconst viewWidthMargin = 1; // lineの一番両端が身切れして他のlineより細くなる現象を避けるため\r\nconst viewWidthWrap = viewWidth + viewWidthMargin * 2;\r\nconst viewBox = `0 0 ${viewWidthWrap} ${viewHeight}`;\r\nconst fontHeight = 30;\r\nconst fontMargin = 5;\r\n\r\nconst timeToPoint = (time: Date, boxStyle: BoxStyle) => {\r\n  const zero = startOfDay(time);\r\n  return differenceInMinutes(time, zero) * boxStyle.scale;\r\n};\r\n\r\nconst pointToTime = (point: number, boxStyle: BoxStyle) => {\r\n  const offset = 0;\r\n  return ((point + offset) / boxStyle.scale) * 60 * 1000;\r\n  // const timestamp = startOfDay(new Date()).getTime() + minutes * 60 * 1000;\r\n  // return new Date(timestamp);\r\n};\r\n\r\nconst getBoxData = (item: ScheduleItem, boxStyle: BoxStyle, currentDate: Date): BoxData => {\r\n  const start = new Date(item.start);\r\n  const end = new Date(item.end);\r\n  let x = timeToPoint(start, boxStyle);\r\n  let x2 = timeToPoint(end, boxStyle);\r\n  // 日を跨ぐ場合\r\n  if (!isSameDay(start, end)) {\r\n    const startOfCurrent = startOfDay(currentDate);\r\n    const endOfCurrent = endOfDay(currentDate);\r\n    // 翌日に続く\r\n    if (isBefore(endOfCurrent, end)) {\r\n      x2 = timeToPoint(endOfCurrent, boxStyle);\r\n    }\r\n    // 前日から続いている\r\n    if (isAfter(startOfCurrent, start)) {\r\n      x = timeToPoint(startOfCurrent, boxStyle);\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    width: x2 - x,\r\n    className: item.status,\r\n  };\r\n};\r\n\r\nconst calcX = (hour: number, width: number) => (hour + 1) * width + viewWidthMargin;\r\n\r\nconst createTransform = (boxStyle: BoxStyle) => {\r\n  return `translate(${boxStyle.transform.x},${boxStyle.transform.y})`;\r\n};\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    color: theme.palette.text.primary,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '5vmin',\r\n      '& svg': {\r\n        fontSize: '1.5rem',\r\n        '& line': {\r\n          strokeWidth: 2,\r\n        },\r\n        '& line.hour-line': {\r\n          stroke: theme.palette.grey[400],\r\n        },\r\n        '& line.hour-half-line': {\r\n          stroke: theme.palette.grey[300],\r\n        },\r\n        '& text': {\r\n          fill: theme.palette.grey[400],\r\n        },\r\n        '& text.subject': {\r\n          fill: '#fff',\r\n          fontSize: '1.2rem',\r\n          dominantBaseline: 'central',\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect': {\r\n          strokeWidth: 1,\r\n          fillOpacity: 0.5,\r\n        },\r\n        '& rect.new-event-bar': {\r\n          fillOpacity: 0,\r\n        },\r\n        '& rect.event': {\r\n          stroke: theme.palette.success.main,\r\n          fill: theme.palette.success.light,\r\n          fillOpacity: 0.9,\r\n          cursor: 'pointer',\r\n        },\r\n        '& rect.myOwn': {\r\n          stroke: theme.palette.info.main,\r\n          fill: theme.palette.info.light,\r\n        },\r\n        '& rect.wait': {\r\n          stroke: theme.palette.warning.light,\r\n          fill: theme.palette.warning.main,\r\n        },\r\n        '& rect.busy': {\r\n          stroke: theme.palette.error.light,\r\n          fill: theme.palette.error.main,\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      // color: theme.palette.grey[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype TimeBarProps = {\r\n  // rangesw: BoxStyle;\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  schedule: Schedule;\r\n  events: RowDataType[];\r\n  onClickCallback: (rowData: RowDataType) => void;\r\n};\r\n\r\nexport function TimeBar(props: TimeBarProps) {\r\n  const { currentDate, dataDialogHook, schedule, events, onClickCallback } = props;\r\n  const classes = useStyles();\r\n\r\n  const [boxStyle, setBoxStyle] = useState(shortStyle);\r\n  const [transform, setTransform] = useState(createTransform(boxStyle));\r\n\r\n  // useEffect(() => {\r\n  //   setBoxStyle(rangesw ? longStyle : shortStyle);\r\n  // }, [rangesw]);\r\n\r\n  useEffect(() => {\r\n    setTransform(createTransform(boxStyle));\r\n  }, [boxStyle, events]);\r\n\r\n  const hRatio = 1;\r\n  const rectY = fontHeight + (viewHeight - fontHeight) * (1 - hRatio) + 1;\r\n  const rectHeight = (viewHeight - fontHeight) * hRatio - 1;\r\n\r\n  // スケジュール枠の作成\r\n  const createScheduleBox = useCallback(\r\n    (item: ScheduleItem, index: number, roomEmail: string) => {\r\n      const boxData = getBoxData(item, boxStyle, currentDate);\r\n      return (\r\n        <rect\r\n          key={`${roomEmail}-sc-${index}`}\r\n          className={boxData.className}\r\n          x={boxData.x}\r\n          y={rectY}\r\n          width={boxData.width}\r\n          height={rectHeight}\r\n          rx={3}\r\n          ry={5}\r\n        ></rect>\r\n      );\r\n    },\r\n    [boxStyle, rectHeight, rectY, currentDate]\r\n  );\r\n\r\n  // イベント枠の作成 (textのoverflow:hiddenっぽくするためにsvgの入れ子で作成)\r\n  const createEventBox = useCallback(\r\n    (event: RowDataType, index: number, roomEmail: string) => {\r\n      const item: ScheduleItem = { status: 'event', start: event.startDateTime, end: event.endDateTime };\r\n      const boxData = getBoxData(item, boxStyle, currentDate);\r\n      const x = boxData.x;\r\n      const y = rectY;\r\n      const width = boxData.width;\r\n      const height = rectHeight;\r\n      const myEvent = event.isAttendees ? 'myOwn' : '';\r\n      return (\r\n        <HtmlTooltip\r\n          key={`${roomEmail}-ev-${index}`}\r\n          title={\r\n            <>\r\n              <Typography variant=\"body2\">{event.subject}</Typography>\r\n              <em>{event.apptTime}</em> <b>{event.reservationName}</b>\r\n            </>\r\n          }\r\n          onClick={() => {\r\n            onClickCallback(event);\r\n          }}\r\n        >\r\n          <svg x={x} y={y} width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n            <g>\r\n              <rect className={clsx(boxData.className, myEvent)} x={0} y={0} width={width} height={height} rx={3} ry={5}></rect>\r\n              <text className=\"subject\" x={3} y={'50%'}>\r\n                {event.subject}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </HtmlTooltip>\r\n      );\r\n    },\r\n    [boxStyle, onClickCallback, rectHeight, rectY, currentDate]\r\n  );\r\n\r\n  // 新規作成ボタン(開始時間の指定あり)\r\n  const handleCreateClick = (event: React.MouseEvent<SVGRectElement, MouseEvent>, roomId: string) => {\r\n    const svg: SVGSVGElement | null = event.currentTarget.closest('svg');\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = event.clientX;\r\n    pt.y = event.clientY;\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) return;\r\n\r\n    const svgP = pt.matrixTransform(ctm.inverse());\r\n    const rectX = svgP.x - boxStyle.transform.x + viewWidthMargin;\r\n    const $time = pointToTime(rectX, boxStyle);\r\n    const time = Math.floor($time / 1000 / 60 / 30) * 1000 * 60 * 30; //TODO: Interval config化？\r\n    const start = new Date(startOfDay(currentDate).getTime() + time);\r\n\r\n    dataDialogHook.dispatch({ type: 'addDataOpen', addDefault: { start: start, roomId: roomId } });\r\n  };\r\n\r\n  // スケジュール枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectSchedules = useMemo(() => {\r\n    return <>{schedule.scheduleItems.map((item, index) => createScheduleBox(item, index, schedule.roomEmail))}</>;\r\n  }, [createScheduleBox, schedule]);\r\n\r\n  // イベント枠の表示（不要レンダリングが起きるためメモ化）\r\n  const rectEvents = useMemo(() => {\r\n    return <>{events.map((event, index) => createEventBox(event, index, schedule.roomEmail))}</>;\r\n  }, [createEventBox, events, schedule]);\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title}>{schedule.roomName}</Typography>\r\n      <div className={classes.container}>\r\n        <svg viewBox={viewBox} preserveAspectRatio=\"none\">\r\n          <g transform={transform}>\r\n            <line className=\"hour-line\" x1={0} y1={0} x2={0} y2={viewHeight}></line>\r\n            <line className=\"hour-half-line\" x1={boxStyle.halfWidth} y1={fontHeight} x2={boxStyle.halfWidth} y2={viewHeight}></line>\r\n            {_.range(0, 24).map(($) => {\r\n              const x = calcX($, boxStyle.width);\r\n              const minX = x + boxStyle.halfWidth;\r\n              const fontX = $ * boxStyle.width + fontMargin;\r\n              return (\r\n                <Fragment key={`fragment-${$}`}>\r\n                  <line key={`hour-line-${$}`} className=\"hour-line\" x1={x} y1={0} x2={x} y2={viewHeight}></line>\r\n                  <line key={`hour-half-line-${$}`} className=\"hour-half-line\" x1={minX} y1={fontHeight} x2={minX} y2={viewHeight}></line>\r\n                  <text key={`hour-text-${$}`} x={fontX} y={fontHeight - 5}>\r\n                    {$}\r\n                  </text>\r\n                </Fragment>\r\n              );\r\n            })}\r\n            <rect\r\n              className=\"new-event-bar\"\r\n              x={0}\r\n              y={rectY}\r\n              width={calcX(24, boxStyle.width)}\r\n              height={rectHeight}\r\n              onClick={(e) => handleCreateClick(e, schedule.roomId)}\r\n            ></rect>\r\n            {rectSchedules}\r\n            {rectEvents}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { Schedule } from '_models/Schedule';\r\n\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { TimeBar } from './TimeBar';\r\n\r\ntype TimeBarDataType = {\r\n  events: RowDataType[];\r\n  schedules: Schedule[];\r\n};\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  category: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, category } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<TimeBarDataType>(\r\n    `/event/byroom?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${category}`,\r\n    undefined\r\n  );\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowDataType | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowDataType) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // タイムバーの表示（不要レンダリングが起きるためメモ化）\r\n  const timeBars = useMemo(() => {\r\n    if (!data) return <></>;\r\n    return (\r\n      <>\r\n        {data.schedules.map((schedule, sIdx) => (\r\n          <TimeBar\r\n            key={sIdx}\r\n            currentDate={currentDate}\r\n            dataDialogHook={dataDialogHook}\r\n            schedule={schedule}\r\n            events={data!.events.filter((_event, eIdx) => schedule.eventsIndex.some((num: number) => num === eIdx))}\r\n            onClickCallback={handleDialogOpen}\r\n          ></TimeBar>\r\n        ))}\r\n      </>\r\n    );\r\n  }, [currentDate, data, dataDialogHook, handleDialogOpen]);\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      {timeBars}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { cloneElement, useMemo, useState } from 'react';\r\n\r\nimport { AppBar, Tab } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nimport { Category } from '_models/Category';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\ntype CategoryTabContextProps = {\r\n  tabPanelContent: React.ReactElement;\r\n};\r\n\r\nexport function CategoryTabContext(props: CategoryTabContextProps) {\r\n  const { tabPanelContent } = props;\r\n\r\n  // タブ切り替え\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const handleTabChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // カテゴリ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  // タブリストの表示（不要レンダリングが起きるためメモ化）\r\n  const tabList = useMemo(() => {\r\n    return (\r\n      <TabList indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" onChange={handleTabChange} aria-label=\"view tabs\">\r\n        {categories?.map((cate, index) => (\r\n          <Tab key={`tab-${index}`} label={cate.name} value={`${index}`} />\r\n        ))}\r\n      </TabList>\r\n    );\r\n  }, [categories]);\r\n\r\n  // タブパネルの表示（不要レンダリングが起きるためメモ化）\r\n  const tabPanels = useMemo(() => {\r\n    return (\r\n      <>\r\n        {categories?.map((cate, index) => {\r\n          return (\r\n            <TabPanel key={`tab-panel-${index}`} value={`${index}`}>\r\n              {cloneElement(tabPanelContent, { category: cate.id })}\r\n            </TabPanel>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [categories, tabPanelContent]);\r\n\r\n  return (\r\n    <TabContext value={tabValue}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        {tabList}\r\n      </AppBar>\r\n      {tabPanels}\r\n    </TabContext>\r\n  );\r\n}\r\n","import { useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { CategoryTabContext } from '../CategoryTabContext';\r\n\r\nexport function ByRoom() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  return (\r\n    <BaseTemplate>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions\r\n            title={t('main.byroom.title')}\r\n            subtitle={t('main.byroom.subtitle')}\r\n            date={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            dispatch={dataDialogDispatch}\r\n          />\r\n        </Box>\r\n        <CategoryTabContext\r\n          tabPanelContent={\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} category=\"dummyId\" />\r\n          }\r\n        />\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Box, Button, List, makeStyles, TextField } from '@material-ui/core';\r\nimport { MuiPickersContext } from '@material-ui/pickers';\r\n\r\nimport { FrontRowData } from './DataTable';\r\n\r\nimport { RoomReadFields } from 'main/RoomReadFields';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { FrontInputType, VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { makeTableDialogStyle } from '_styles/TableTheme';\r\n\r\nconst useRowDataDialogStyles = makeTableDialogStyle();\r\n\r\nconst useStyles = makeStyles({\r\n  checkAction: {\r\n    textAlign: 'center',\r\n    marginBottom: '10px',\r\n    '& Button': {\r\n      margin: '0 5%',\r\n      width: '40%',\r\n    },\r\n  },\r\n});\r\n\r\ntype Inputs = {\r\n  mode: 'checkin' | 'checkout';\r\n} & VisitorInfoFront &\r\n  FrontInputType;\r\n\r\ntype RowDataReadDialogProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: FrontRowData;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataFrontDialog(props: RowDataReadDialogProps) {\r\n  const { open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useRowDataDialogStyles();\r\n  const frontClasses = useStyles();\r\n  const muiPickContext = useContext(MuiPickersContext); // locale取得用\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 入力フォームの登録\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    reset,\r\n    formState: { errors, isSubmitting, dirtyFields },\r\n  } = useForm<Inputs>();\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open) {\r\n      reset({\r\n        id: data.visitorId,\r\n        checkIn: data.checkIn,\r\n        checkOut: data.checkOut,\r\n        visitorCardNumber: data.visitorCardNumber,\r\n      });\r\n    } else {\r\n      reset();\r\n    }\r\n  }, [data, open, reset]);\r\n\r\n  const timestamp = () => format(new Date(), 'yyyy/MM/dd hh:mm:ss', { locale: muiPickContext?.locale });\r\n\r\n  // チェックインaction\r\n  const handleCheckIn = () => {\r\n    setValue('mode', 'checkin');\r\n    setValue('checkIn', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // チェックアウトaction\r\n  const handleCheckOut = () => {\r\n    setValue('mode', 'checkout');\r\n    setValue('checkOut', timestamp());\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit = async (formData: Inputs) => {\r\n    try {\r\n      const result = await fetchPostData(`/front/${formData.mode}`, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n      } else {\r\n        snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t('visitdialog.title')}>\r\n        <Box p={2}>\r\n          <form>\r\n            <div className={frontClasses.checkAction}>\r\n              <Button onClick={handleCheckIn} variant=\"contained\" color=\"secondary\" disabled={!!data.checkOut}>\r\n                {t('visitdialog.button.check-in')}\r\n              </Button>\r\n              <Button onClick={handleCheckOut} variant=\"contained\" color=\"secondary\" disabled={!data.checkIn}>\r\n                {t('visitdialog.button.check-out')}\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                color=\"secondary\"\r\n                id=\"visitorCardNumber\"\r\n                label={t('visitdialog.form.visitor-card-number')}\r\n                // placeholder={t('visitdialog.form.visitor-card-number-placeholder')}\r\n                autoFocus\r\n                {...register('visitorCardNumber', {\r\n                  // required: t('common.form.required') as string,\r\n                })}\r\n                error={!!errors.visitorCardNumber}\r\n                helperText={errors.visitorCardNumber && errors.visitorCardNumber.message}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Box px={2} pt={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"app-time\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.appt-time')}</div>\r\n              <div className={classes.field}>{data.apptTime}</div>\r\n            </li>\r\n            <li key=\"check-in\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-in')}</div>\r\n              <div className={classes.field}>{data.checkIn}</div>\r\n            </li>\r\n            <li key=\"check-out\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.check-out')}</div>\r\n              <div className={classes.field}>{data.checkOut}</div>\r\n            </li>\r\n            {/* <li key=\"event-subject\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.event-subject')}</div>\r\n              <div className={classes.field}>{data.subject}</div>\r\n            </li> */}\r\n            <li key=\"visit-company\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visit-company')}</div>\r\n              <div className={classes.field}>{data.visitCompany}</div>\r\n            </li>\r\n            <li key=\"visitor-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.visitor-name')}</div>\r\n              <div className={classes.field}>{data.visitorName}</div>\r\n            </li>\r\n            <li key=\"comment\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.comment')}</div>\r\n              <div className={classes.field}>{data.comment}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n\r\n        {Object.keys(data.resourcies).map((roomId) => {\r\n          return <RoomReadFields key={roomId} data={data.resourcies[roomId]} /*hiddenTeaSupply={data.isMSMultipleLocations}*/ />;\r\n        })}\r\n\r\n        <Box p={2}>\r\n          <List disablePadding={true}>\r\n            <li key=\"reservation-name\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.reservation-name')}</div>\r\n              <div className={classes.field}>{data.reservationName}</div>\r\n            </li>\r\n            <li key=\"contact-addr\" className={classes.list}>\r\n              <div className={classes.title}>{t('visittable.header.contact-addr')}</div>\r\n              <div className={classes.field}>{data.contactAddr}</div>\r\n            </li>\r\n          </List>\r\n        </Box>\r\n      </MyDialog>\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport { pageingOntions, tableIcons } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase, RowDataType } from '../DataTableBase';\r\nimport { RowDataFrontDialog } from './RowDataFrontDialog';\r\n\r\nimport { LocationParams } from '_models/Location';\r\nimport { VisitorInfoFront } from '_models/VisitorInfo';\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nconst useStyles = makeVisitorTableStyles();\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  cellStyle?: object | void;\r\n};\r\n\r\nexport type FrontRowData = RowDataType & VisitorInfoFront;\r\n\r\ntype DataTableProps = {\r\n  currentDate: Date;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  category: string;\r\n};\r\n\r\nexport function DataTable(props: DataTableProps) {\r\n  const { currentDate, dataDialogHook, category } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const match = useRouteMatch<LocationParams>();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<FrontRowData[]>(\r\n    `/front/visitlist?timestamp=${currentDate!.getTime()}&location=${match.params.location}&category=${category}`,\r\n    []\r\n  );\r\n\r\n  // フロント用ダイアログの状態\r\n  const [frontDialogOpen, setFrontDialogOpen] = useState(false);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<FrontRowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: FrontRowData) => {\r\n      if (selectedRow.isAuthor) {\r\n        dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      } else {\r\n        dataDialogHook.dispatch({ type: 'readOpen' });\r\n      }\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // フロント用ダイアログを開く\r\n  const handleFrontDialogOpen = useCallback((selectedRow: FrontRowData) => {\r\n    setFrontDialogOpen(true);\r\n    setCurrentRow(selectedRow);\r\n  }, []);\r\n  // フロント用ダイアログを閉じる\r\n  const handleFrontDialogClose = async () => {\r\n    setFrontDialogOpen(false);\r\n  };\r\n\r\n  const columns: Columns[] = [\r\n    { title: t('visittable.header.appt-time'), field: 'apptTime' },\r\n    { title: t('visittable.header.room-name'), field: 'roomName' },\r\n    { title: t('visittable.header.tea-supply'), field: 'teaSupply', type: 'boolean' },\r\n    { title: t('visittable.header.visit-company'), field: 'visitCompany' },\r\n    { title: t('visittable.header.visitor-name'), field: 'visitorName' },\r\n    { title: t('visittable.header.check-in'), field: 'checkIn', type: 'boolean' },\r\n    { title: t('visittable.header.check-out'), field: 'checkOut', type: 'boolean' },\r\n    { title: t('visittable.header.reservation-name'), field: 'reservationName' },\r\n    { title: t('visittable.header.comment'), field: 'comment' },\r\n  ];\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<FrontRowData>[]}\r\n        components={{\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleFrontDialogOpen(selectedRow)}\r\n        actions={[\r\n          {\r\n            icon: () => <BorderColorIcon />,\r\n            tooltip: t('visittable.header.edit-action'),\r\n            onClick: (_, rowData) => !!rowData && handleDialogOpen(rowData as FrontRowData),\r\n          },\r\n        ]}\r\n        localization={{\r\n          header: { actions: '' },\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          // actionsColumnIndex: -1,\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n      {currentRow && <RowDataFrontDialog open={frontDialogOpen} onClose={handleFrontDialogClose} data={currentRow} reload={reload} />}\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { CategoryTabContext } from '../CategoryTabContext';\r\n\r\nexport function Front() {\r\n  const { t } = useTranslation();\r\n\r\n  // カレンダー選択日の状態\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n    readOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  return (\r\n    <BaseTemplate frontMode>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions title={t('main.front.title')} date={selectedDate} onDateChange={handleDateChange} dispatch={dataDialogDispatch} />\r\n        </Box>\r\n        <CategoryTabContext\r\n          tabPanelContent={\r\n            <DataTable currentDate={selectedDate!} dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }} category=\"dummyId\" />\r\n          }\r\n        />\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype DeleteConfirmDialogPorps = {\r\n  open: boolean;\r\n  onClose: (deleteOk: boolean) => void;\r\n};\r\n\r\nexport function DeleteConfirmDialog(props: DeleteConfirmDialogPorps) {\r\n  const { open, onClose } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n  const handleOkClose = () => {\r\n    onClose(true);\r\n  };\r\n  const handleCancelClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{t('visitorinfoform.delete-confirm-title')}</DialogTitle> */}\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{t('common.msg.delete-confirm')}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOkClose} color=\"secondary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleCancelClose} color=\"secondary\" autoFocus>\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DeepPartial, Path, PathValue, SubmitHandler, UnpackNestedValue, useForm, FieldValues, FormProvider } from 'react-hook-form';\r\n\r\nimport { Box, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { grey, purple } from '@material-ui/core/colors';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { fetchPostData } from '_utils/FetchPostData';\r\n\r\nimport { MySnackberContext } from '_components/MySnackbarContext';\r\nimport { Spinner } from '_components/Spinner';\r\nimport { MyDialog } from '_components/MyDialog';\r\n\r\nimport { DeleteConfirmDialog } from './DeleteConfirmDialog';\r\n\r\nconst useStyles = makeStyles((tableTheme) => {\r\n  return createStyles({\r\n    formAction: {\r\n      marginTop: tableTheme.spacing(1),\r\n      marginBottom: tableTheme.spacing(1),\r\n    },\r\n    note: {\r\n      color: 'red',\r\n      fontSize: '0.9em',\r\n      margin: 0,\r\n    },\r\n  });\r\n});\r\n\r\nconst inputformTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: grey[300],\r\n    },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      variant: 'outlined',\r\n      margin: 'dense',\r\n      fullWidth: true,\r\n      minRows: 4,\r\n    },\r\n  },\r\n});\r\n\r\nexport type Mastertype = 'role' | 'location' | 'category' | 'room';\r\n\r\ntype InputMode = { mode: 'ins' | 'upd' | 'del' };\r\nexport type Inputs<RowData> = InputMode & RowData;\r\n\r\ntype DefaultValuesType<RowData> = UnpackNestedValue<DeepPartial<Inputs<RowData>>>;\r\nexport type InputFields<RowData> = {\r\n  type: Mastertype;\r\n  item: React.ReactNode;\r\n  defaultValues: DefaultValuesType<RowData>;\r\n};\r\n\r\n// react-hook-formのsetValue。型定義が長いのでショートカット用\r\ntype RHFSetValueP1<RowData> = Path<Inputs<RowData>>;\r\ntype RHFSetValueP2<RowData> = UnpackNestedValue<PathValue<Inputs<RowData>, Path<Inputs<RowData>>>>;\r\n\r\ntype RowDataInputDialogProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: RowData | null;\r\n  reload: () => void;\r\n};\r\n\r\nexport function RowDataInputDialog<RowData>(props: RowDataInputDialogProps<RowData>) {\r\n  const { inputFields, open, onClose, data, reload } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const snackberContext = useContext(MySnackberContext); // スナックバー取得用\r\n\r\n  // 削除確認メッセージの状\r\n  const [delConfOpen, setDelConfOpen] = useState(false);\r\n\r\n  // 入力フォームの登録\r\n  const methods = useForm({ defaultValues: { ...inputFields.defaultValues } });\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    setError,\r\n    formState: { isDirty, isSubmitting, dirtyFields },\r\n  } = methods;\r\n\r\n  // 入力フォームの初期化\r\n  useEffect(() => {\r\n    if (open && !!data) {\r\n      const values = Object.keys(inputFields.defaultValues).reduce((newObj: FieldValues, key) => {\r\n        if (key === 'mode') {\r\n          newObj['mode'] = 'upd';\r\n        } else {\r\n          newObj[key] = (data as FieldValues)[key];\r\n        }\r\n        return newObj;\r\n      }, {});\r\n      reset(_.cloneDeep(values as DefaultValuesType<RowData>));\r\n    } else {\r\n      reset(_.cloneDeep(inputFields.defaultValues));\r\n    }\r\n  }, [data, inputFields, open, reset]);\r\n\r\n  // 保存アクション\r\n  const handleSave = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  // 削除アクション(確認メッセージ)\r\n  const handleDelete = () => {\r\n    setDelConfOpen(true);\r\n  };\r\n  // 削除アクション\r\n  const deleteAction = () => {\r\n    setValue('mode' as RHFSetValueP1<RowData>, 'del' as RHFSetValueP2<RowData>);\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  // データ送信submit\r\n  const onSubmit: SubmitHandler<Inputs<RowData>> = async (formData) => {\r\n    try {\r\n      let url = '';\r\n      switch (formData.mode) {\r\n        case 'ins':\r\n          url = `/${inputFields.type}/create`;\r\n          break;\r\n        case 'upd':\r\n          url = `/${inputFields.type}/update`;\r\n          break;\r\n        case 'del':\r\n          url = `/${inputFields.type}/delete`;\r\n          break;\r\n      }\r\n      const result = await fetchPostData(url, { inputs: formData, dirtyFields: dirtyFields });\r\n      if (result!.success) {\r\n        if (formData.mode === 'del') await new Promise((r) => setTimeout(r, 1000)); // MSGraphのイベント削除が反映されるまでのタイムラグを考慮\r\n        await reload();\r\n        onClose();\r\n        snackberContext.dispatch({ type: 'success', message: t('common.msg.update-success') });\r\n        // ロール設定とロケーション設定は更新反映のためにログアウトを促す\r\n        if (inputFields.type === 'role' || inputFields.type === 'location') {\r\n          await new Promise(() =>\r\n            setTimeout(() => {\r\n              snackberContext.dispatch({ type: 'warning', message: t('common.msg.prompt-logout') });\r\n            }, 1500)\r\n          );\r\n        }\r\n      } else {\r\n        // エラー判定のセット\r\n        if (result!.errors) {\r\n          const errors = result!.errors;\r\n          for (let key in errors) {\r\n            let name = key as keyof Inputs<RowData> as Path<Inputs<RowData>>;\r\n            setError(name, { message: t(errors[name]![0]) });\r\n          }\r\n        }\r\n        // snackberContext.dispatch({ type: 'error', message: t('common.msg.update-failed') });\r\n      }\r\n    } catch (error) {\r\n      snackberContext.dispatch({ type: 'error', message: (error as Error).message });\r\n    }\r\n  };\r\n\r\n  // 削除確認アクション\r\n  const handleDelConfClose = (deleteOk: boolean) => {\r\n    setDelConfOpen(false);\r\n    if (deleteOk) {\r\n      deleteAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spinner open={isSubmitting} />\r\n      <MyDialog open={open} onClose={onClose} title={t(`settings.title.${inputFields.type}`)}>\r\n        <ThemeProvider theme={inputformTheme}>\r\n          <FormProvider {...methods}>\r\n            <form>\r\n              <Box p={2}>{inputFields.item}</Box>\r\n              <Box px={2}>\r\n                <Grid container justifyContent=\"space-between\" spacing={2} className={classes.formAction}>\r\n                  <Grid item xs={!data ? 12 : 6}>\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" disabled={!isDirty} startIcon={<SaveIcon />} fullWidth>\r\n                      {t('common.button.save')}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6} style={!data ? { display: 'none' } : undefined}>\r\n                    <Button onClick={handleDelete} variant=\"contained\" color=\"primary\" /*disabled={!data}*/ startIcon={<DeleteIcon />} fullWidth>\r\n                      {t('common.button.delete')}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </FormProvider>\r\n        </ThemeProvider>\r\n      </MyDialog>\r\n      <DeleteConfirmDialog open={delConfOpen} onClose={handleDelConfClose}></DeleteConfirmDialog>\r\n    </>\r\n  );\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { tableTheme } from '_styles/TableTheme';\r\nimport { Spinner } from '_components/Spinner';\r\n\r\nimport { InputFields, RowDataInputDialog } from './RowDataInputDialog';\r\n\r\nexport type DataDialogState = {\r\n  mode: 'rowData' | 'addData';\r\n  inputOpen: boolean;\r\n};\r\n\r\nexport type DataDialogAction = {\r\n  type: 'inputOpen' | 'addDataOpen' | 'inputClose';\r\n};\r\n\r\nexport const dataDialogReducer = (state: DataDialogState, action: DataDialogAction): DataDialogState => {\r\n  switch (action.type) {\r\n    case 'inputOpen':\r\n      return { mode: 'rowData', inputOpen: true };\r\n    case 'addDataOpen':\r\n      return { mode: 'addData', inputOpen: true };\r\n    case 'inputClose':\r\n      return { ...state, inputOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype DataTableBaseProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  currentRow: RowData | null;\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n  isLoading: boolean;\r\n  reload: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function DataTableBase<RowData>(props: DataTableBaseProps<RowData>) {\r\n  const { inputFields, dataDialogHook, isLoading, reload, currentRow, children } = props;\r\n\r\n  // ダイアログを閉じる(input)\r\n  const handleInputDialogClose = async () => {\r\n    dataDialogHook.dispatch({ type: 'inputClose' });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <Spinner open={isLoading} />\r\n      {children}\r\n      <RowDataInputDialog<RowData>\r\n        inputFields={inputFields}\r\n        open={dataDialogHook.state.inputOpen}\r\n        onClose={handleInputDialogClose}\r\n        data={dataDialogHook.state.mode === 'addData' ? null : currentRow}\r\n        reload={reload}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MaterialTable, { Column, MTableCell } from '@material-table/core';\r\n\r\nimport { tableIcons, pageingOntions } from '_utils/MaterialTableIcons';\r\nimport { useLoadData } from '_utils/useLoadData';\r\n\r\nimport { cellStyle, makeVisitorTableStyles } from '_styles/VisitorTableStyle';\r\nimport { tableTheme } from '_styles/TableTheme';\r\n\r\nimport { DataDialogAction, DataDialogState, DataTableBase } from './DataTableBase';\r\nimport { InputFields } from './RowDataInputDialog';\r\n\r\nconst useStyles = makeVisitorTableStyles();\r\n\r\nexport type Columns<RowData> = {\r\n  title: string;\r\n  field: string;\r\n  type?: string;\r\n  cellStyle?: object | void;\r\n  render?: (rowData: RowData) => any;\r\n};\r\n\r\ntype DataTableProps<RowData> = {\r\n  inputFields: InputFields<RowData>;\r\n  columns: Columns<RowData>[];\r\n  dataDialogHook: {\r\n    state: DataDialogState;\r\n    dispatch: React.Dispatch<DataDialogAction>;\r\n  };\r\n};\r\n\r\nexport function DataTable<RowData extends object>(props: DataTableProps<RowData>) {\r\n  const { inputFields, columns, dataDialogHook } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // データ取得\r\n  const [{ data, isLoading, isError }, reload] = useLoadData<RowData[]>(`/${inputFields.type}/list`, []);\r\n\r\n  // 選択行の状態\r\n  const [currentRow, setCurrentRow] = useState<RowData | null>(null);\r\n\r\n  // ダイアログを開く\r\n  const handleDialogOpen = useCallback(\r\n    (selectedRow: RowData) => {\r\n      dataDialogHook.dispatch({ type: 'inputOpen' });\r\n      setCurrentRow(selectedRow);\r\n    },\r\n    [dataDialogHook]\r\n  );\r\n\r\n  // データ取得失敗した場合\r\n  if (isError) {\r\n    return <div>{t('common.msg.fetch-failed')}</div>;\r\n  }\r\n\r\n  return (\r\n    <DataTableBase<RowData> inputFields={inputFields} currentRow={currentRow} dataDialogHook={dataDialogHook} isLoading={isLoading} reload={reload}>\r\n      <MaterialTable\r\n        columns={columns as Column<RowData>[]}\r\n        components={{\r\n          // Row: (props) => <MTableBodyRow {...props} className={rowStyle(props.data)} />,\r\n          Cell: (props) => <MTableCell {...props} className={cellStyle(props.columnDef.field, props.rowData, classes)} />,\r\n        }}\r\n        data={data!}\r\n        onRowClick={(_event, selectedRow?) => !!selectedRow && handleDialogOpen(selectedRow)}\r\n        options={{\r\n          showTitle: false,\r\n          toolbar: false,\r\n          search: false,\r\n          headerStyle: { backgroundColor: tableTheme.palette.primary.light },\r\n          tableLayout: 'fixed',\r\n          ...pageingOntions,\r\n        }}\r\n        icons={tableIcons}\r\n      />\r\n    </DataTableBase>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { DataDialogAction } from './DataTableBase';\r\nimport { Mastertype } from './RowDataInputDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actionButtonArea: {\r\n    textAlign: 'right',\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nexport type Columns = {\r\n  title: string;\r\n  field: string;\r\n};\r\n\r\ntype HeaderActionsProps = {\r\n  master: Mastertype;\r\n  dispatch: React.Dispatch<DataDialogAction>;\r\n};\r\n\r\nexport function HeaderActions(props: HeaderActionsProps) {\r\n  const { master, dispatch } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // 新規作成ボタン\r\n  const handleCreateClick = (_event: React.ChangeEvent<{}>) => {\r\n    dispatch({ type: 'addDataOpen' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"stretch\" justifyContent=\"space-between\">\r\n        <Grid container item xs={12} sm={9}>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            {t(`settings.title.${master}`)}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.actionButtonArea}>\r\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircleIcon />} onClick={handleCreateClick}>\r\n            {t('settings.add-master')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { EmailAddress } from './User';\r\n\r\nexport const nameOfRoleType = ['admin', 'front'] as const;\r\nexport type RoleType = typeof nameOfRoleType[number];\r\nexport type Role = {\r\n  id: string;\r\n  name: RoleType;\r\n  members: EmailAddress[];\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { nameOfRoleType } from '_models/Role';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Role>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField\r\n        name={'name'}\r\n        control={control}\r\n        label={t('settings.header.role.name')}\r\n        required\r\n        selectList={nameOfRoleType.map((value) => {\r\n          return { label: t(`settings.view.role.name.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <AddrBookAutoComplete name={'members'} control={control} label={t('settings.header.role.members')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Role } from '_models/Role';\r\n\r\nexport function RoleSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Role>[] = [\r\n    {\r\n      title: t('settings.header.role.name'),\r\n      field: 'name',\r\n      render: (rowData) => t(`settings.view.role.name.${rowData.name}`),\r\n    },\r\n    // { title: t('settings.header.role.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Role> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: 'admin',\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"role\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Role>\r\n            inputFields={{ type: 'role', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Location>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.location.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'url'}\r\n        control={control}\r\n        label={t('settings.header.location.url')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            value: /^[a-z0-9]+$/,\r\n            message: t('settings.form.location.error.url.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.location.sort')} errors={errors} />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Location } from '_models/Location';\r\n\r\nexport function LocationSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Location>[] = [\r\n    { title: t('settings.header.location.name'), field: 'name' },\r\n    { title: t('settings.header.location.url'), field: 'url' },\r\n    { title: t('settings.header.location.sort'), field: 'sort' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Location> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    url: '',\r\n    sort: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"location\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Location>\r\n            inputFields={{ type: 'location', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\nimport { AddrBookAutoComplete } from '_components/AddrBookAutoComplete';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\nexport function DataInputs() {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Category>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // メンバー表示の制御用に限定公開スイッチを監視\r\n  const isLimitedPublic = useWatch({\r\n    control,\r\n    name: 'limitedPublic',\r\n  });\r\n\r\n  //メンバー表示の状態\r\n  const [showMembers, setShowMembers] = useState(false);\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    setShowMembers(isLimitedPublic);\r\n    if (!isLimitedPublic) {\r\n      setValue('members', []);\r\n    }\r\n  }, [isLimitedPublic, setValue]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.category.name')} required errors={errors} />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.category.sort')} errors={errors} />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'limitedPublic'}\r\n            control={control}\r\n            render={({ field }) => <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" />}\r\n          />\r\n        }\r\n        label={t('settings.header.category.limited-public')}\r\n      />\r\n      <AddrBookAutoComplete\r\n        name={'members'}\r\n        control={control}\r\n        label={t('settings.header.category.members')}\r\n        errors={errors}\r\n        style={!showMembers ? { display: 'none' } : undefined}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Category } from '_models/Category';\r\n\r\nexport function CategorySettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  const columns: Columns<Category>[] = [\r\n    { title: t('settings.header.category.name'), field: 'name' },\r\n    { title: t('settings.header.category.sort'), field: 'sort' },\r\n    { title: t('settings.header.category.limited-public'), field: 'limitedPublic', type: 'boolean' },\r\n    // { title: t('settings.header.category.members'), field: 'members' },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Category> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    sort: '',\r\n    limitedPublic: false,\r\n    members: [],\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"category\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Category>\r\n            inputFields={{ type: 'category', item: <DataInputs />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\r\n\r\nimport { ControllerTextField } from '_components/ControllerTextField';\r\n\r\nimport { nameOfRoomType, nameOfUsageRange, Room } from '_models/Room';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nimport { Inputs } from '../RowDataInputDialog';\r\n\r\ntype DataInputsProps = {\r\n  locations: Location[] | undefined;\r\n  categories: Category[] | undefined;\r\n};\r\n\r\nexport function DataInputs({ locations, categories }: DataInputsProps) {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext<Inputs<Room>>();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 給茶選択の制御\r\n  const [disabledTeaSupply, setDisabledTeaSupply] = useState(false);\r\n\r\n  // 給茶選択の制御用にタイプ選択を監視\r\n  const typeWatch = useWatch({ control, name: 'type' });\r\n\r\n  // 給茶選択のエフェクト\r\n  useEffect(() => {\r\n    if (typeWatch === 'free') {\r\n      setValue('teaSupply', false);\r\n      setDisabledTeaSupply(true);\r\n    } else {\r\n      setDisabledTeaSupply(false);\r\n    }\r\n  }, [setValue, typeWatch]);\r\n\r\n  return (\r\n    <>\r\n      <ControllerTextField name={'name'} control={control} label={t('settings.header.room.name')} required errors={errors} />\r\n      <ControllerTextField\r\n        name={'email'}\r\n        control={control}\r\n        label={t('settings.header.room.email')}\r\n        required\r\n        validation={{\r\n          pattern: {\r\n            // eslint-disable-next-line no-useless-escape\r\n            value: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n            message: t('settings.form.room.error.email.pattern'),\r\n          },\r\n        }}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField name={'sort'} control={control} label={t('settings.header.room.sort')} errors={errors} />\r\n      <ControllerTextField\r\n        name={'usageRange'}\r\n        control={control}\r\n        label={t('settings.header.room.usage-range')}\r\n        required\r\n        selectList={nameOfUsageRange.map((value) => {\r\n          return { label: t(`settings.view.room.usage-range.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'type'}\r\n        control={control}\r\n        label={t('settings.header.room.type')}\r\n        required\r\n        selectList={nameOfRoomType.map((value) => {\r\n          return { label: t(`settings.view.room.type.${value}`), value: value };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Controller\r\n            name={'teaSupply'}\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Switch onChange={(e) => field.onChange(e.target.checked)} checked={field.value} color=\"primary\" disabled={disabledTeaSupply} />\r\n            )}\r\n          />\r\n        }\r\n        label={t('settings.header.room.tea-supply')}\r\n        style={disabledTeaSupply ? { display: 'none' } : undefined}\r\n      />\r\n      <ControllerTextField\r\n        name={'location'}\r\n        control={control}\r\n        label={t('settings.header.room.location')}\r\n        required\r\n        selectList={locations?.map((location) => {\r\n          return { label: location.name, value: location.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n      <ControllerTextField\r\n        name={'category'}\r\n        control={control}\r\n        label={t('settings.header.room.category')}\r\n        required\r\n        selectList={categories?.map((category) => {\r\n          return { label: category.name, value: category.id };\r\n        })}\r\n        errors={errors}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Box, Paper } from '@material-ui/core';\r\n\r\nimport BaseTemplate from '../../_components/BaseTemplate';\r\nimport { Columns, DataTable } from '../DataTable';\r\nimport { dataDialogReducer, DataDialogState } from '../DataTableBase';\r\nimport { Inputs } from '../RowDataInputDialog';\r\nimport { HeaderActions } from '../HeaderActions';\r\nimport { DataInputs } from './DataInputs';\r\n\r\nimport { Room } from '_models/Room';\r\nimport { useLoadData } from '_utils/useLoadData';\r\nimport { Location } from '_models/Location';\r\nimport { Category } from '_models/Category';\r\n\r\nexport function RoomSettings() {\r\n  const { t } = useTranslation();\r\n\r\n  // ダイアログの初期値\r\n  const initialState: DataDialogState = {\r\n    mode: 'addData',\r\n    inputOpen: false,\r\n  };\r\n  // ダイアログの状態\r\n  const [dataDialogState, dataDialogDispatch] = useReducer(dataDialogReducer, initialState);\r\n\r\n  // ロケーションデータ取得\r\n  const [{ data: locations }] = useLoadData<Location[]>(`/location/choices`, []);\r\n\r\n  // カテゴリデータ取得\r\n  const [{ data: categories }] = useLoadData<Category[]>(`/category/choices`, []);\r\n\r\n  const columns: Columns<Room>[] = [\r\n    { title: t('settings.header.room.name'), field: 'name' },\r\n    // { title: t('settings.header.room.email'), field: 'email' },\r\n    { title: t('settings.header.room.sort'), field: 'sort' },\r\n    {\r\n      title: t('settings.header.room.usage-range'),\r\n      field: 'usageRange',\r\n      render: (rowData) => t(`settings.view.room.usage-range.${rowData.usageRange}`),\r\n    },\r\n    { title: t('settings.header.room.type'), field: 'type', render: (rowData) => t(`settings.view.room.type.${rowData.type}`) },\r\n    { title: t('settings.header.room.tea-supply'), field: 'teaSupply', type: 'boolean' },\r\n    {\r\n      title: t('settings.header.room.location'),\r\n      field: 'location',\r\n      render: (rowData) => {\r\n        const target = locations?.find((location) => location.id === rowData.location);\r\n        return target?.name;\r\n      },\r\n    },\r\n    {\r\n      title: t('settings.header.room.category'),\r\n      field: 'category',\r\n      render: (rowData) => {\r\n        const target = categories?.find((category) => category.id === rowData.category);\r\n        return target?.name;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues: Inputs<Room> = {\r\n    mode: 'ins',\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    usageRange: 'none',\r\n    type: 'rooms',\r\n    sort: '',\r\n    teaSupply: false,\r\n    location: '',\r\n    category: '',\r\n  };\r\n\r\n  return (\r\n    <BaseTemplate adminMode menuOpen>\r\n      <Paper square>\r\n        <Box p={2}>\r\n          <HeaderActions master=\"room\" dispatch={dataDialogDispatch}></HeaderActions>\r\n        </Box>\r\n        <Box p={2}>\r\n          <DataTable<Room>\r\n            inputFields={{ type: 'room', item: <DataInputs locations={locations} categories={categories} />, defaultValues: defaultValues }}\r\n            columns={columns}\r\n            dataDialogHook={{ state: dataDialogState, dispatch: dataDialogDispatch }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </BaseTemplate>\r\n  );\r\n}\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { SignIn } from 'login';\r\nimport { AuthorizeWrapper } from 'login/Authorize';\r\nimport { VisitList } from 'main/visitList';\r\nimport { ByRoom } from 'main/byRoom';\r\nimport { Front } from 'main/front';\r\nimport { RoleSettings } from 'master/role';\r\nimport { LocationSettings } from 'master/location';\r\nimport { CategorySettings } from 'master/category';\r\nimport { RoomSettings } from 'master/room';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/:location?/login\" component={SignIn} />\r\n        <Route exact path=\"/oauth/redirect\" component={AuthorizeWrapper} />\r\n        <Route exact path=\"/:location/main\" component={VisitList} />\r\n        <Route exact path=\"/:location/main/byroom\" component={ByRoom} />\r\n        <Route exact path=\"/:location/front\" component={Front} />\r\n        <Route exact path=\"/:location?/settings/role\" component={RoleSettings} />\r\n        <Route exact path=\"/:location?/settings/location\" component={LocationSettings} />\r\n        <Route exact path=\"/:location?/settings/category\" component={CategorySettings} />\r\n        <Route exact path=\"/:location?/settings/room\" component={RoomSettings} />\r\n        {/*** リダイレクト ***/}\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import format from 'date-fns/format';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaLocale from 'date-fns/locale/ja';\r\n\r\n/**\r\n * DateFnsUtilsを日本語表記に対応させます。\r\n */\r\nexport default class JaDateFnsUtils extends DateFnsUtils {\r\n  getCalendarHeaderText(date: Date) {\r\n    return format(date, 'Yo MMM', { locale: jaLocale });\r\n  }\r\n\r\n  getDatePickerHeaderText(date: Date) {\r\n    return format(date, 'MMMd日', { locale: jaLocale });\r\n  }\r\n}\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { theme } from './_styles/Theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Routes } from './Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport JaDateFnsUtils from '_utils/JaDateFnsUtils';\nimport jaLocale from 'date-fns/locale/ja';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={JaDateFnsUtils} locale={jaLocale}>\n        <Routes />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport enTranslation from './_locales/en/translation.json';\r\nimport jaTranslation from './_locales/ja/translation.json';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslation,\r\n  },\r\n  ja: {\r\n    translation: jaTranslation,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  lng: 'ja',\r\n  fallbackLng: 'ja',\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  react: {\r\n    // wait: true,\r\n    useSuspense: false,\r\n  },\r\n  resources: resources,\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}